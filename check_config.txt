Testing configuration at /config/.
INFO:homeassistant.util.package:Attempting install of pyhaversion==3.1.0
INFO:homeassistant.util.package:Attempting install of pyhaversion==3.3.0
Successful config (all)
  homeassistant:
    auth_providers: ?
      - trusted_networks: [source /config/./configuration.yaml:15]
          - 127.0.0.1
          - ::1
          - 192.168.1.0/24
        type: trusted_networks
      - type: homeassistant
    customize: ?
      sensor.pi_hole_status: ?
        icon: mdi:pi-hole
      sensor.pi_hole_version: ?
        icon: mdi:pi-hole
    customize_domain: ?
    customize_glob: ?
    elevation: 430
    latitude: -31.081265
    longitude: 150.941741
    name: TBSmartHome
    time_zone: Australia/Sydney
    unit_system: metric
    whitelist_external_dirs: ?
      - /config
  speedtestdotnet:
    manual: False
    monitored_conditions: ?
      - ping
      - download
      - upload
    scan_interval: 1:00:00
  ios:
  tts:
    - platform: google_translate
      cache: True
      cache_dir: tts
      language: en
      time_memory: 300
  binary_sensor:
    - platform: hadockermon
      containers: ?
      entity_namespace: vmTBSH01
      host: 192.168.1.61
      port: 8126
      ssl: False
      stats: True
      verify_ssl: False
    - platform: hadockermon
      containers: ?
      entity_namespace: vmTBSH02
      host: 192.168.1.62
      port: 8126
      ssl: False
      stats: True
      verify_ssl: False
    - platform: hadockermon
      containers: ?
      entity_namespace: TBSH01
      host: 192.168.1.20
      port: 8126
      ssl: False
      stats: True
      verify_ssl: False
    - platform: hadockermon
      containers: ?
      entity_namespace: vmTBSH03
      host: 192.168.1.63
      port: 8126
      ssl: False
      stats: True
      verify_ssl: False
    - platform: template
      sensors: ?
        servicestatus_pihole: ?
          entity_id: ?
            - sensor.pi_hole_status
          friendly_name: Pi-Hole (PiServ)
          icon_template: Template("{% if is_state('sensor.pi_hole_status', 'enabled') %}
  mdi:pi-hole
{% else %}
  mdi:pi-hole
{% endif %}")
          value_template: Template("{{ is_state('sensor.pi_hole_status', 'enabled') }}")
    - platform: template
      sensors: ?
        fire_ban_today: ?
          device_class: safety
          entity_id: ?
            - sensor.fire_danger_in_northern_slopes
          friendly_name: Fire Ban Today
          value_template: Template("{{ state_attr('sensor.fire_danger_in_northern_slopes', 'fire_ban_today') | title }}")
        fire_ban_tomorrow: ?
          device_class: safety
          entity_id: ?
            - sensor.fire_danger_in_northern_slopes
          friendly_name: Fire Ban Tomorrow
          value_template: Template("{{ state_attr('sensor.fire_danger_in_northern_slopes', 'fire_ban_tomorrow') | title }}")
    - platform: digital_ocean
      droplets: ?
        - mspy-discourse-2017
    - platform: iss
      name: ISS
      show_on_map: False
    - platform: sun2
      monitored_conditions: ?
        - elevation: ?
            above: -0.833
            name: Above Horizon
        - elevation: ?
            above: 25.0
            name: Sun Above 25
    - platform: template
      sensors: ?
        networkstatus_amazonalexaplus: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.amazon_alexa_plus', 'home') %}
  IP: {{ states.device_tracker.amazon_alexa_plus.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.amazon_alexa_plus
          friendly_name: Amazon Alexa Plus
          icon_template: Template("{% if is_state('device_tracker.amazon_alexa_plus', 'home') %}
  mdi:amazon-alexa
{% else %}
  mdi:amazon-alexa
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.amazon_alexa_plus', 'home') }}")
        networkstatus_amazonfirestick: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.amazon_fire_stick', 'home') %}
  IP: {{ states.device_tracker.amazon_fire_stick.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.amazon_fire_stick
          friendly_name: Amazon Fire Stick
          icon_template: Template("{% if is_state('device_tracker.amazon_fire_stick', 'home') %}
  si:amazonfiretv
{% else %}
  si:amazonfiretv
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.amazon_fire_stick', 'home') }}")
        networkstatus_appletv: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.appletvbedroom', 'home') %}
  IP: {{ states.device_tracker.appletvbedroom.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.appletvbedroom
          friendly_name: Apple TV (Bedroom)
          icon_template: Template("{% if is_state('device_tracker.appletvbedroom', 'home') %}
  mdi:airplay
{% else %}
  mdi:airplay
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.appletvbedroom', 'home') }}")
        networkstatus_foxtelnowbox: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.android_6c38e10f6ba1d4fc', 'home') %}
  IP: {{ states.device_tracker.android_6c38e10f6ba1d4fc.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.android_6c38e10f6ba1d4fc
          friendly_name: Foxtel Now Box
          icon_template: Template("{% if is_state('device_tracker.android_6c38e10f6ba1d4fc', 'home') %}
  mdi:android
{% else %}
  mdi:android
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.android_6c38e10f6ba1d4fc', 'home') }}")
        networkstatus_googlenesthub: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.google_home_hub', 'home') %}
  IP: {{ states.device_tracker.google_home_hub.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.google_home_hub
          friendly_name: Google Home - Nest Hub
          icon_template: Template("{% if is_state('device_tracker.google_home_hub', 'home') %}
  mdi:google-home
{% else %}
  mdi:google-home
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.google_home_hub', 'home') }}")
        networkstatus_googlenestmini: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.google_nest_mini', 'home') %}
  IP: {{ states.device_tracker.google_nest_mini.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.google_nest_mini
          friendly_name: Google Home - Nest Mini
          icon_template: Template("{% if is_state('device_tracker.google_nest_mini', 'home') %}
  si:googleassistant
{% else %}
  si:googleassistant
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.google_nest_mini', 'home') }}")
        networkstatus_harmonyhub: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.harmonyhub', 'home') %}
  IP: {{ states.device_tracker.harmonyhub.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.harmonyhub
          friendly_name: Harmony Hub
          icon_template: Template("{% if is_state('device_tracker.harmonyhub', 'home') %}
  mdi:remote
{% else %}
  mdi:remote
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.harmonyhub', 'home') }}")
        networkstatus_hdhomerun: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.hdhomerun', 'home') %}
  IP: {{ states.device_tracker.hdhomerun.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.hdhomerun
          friendly_name: HDHomeRun
          icon_template: Template("{% if is_state('device_tracker.hdhomerun', 'home') %}
  mdi:television-box
{% else %}
  mdi:television-box
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.hdhomerun', 'home') }}")
        networkstatus_nas_thecube2: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.thecube2', 'home') %}
  IP: {{ states.device_tracker.thecube2.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.thecube2
          friendly_name: Synology NAS (TheCube2)
          icon_template: Template("{% if is_state('device_tracker.thecube2', 'home') %}
  mdi:nas
{% else %}
  mdi:nas
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.thecube2', 'home') }}")
        networkstatus_netatmoweather: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.netatmo', 'home') %}
  IP: {{ states.device_tracker.netatmo.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.netatmo_personal_weather_statio
          friendly_name: Netatmo Weather Station
          icon_template: Template("{% if is_state('device_tracker.netatmo', 'home') %}
  mdi:weather-cloudy-alert
{% else %}
  mdi:weather-cloudy-alert
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.netatmo', 'home') }}")
        networkstatus_router: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.usg', 'home') %}
  IP: {{ states.device_tracker.usg.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.usg
          friendly_name: UniFi USG
          icon_template: Template("{% if is_state('device_tracker.usg', 'home') %}
  mdi:router-wireless
{% else %}
  mdi:router-wireless
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.usg', 'home') }}")
        networkstatus_sonos: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.sonos_lounge_room', 'home') %}
  IP: {{ states.device_tracker.sonos_lounge_room.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.sonos_lounge_room
          friendly_name: Sonos Play:1 (Bedroom)
          icon_template: Template("{% if is_state('device_tracker.sonos_lounge_room', 'home') %}
  si:sonos
{% else %}
  si:sonos
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.sonos_lounge_room', 'home') }}")
        networkstatus_switch: ?
          attribute_templates: ?
            ip_address: Template("IP Address Not Available")
          entity_id: ?
            - device_tracker.hateful8
          friendly_name: UniFi Switch - 8 Port 60W (Hateful8)
          icon_template: Template("{% if is_state('device_tracker.hateful8', 'home') %}
  mdi:switch
{% else %}
  mdi:switch
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.hateful8', 'home') }}")
        networkstatus_wifi: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.ufo', 'home') %}
  IP: {{ states.device_tracker.ufo.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.ufo
          friendly_name: UniFi WiFi - AP-AC-Lite (UFO)
          icon_template: Template("{% if is_state('device_tracker.ufo', 'home') %}
  mdi:access-point
{% else %}
  mdi:access-point
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.ufo', 'home') }}")
        networkstatus_xboxone: ?
          attribute_templates: ?
            ip_address: Template("{% if is_state('device_tracker.xboxone', 'home') %}
  IP: {{ states.device_tracker.xboxone.attributes['ip'] }}
{% else %}
  IP Address Not Available
{% endif %}")
          entity_id: ?
            - device_tracker.xboxone
          friendly_name: Xbox One
          icon_template: Template("{% if is_state('device_tracker.xboxone', 'home') %}
  si:xbox
{% else %}
  si:xbox
{% endif %}")
          value_template: Template("{{ is_state('device_tracker.xboxone', 'home') }}")
    - platform: tod
      after: sunrise
      after_offset: -1 day, 22:00:00
      before: 07:00:00
      before_offset: 0:00:00
      name: Early Morning
    - platform: tod
      after: 10:00:00
      after_offset: 0:00:00
      before: 12:00:00
      before_offset: 0:00:00
      name: Late Morning
    - platform: tod
      after: sunset
      after_offset: 0:00:00
      before: sunrise
      before_offset: 0:00:00
      name: Night
    - platform: tod
      after: sunrise
      after_offset: 0:00:00
      before: sunset
      before_offset: 0:00:00
      name: Day
    - platform: tod
      after: 07:00:00
      after_offset: 0:00:00
      before: 17:00:00
      before_offset: 0:00:00
      name: Work
    - platform: template
      sensors: ?
        ha_update_available: ?
          friendly_name: HA Update Available
          icon_template: Template("mdi:home-assistant")
          value_template: Template("{{ states('sensor.ha_latest_version') != 'unavailable' and states('sensor.ha_latest_version') > states('sensor.ha_current_version') }}")
  geo_location:
    - platform: nsw_rural_fire_service_feed
      categories: ?
        - Emergency Warning
        - Watch and Act
        - Advice
        - Not Applicable
      entity_namespace: nswrfs
      radius: 100.0
  iaquk:
    bedroom: ?
      sensors: ?
        - iaq_level
        - iaq_index
      sources: ?
        humidity: sensor.zha_bedroom_humidity
        temperature: sensor.zha_bedroom_temperature
    lounge: ?
      sensors: ?
        - iaq_level
        - iaq_index
      sources: ?
        co2: sensor.netatmo_brisbane_street_indoor_co2
        humidity: sensor.netatmo_brisbane_street_indoor_humidity
        temperature: sensor.netatmo_brisbane_street_indoor_temperature
    office: ?
      sensors: ?
        - iaq_level
        - iaq_index
      sources: ?
        humidity: sensor.zha_office_humidity
        temperature: sensor.zha_office_temperature
  alexa_media:
    accounts: ?
      - debug: False
        email: thomas@thomasbaxter.info
        exclude_devices: ?
          - This Device
          - Bedroom Sonos
          - Thomas's Echo Dot
        include_devices: ?
        password: McLarenMP4-24
        scan_interval: 0:00:30
        url: amazon.com.au
  homekit:
    - auto_start: True
      entity_config: ?
      filter: ?
        exclude_domains: ?
        exclude_entities: ?
        include_domains: ?
        include_entities: ?
          - binary_sensor.zha_office_motion
          - light.zha_office_light
          - media_player.bedroom_sonos
          - sensor.zha_bedroom_temperature
          - sensor.zha_office_temperature
          - sensor.zha_laundry_temperature
      name: Home Assistant
      port: 51827
      safe_mode: False
      zeroconf_default_interface: False
  notify:
    - platform: file
      filename: found_addon_slugs.txt
      name: Update found addon slugs
      timestamp: False
    - platform: slack
      api_key: xoxb-535992903990-553468701795-X3vFeiKkKYfZoZAAtGZ03ZOL
      default_channel: #tbsmarthome
      icon: :house:
      name: Slack
      username: Home Assistant
  anniversaries:
    sensors: ?
      - date: 1985-02-13
        date_format: %a %b %-d %Y
        days_as_soon: 1
        icon_normal: mdi:calendar-blank
        icon_soon: mdi:calendar
        icon_today: mdi:calendar-star
        id_prefix: anniversary_
        name: datetracking_mybirthday
        one_time: False
        show_half_anniversary: False
        unit_of_measurement: Days
      - date: 2002-11-12
        date_format: %a %b %-d %Y
        days_as_soon: 1
        icon_normal: mdi:calendar-blank
        icon_soon: mdi:calendar
        icon_today: mdi:calendar-star
        id_prefix: anniversary_
        name: datetracking_myworkbirthday
        one_time: False
        show_half_anniversary: False
        unit_of_measurement: Days
      - date: 1988-03-02
        date_format: %a %b %-d %Y
        days_as_soon: 1
        icon_normal: mdi:calendar-blank
        icon_soon: mdi:calendar
        icon_today: mdi:calendar-star
        id_prefix: anniversary_
        name: datetracking_henrybirthday
        one_time: False
        show_half_anniversary: False
        unit_of_measurement: Days
      - date: 1997-04-14
        date_format: %a %b %-d %Y
        days_as_soon: 1
        icon_normal: mdi:calendar-blank
        icon_soon: mdi:calendar
        icon_today: mdi:calendar-star
        id_prefix: anniversary_
        name: datetracking_patrickbirthday
        one_time: False
        show_half_anniversary: False
        unit_of_measurement: Days
      - date: 1958-04-26
        date_format: %a %b %-d %Y
        days_as_soon: 1
        icon_normal: mdi:calendar-blank
        icon_soon: mdi:calendar
        icon_today: mdi:calendar-star
        id_prefix: anniversary_
        name: datetracking_mumbirthday
        one_time: False
        show_half_anniversary: False
        unit_of_measurement: Days
      - date: 1957-04-26
        date_format: %a %b %-d %Y
        days_as_soon: 1
        icon_normal: mdi:calendar-blank
        icon_soon: mdi:calendar
        icon_today: mdi:calendar-star
        id_prefix: anniversary_
        name: datetracking_dadbirthday
        one_time: False
        show_half_anniversary: False
        unit_of_measurement: Days
      - date: 1994-12-21
        date_format: %a %b %-d %Y
        days_as_soon: 1
        icon_normal: mdi:calendar-blank
        icon_soon: mdi:calendar
        icon_today: mdi:calendar-star
        id_prefix: anniversary_
        name: datetracking_katebirthday
        one_time: False
        show_half_anniversary: False
        unit_of_measurement: Days
      - date: 2018-10-05
        date_format: %a %b %-d %Y
        days_as_soon: 1
        icon_normal: mdi:calendar-blank
        icon_soon: mdi:calendar
        icon_today: mdi:calendar-star
        id_prefix: anniversary_
        name: datetracking_marleybirthday
        one_time: False
        show_half_anniversary: False
        unit_of_measurement: Days
      - date: 1988-09-01
        date_format: %a %b %-d %Y
        days_as_soon: 1
        icon_normal: mdi:calendar-blank
        icon_soon: mdi:calendar
        icon_today: mdi:calendar-star
        id_prefix: anniversary_
        name: datetracking_leahbirthday
        one_time: False
        show_half_anniversary: False
        unit_of_measurement: Days
  media_player:
    - platform: xboxone
      authentication: True
      device: FD009634F69F319F
      host: localhost
      ip_address: 
      name: Xbox One
      port: 5557
      ssl: False
    - platform: androidtv
      adb_server_ip: 127.0.0.1
      adb_server_port: 5037
      adbkey: /config/.androidkeys/adbkey
      apps: ?
        au.com.kayosports.tv: Kayo Sports
        au.com.ninenow.ctv: 9Now
        au.com.optus.sport.androidtv: Optus Sport
        au.com.stan.and: Stan
        au.com.tenplay: 10play
        au.net.abc.iview: ABC iView
        com.android.tv: Live TV
        com.netflix.ninja: Netflix
        com.sbs.ondemand.tv: SBS On Demand
        com.spotify.tv.android: Spotify
        com.swm.live: 7plus
        foxtelnow.box.launcher: Foxtel Now Launcher
        org.xbmc.kodi: Kodi
        tunein.player: TuneIn
      device_class: androidtv
      exclude_unnamed_apps: False
      get_sources: True
      host: 192.168.1.70
      name: Foxtel Now Box
      port: 5555
      screencap: True
      state_detection_rules: ?
        com.plexapp.android: [source /config/./packages/media/androidtv.yaml:30]
          - paused: [source /config/./packages/media/androidtv.yaml:31]
              media_session_state: 3
              wake_lock_size: 1
          - playing: [source /config/./packages/media/androidtv.yaml:34]
              media_session_state: 3
          - standby
        foxtelnow.box.launcher: [source /config/./packages/media/androidtv.yaml:28]
          - idle
  google:
    client_id: 327072154861-oklrprisg00vj1rbnpnl5u87hfgbdq67.apps.googleusercontent.com
    client_secret: YhYWI8MK1TmiaGZ8QQusqab0
  camera:
    - platform: generic
      authentication: basic
      content_type: image/jpeg
      framerate: 2
      limit_refetch_to_url_change: False
      name: BOM Satellite
      still_image_url: Template("http://www.bom.gov.au/gms/IDE00135.jpg")
      stream_source: None
      verify_ssl: True
    - platform: bom
      filename: /config/www/images/radar_namoi_128km.gif
      frames: 10
      location: Namoi
      name: Namoi128km
    - platform: bom
      delta: 600
      filename: /config/www/images/radar_moree_256km.gif
      frames: 10
      id: 532
      name: Moree256km
  frontend:
    themes: ?
      dark: ?
        accent-color: #00b59d
        accent-medium-color: var(--accent-color)
        app-header-background-color: var(--paper-card-background-color)
        area-color-off: AliceBlue
        area-color-on: Gray
        background-color: #3b4049
        background-color-2: #383e47
        border-color: #333333
        card-background-color: var(--paper-card-background-color)
        card-color-off: linear-gradient(to bottom right, #555555, #444444)
        card-color-on: rgba(255, 255, 255, 1.0)
        ch-active-tab-color: var(--accent-color)
        ch-all-tabs-color: var(--sidebar-icon-color)
        ch-background: rgba(69, 74, 83, 0.8)
        ch-notification-dot-color: var(--accent-color)
        ch-tab-indicator-color: var(--accent-color)
        custom-red: rgba(255,102,102,0.5)
        custom-teal: rgba(0,196,172,0.5)
        divider-color: var(--background-color)
        ha-card-border-radius: 3px
        ha-card-box-shadow: 0px 0px 0px 0px
        icon-color-off: AliceBlue
        icon-color-on: Gray
        iron-overlay-backdrop-background-color: rgba(0,0,0,0.25)
        iron-overlay-backdrop-filter: blur(10px) grayscale(50%)
        label-color-off: AliceBlue
        label-color-on: Gray
        light-primary-color: var(--accent-color)
        lock-color-off: AliceBlue
        lock-color-on: Gray
        mdc-theme-primary: var(--accent-color)
        name-color-off: AliceBlue
        name-color-on: Black
        paper-card-background-color: rgba(67, 73, 82, 1)
        paper-font-body1_-_font-family: var(--primary-font-family)
        paper-font-caption_-_font-family: var(--primary-font-family)
        paper-font-common-base_-_font-family: var(--primary-font-family)
        paper-font-common-code_-_font-family: var(--primary-font-family)
        paper-font-headline_-_font-family: var(--primary-font-family)
        paper-font-subhead_-_font-family: var(--primary-font-family)
        paper-font-title_-_font-family: var(--primary-font-family)
        paper-item-icon-active-color: var(--accent-color)
        paper-item-icon-color: var(--text-color)
        paper-listbox-background-color: rgba(69, 74, 83, 1)
        paper-slider-active-color: var(--border-color)
        paper-slider-container-color: var(--paper-card-background-color)
        paper-slider-knob-color: var(--accent-color)
        paper-slider-pin-color: var(--border-color)
        paper-toggle-button-checked-bar-color: var(--accent-color)
        primary-background-color: var(--background-color)
        primary-color: var(--secondary-text-color)
        primary-font-family: SF Display,sans-serif
        primary-text-color: var(--text-color)
        secondary-background-color: var(--background-color-2)
        secondary-text-color: #BAC0C6
        sidebar-icon-color: var(--secondary-text-color)
        sidebar-selected-icon-color: var(--accent-color)
        sidebar-selected-text-color: var(--text-color)
        state-color-off: AliceBlue
        state-color-on: Black
        switch-checked-button-color: var(--accent-color)
        switch-checked-track-color: var(--border-color)
        switch-unchecked-color: var(--text-medium-color)
        switch-unchecked-track-color: var(--border-color)
        text-color: #ffffff
        text-medium-color: #80828A
        text-medium-light-color: #A0A2A8
        text-primary-color: var(--text-color)
        time-font-family: Montserrat
        title-font-family: SF Display,sans-serif
      dark_teal: ?
        accent-color: #00b59d
        accent-medium-color: var(--accent-color)
        app-header-background-color: var(--paper-card-background-color)
        background-color: #3b4049
        background-color-2: #383e47
        border-color: #333333
        card-background-color: var(--paper-card-background-color)
        ch-active-tab-color: var(--accent-color)
        ch-all-tabs-color: var(--sidebar-icon-color)
        ch-background: rgba(69, 74, 83, 0.8)
        ch-notification-dot-color: var(--accent-color)
        ch-tab-indicator-color: var(--accent-color)
        divider-color: var(--background-color)
        ha-card-border-radius: 3px
        ha-card-box-shadow: 0px 0px 0px 0px
        light-primary-color: var(--accent-color)
        mdc-theme-primary: var(--accent-color)
        paper-card-background-color: rgba(67, 73, 82, 1)
        paper-font-body1_-_font-family: var(--primary-font-family)
        paper-font-caption_-_font-family: var(--primary-font-family)
        paper-font-common-base_-_font-family: var(--primary-font-family)
        paper-font-common-code_-_font-family: var(--primary-font-family)
        paper-font-headline_-_font-family: var(--primary-font-family)
        paper-font-subhead_-_font-family: var(--primary-font-family)
        paper-font-title_-_font-family: var(--primary-font-family)
        paper-item-icon-active-color: var(--accent-color)
        paper-item-icon-color: var(--text-color)
        paper-listbox-background-color: rgba(69, 74, 83, 1)
        paper-slider-active-color: var(--border-color)
        paper-slider-container-color: var(--paper-card-background-color)
        paper-slider-knob-color: var(--accent-color)
        paper-slider-pin-color: var(--border-color)
        paper-toggle-button-checked-bar-color: var(--accent-color)
        primary-background-color: var(--background-color)
        primary-color: var(--secondary-text-color)
        primary-font-family: Raleway,sans-serif
        primary-text-color: var(--text-color)
        secondary-background-color: var(--background-color-2)
        secondary-text-color: #BAC0C6
        sidebar-icon-color: var(--secondary-text-color)
        sidebar-selected-icon-color: var(--accent-color)
        sidebar-selected-text-color: var(--text-color)
        switch-checked-button-color: var(--accent-color)
        switch-checked-track-color: var(--border-color)
        switch-unchecked-color: var(--text-medium-color)
        switch-unchecked-track-color: var(--border-color)
        text-color: #ffffff
        text-medium-color: #80828A
        text-medium-light-color: #A0A2A8
        text-primary-color: var(--text-color)
      dwains-theme-black: ?
        app-header-background-color: #121212
        background-image: var(--dwains-theme-background)
        card-background-color: var(--dwains-theme-primary)
        ch-active-tab-color: var(--dwains-theme-accent)
        ch-all-tabs-color: var(--dwains-theme-grey)
        ch-background: var(--dwains-theme-primary)
        ch-tab-indicator-color: var(--dwains-theme-accent)
        dwains-theme-accent: #299ec2
        dwains-theme-background: #000000
        dwains-theme-grey: #ffffff
        dwains-theme-header-background: var(--dwains-theme-primary)
        dwains-theme-header-button-background: #1c1c1e
        dwains-theme-header-button-text: #f2f2f7
        dwains-theme-header-text: var(--dwains-theme-names)
        dwains-theme-names: #f2f2f7
        dwains-theme-primary: #121212
        mdc-theme-primary: var(--dwains-theme-grey)
        more-info-header-background: var(--dwains-theme-header-background)
        more-info-header-color: var(--dwains-theme-header-text)
        paper-card-background-color: #36373a
        paper-card-header-color: var(--primary-text-color)
        paper-dialog-background-color: #36373a
        paper-item-icon-active-color: #F9C536
        paper-item-icon-color: var(--primary-text-color)
        paper-item-icon_-_color: var(--primary-text-color)
        paper-item-selected_-_background-color: #36373a
        paper-listbox-background-color: #121314
        paper-tabs-selection-bar-color: var(--primary-text-color)
        primary-background-color: #28292b
        primary-color: var(--dwains-theme-primary)
        primary-font-family: Open Sans
        primary-text-color: var(--dwains-theme-names)
        secondary-background-color: var(--dwains-theme-primary)
        secondary-text-color: var(--primary-text-color)
        sidebar-icon-color: #d0d0d0
        sidebar-selected-icon-color: #307aff
        sidebar-selected-text-color: #ffffff
        switch-checked-button-color: var(--dwains-theme-names)
        switch-checked-track-color: #515357
        switch-unchecked-button-color: #616161
        switch-unchecked-track-color: #131314
        table-row-alternative-background-color: var(--dwains-theme-primary)
        text-primary-color: var(--primary-text-color)
      dwains-theme-dark: ?
        background-image: var(--dwains-theme-background)
        card-background-color: var(--dwains-theme-primary)
        ch-active-tab-color: var(--dwains-theme-accent)
        ch-all-tabs-color: var(--dwains-theme-grey)
        ch-background: #1d1d1f
        ch-tab-indicator-color: var(--dwains-theme-accent)
        dwains-theme-accent: #2fbae5
        dwains-theme-background: #1c1c1e
        dwains-theme-grey: #6c6c75
        dwains-theme-header-background: var(--dwains-theme-primary)
        dwains-theme-header-button-background: #1c1c1e
        dwains-theme-header-button-text: #f2f2f7
        dwains-theme-header-text: var(--dwains-theme-names)
        dwains-theme-names: #f2f2f7
        dwains-theme-primary: #262628
        mdc-theme-primary: var(--dwains-theme-grey)
        more-info-header-background: var(--dwains-theme-header-background)
        more-info-header-color: var(--dwains-theme-header-text)
        paper-card-background-color: #36373a
        paper-card-header-color: var(--primary-text-color)
        paper-dialog-background-color: #36373a
        paper-item-icon-active-color: #F9C536
        paper-item-icon-color: var(--primary-text-color)
        paper-item-icon_-_color: var(--primary-text-color)
        paper-item-selected_-_background-color: #36373a
        paper-listbox-background-color: #121314
        paper-tabs-selection-bar-color: var(--primary-text-color)
        primary-background-color: #28292b
        primary-color: var(--dwains-theme-primary)
        primary-font-family: Open Sans
        primary-text-color: var(--dwains-theme-names)
        secondary-background-color: var(--dwains-theme-primary)
        secondary-text-color: var(--primary-text-color)
        sidebar-icon-color: #d0d0d0
        sidebar-selected-icon-color: #307aff
        sidebar-selected-text-color: #ffffff
        switch-checked-button-color: var(--dwains-theme-names)
        switch-checked-track-color: #515357
        switch-unchecked-button-color: #616161
        switch-unchecked-track-color: #131314
        table-row-alternative-background-color: var(--dwains-theme-primary)
        text-primary-color: var(--primary-text-color)
      dwains-theme-light: ?
        background-image: var(--dwains-theme-background)
        ch-active-tab-color: var(--dwains-theme-accent)
        ch-all-tabs-color: var(--dwains-theme-grey)
        ch-background: #ffffff
        ch-tab-indicator-color: var(--dwains-theme-accent)
        dwains-theme-accent: #2fbae5
        dwains-theme-background: #f2f2f7
        dwains-theme-grey: #adadb7
        dwains-theme-header-background: #262628
        dwains-theme-header-button-background: #1c1c1e
        dwains-theme-header-button-text: #f2f2f7
        dwains-theme-header-text: #f2f2f7
        dwains-theme-names: #101012
        dwains-theme-primary: #FFFFFF
        more-info-header-background: var(--dwains-theme-header-background)
        more-info-header-color: var(--dwains-theme-header-text)
        primary-color: var(--dwains-theme-header-background)
        primary-font-family: Open Sans
      dwains-theme-white: ?
        background-image: var(--dwains-theme-background)
        ch-active-tab-color: var(--dwains-theme-accent)
        ch-all-tabs-color: var(--dwains-theme-grey)
        ch-background: #ffffff
        ch-tab-indicator-color: var(--dwains-theme-accent)
        dwains-theme-accent: #299ec2
        dwains-theme-background: #ffffff
        dwains-theme-grey: #262626
        dwains-theme-header-background: #fafafa
        dwains-theme-header-button-background: #e3e3e3
        dwains-theme-header-button-text: #262626
        dwains-theme-header-text: var(--dwains-theme-names)
        dwains-theme-names: #262626
        dwains-theme-primary: #fafafa
        ha-card-box-shadow: none
        more-info-header-background: var(--dwains-theme-header-background)
        more-info-header-color: var(--dwains-theme-header-text)
        primary-color: var(--dwains-theme-header-background)
        primary-font-family: Open Sans
        text-primary-color: var(--dwains-theme-header-text)
  proxmoxve:
    - host: 192.168.1.60
      nodes: ?
        - containers: ?
          node: pveTBSH
          vms: ?
            - 100
            - 101
            - 102
      password: RedbullRB8
      port: 8006
      realm: pam
      username: root
      verify_ssl: False
  discovery:
    enable: ?
    ignore: ?
  script:
    check_config: ?
      alias: Check Configuration
      description: 
      fields: ?
      sequence: ?
  netatmo:
    client_id: 5c2d53e74c6ab60c2c90312b
    client_secret: hivk5qQPlC51V8V87DaiMNwzBypk1NmhDihyu1B3
  hacs:
    appdaemon: True
    country: ALL
    debug: False
    experimental: False
    frontend_repo: 
    frontend_repo_url: 
    netdaemon: True
    release_limit: 5
    sidepanel_icon: hacs:hacs
    sidepanel_title: HACS
    token: c13c9431cfa023eb53dbd9636f67d17278120119
  readme:
  docker_monitor:
    hosts: ?
      - containers: ?
          jackett: ?
            sensors: ?
              - status
              - uptime
              - image
              - cpu_percentage_usage
              - memory_usage
              - memory_percentage_usage
              - network_total_up
              - network_total_down
            switch: True
          radarr: ?
            sensors: ?
              - status
              - uptime
              - image
              - cpu_percentage_usage
              - memory_usage
              - memory_percentage_usage
              - network_total_up
              - network_total_down
            switch: True
          sonarr: ?
            sensors: ?
              - status
              - uptime
              - image
              - cpu_percentage_usage
              - memory_usage
              - memory_percentage_usage
              - network_total_up
              - network_total_down
            switch: True
          transmission: ?
            sensors: ?
              - status
              - uptime
              - image
              - cpu_percentage_usage
              - memory_usage
              - memory_percentage_usage
              - network_total_up
              - network_total_down
            switch: True
        event: False
        monitored_conditions: ?
          - version
          - containers_total
          - containers_paused
          - containers_running
          - containers_stopped
          - images_total
        name: docker_vmTBSH01
        scan_interval: 0:00:10
        url: tcp://192.168.1.61:2375
      - containers: ?
        event: False
        monitored_conditions: ?
          - version
          - containers_total
          - containers_paused
          - containers_running
          - containers_stopped
          - images_total
        name: docker_vmTBSH02
        scan_interval: 0:00:10
        url: tcp://192.168.1.62:2375
      - containers: ?
        event: False
        monitored_conditions: ?
          - version
          - containers_total
          - containers_paused
          - containers_running
          - containers_stopped
          - images_total
        name: docker_TBSH01
        scan_interval: 0:00:10
        url: tcp://192.168.1.20:2375
      - containers: ?
        event: False
        monitored_conditions: ?
          - version
          - containers_total
          - containers_paused
          - containers_running
          - containers_stopped
          - images_total
        name: docker_vmTBSH03
        scan_interval: 0:00:10
        url: unix://var/run/docker.sock
  switch:
    - platform: hadockermon
      containers: ?
      entity_namespace: vmTBSH01
      host: 192.168.1.61
      port: 8126
      ssl: False
      verify_ssl: False
    - platform: hadockermon
      containers: ?
      entity_namespace: vmTBSH02
      host: 192.168.1.62
      port: 8126
      ssl: False
      verify_ssl: False
    - platform: hadockermon
      containers: ?
      entity_namespace: TBSH01
      host: 192.168.1.20
      port: 8126
      ssl: False
      verify_ssl: False
    - platform: hadockermon
      containers: ?
      entity_namespace: vmTBSH03
      host: 192.168.1.63
      port: 8126
      ssl: False
      verify_ssl: False
    - platform: command_line
      scan_interval: 0:00:05
      switches: ?
        pihole_switch: ?
          command_off: curl -X GET 'http://192.168.1.40/admin/api.php?disable=600&auth='
          command_on: curl -X GET 'http://192.168.1.40/admin/api.php?enable&auth='
          command_state: curl -X GET 'http://192.168.1.40/admin/api.php?status&auth='
          friendly_name: Ad Blocking
          value_template: Template("{{ value_json.status == 'enabled' }}")
    - platform: template
      switches: ?
        harmonyhub: ?
          entity_id: ?
            - sensor.harmonyhub_status
          friendly_name: Bedroom TV
          turn_off: ?
            - entity_id: ?
                - remote.harmony_hub
              service: remote.turn_off
          turn_on: ?
            - entity_id: ?
                - remote.harmony_hub
              service: remote.turn_on
          value_template: Template("{{ states.sensor.harmonyhub_status.state != "PowerOff" }}")
  history:
    exclude: ?
    include: ?
    use_include_order: False
  sensor:
    - platform: netdata
      entity_namespace: netdata
      host: 192.168.1.60
      name: pveTBSH
      port: 19999
      resources: ?
        system_cpu_idle: ?
          data_group: system.cpu
          element: idle
          icon: mdi:chip
          invert: False
        system_load_1: ?
          data_group: system.load
          element: load1
          icon: mdi:desktop-classic
          invert: False
        system_load_15: ?
          data_group: system.load
          element: load15
          icon: mdi:desktop-classic
          invert: False
        system_load_5: ?
          data_group: system.load
          element: load5
          icon: mdi:desktop-classic
          invert: False
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/server/pi_hole.yaml:9]
        - core_update
        - web_update
        - FTL_update
        - core_current
        - web_current
        - FTL_current
        - core_latest
        - web_latest
        - FTL_latest
      method: GET
      name: Pi-Hole Version
      resource: http://192.168.1.40/admin/api.php?versions
      timeout: 10
      value_template: Template("{{ value_json["core_update"] }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/server/pi_hole.yaml:24]
        - value_json
      method: GET
      name: Pi-Hole Status
      resource: http://192.168.1.40/admin/api.php?status
      timeout: 10
      value_template: Template("{{ value_json["status"] }}")
      verify_ssl: True
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.2.1.1.3.0
      community: public
      host: 192.168.1.1
      name: USG Uptime
      port: 161
      priv_protocol: none
      value_template: Template("{%- set time = value | int // 100 %} {%- set minutes = ((time % 3600) // 60) %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.2.1.25.1.1.0
      community: public
      host: 192.168.1.100
      name: TheCube2 Uptime
      port: 161
      priv_protocol: none
      value_template: Template("{%- set time = value | int // 100 %} {%- set minutes = ((time % 3600) // 60) %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.4.1.6574.1.5.3.0
      community: public
      host: 192.168.1.100
      name: synology_dsm_version
      port: 161
      priv_protocol: none
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.4.1.6574.1.5.4.0
      community: public
      host: 192.168.1.100
      name: synology_dsm_update
      port: 161
      priv_protocol: none
      value_template: Template("{% set update = value | int %} {% if update == 1 %} Update is available {% elif update == 2 %} Latest version is installed {% elif update == 3 %} Connecting {% elif update == 4 %} Disconnected {% elif update == 5 %} Others {% else %} --- {% endif %}
")
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.4.1.6574.1.2.0
      community: public
      host: 192.168.1.100
      name: synology_temperature
      port: 161
      priv_protocol: none
      unit_of_measurement: °C
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.2.1.1.3.0
      community: public
      host: 192.168.1.44
      name: Hateful8 Uptime
      port: 161
      priv_protocol: none
      value_template: Template("{%- set time = value | int // 100 %} {%- set minutes = ((time % 3600) // 60) %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.2.1.1.3.0
      community: public
      host: 192.168.1.27
      name: UFO Uptime
      port: 161
      priv_protocol: none
      value_template: Template("{%- set time = value | int // 100 %} {%- set minutes = ((time % 3600) // 60) %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.2.1.25.1.1.0
      community: public
      host: 192.168.1.60
      name: pveTBSH Uptime
      port: 161
      priv_protocol: none
      value_template: Template("{%- set time = value | int // 100 %} {%- set minutes = ((time % 3600) // 60) %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.2.1.25.1.1.0
      community: public
      host: 192.168.1.61
      name: vmTBSH01 Uptime
      port: 161
      priv_protocol: none
      value_template: Template("{%- set time = value | int // 100 %} {%- set minutes = ((time % 3600) // 60) %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.2.1.25.1.1.0
      community: public
      host: 192.168.1.62
      name: vmTBSH02 Uptime
      port: 161
      priv_protocol: none
      value_template: Template("{%- set time = value | int // 100 %} {%- set minutes = ((time % 3600) // 60) %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.2.1.25.1.1.0
      community: public
      host: 192.168.1.20
      name: TBSH01 Uptime
      port: 161
      priv_protocol: none
      value_template: Template("{%- set time = value | int // 100 %} {%- set minutes = ((time % 3600) // 60) %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.2.1.25.1.1.0
      community: public
      host: 192.168.1.40
      name: piServ Uptime
      port: 161
      priv_protocol: none
      value_template: Template("{%- set time = value | int // 100 %} {%- set minutes = ((time % 3600) // 60) %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.4.1.41112.1.6.3.3.0
      community: public
      host: 192.168.1.27
      name: UFO Model
      port: 161
      priv_protocol: none
      version: 1
    - platform: snmp
      accept_errors: False
      auth_protocol: none
      baseoid: 1.3.6.1.4.1.41112.1.6.3.6.0
      community: public
      host: 192.168.1.27
      name: UFO Firmware Version
      port: 161
      priv_protocol: none
      version: 1
    - platform: template
      sensors: ?
        status_tbsh01_docker_db: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_db
          friendly_name: Status - tbsh01 Docker db
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_db', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_db', 'off') %} 0 {% endif %}")
        status_tbsh01_docker_deconz: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_deconz
          friendly_name: Status - tbsh01 Docker deconz
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_deconz', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_deconz', 'off') %} 0 {% endif %}")
        status_tbsh01_docker_duplicati: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_duplicati
          friendly_name: Status - tbsh01 Docker duplicati
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_duplicati', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_duplicati', 'off') %} 0 {% endif %}")
        status_tbsh01_docker_glances: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_glances
          friendly_name: Status - tbsh01 Docker glances
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_glances', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_glances', 'off') %} 0 {% endif %}")
        status_tbsh01_docker_guacamole: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_guacamole
          friendly_name: Status - tbsh01 Docker guacamole
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_guacamole', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_guacamole', 'off') %} 0 {% endif %}")
        status_tbsh01_docker_ha_dockermon: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_ha_dockermon
          friendly_name: Status - tbsh01 Docker ha_dockermon
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_ha_dockermon', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_ha_dockermon', 'off') %} 0 {% endif %}")
        status_tbsh01_docker_homer: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_homer
          friendly_name: Status - tbsh01 Docker homer
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_homer', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_homer', 'off') %} 0 {% endif %}")
        status_tbsh01_docker_netdata: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_netdata
          friendly_name: Status - tbsh01 Docker netdata
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_netdata', 'on') %}
  100
  {% elif is_state('binary_sensor.tbsh01_ha_dockermon_netdata', 'off') %}
  0
  {% endif %}")
        status_tbsh01_docker_nginxproxymanager: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_nginxproxymanager
          friendly_name: Status - tbsh01 Docker nginxproxymanager
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_nginxproxymanager', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_nginxproxymanager', 'off') %} 0 {% endif %}")
        status_tbsh01_docker_ouroboros: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_ouroboros
          friendly_name: Status - tbsh01 Docker ouroboros
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_ouroboros', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_ouroboros', 'off') %} 0 {% endif %}")
        status_tbsh01_docker_portainer: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_portainer
          friendly_name: Status - tbsh01 Docker portainer
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_portainer', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_portainer', 'off') %} 0 {% endif %}")
        status_tbsh01_docker_unifi: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.tbsh01_ha_dockermon_unifi
          friendly_name: Status - tbsh01 Docker unifi
          value_template: Template("{% if is_state('binary_sensor.tbsh01_ha_dockermon_unifi', 'on') %} 100 {% elif is_state('binary_sensor.tbsh01_ha_dockermon_unifi', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_duplicati: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_duplicati
          friendly_name: Status - vmtbsh01 Docker duplicati
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_duplicati', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_duplicati', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_glances: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_glances
          friendly_name: Status - vmtbsh01 Docker glances
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_glances', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_glances', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_grafana: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_grafana
          friendly_name: Status - vmtbsh01 Docker grafana
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_grafana', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_grafana', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_ha_dockermon: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_ha_dockermon
          friendly_name: Status - vmtbsh01 Docker ha_dockermon
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_ha_dockermon', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_ha_dockermon', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_jackett: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_jackett
          friendly_name: Status - vmtbsh01 Docker jackett
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_jackett', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_jackett', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_jdownloader: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_jdownloader
          friendly_name: Status - vmtbsh01 Docker jdownloader
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_jdownloader', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_jdownloader', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_netdata: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_netdata
          friendly_name: Status - vmtbsh01 Docker netdata
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_netdata', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_netdata', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_nzbhydra2: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_nzbhydra2
          friendly_name: Status - vmtbsh01 Docker nzbhydra2
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_nzbhydra2', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_nzbhydra2', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_ouroboros: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_ouroboros
          friendly_name: Status - vmtbsh01 Docker ouroboros
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_ouroboros', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_ouroboros', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_portainer: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_portainer
          friendly_name: Status - vmtbsh01 Docker portainer
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_portainer', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_portainer', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_radarr: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_radarr
          friendly_name: Status - vmtbsh01 Docker radarr
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_radarr', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_radarr', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_sabnzbd: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_sabnzbd
          friendly_name: Status - vmtbsh01 Docker sabnzbd
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_sabnzbd', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_sabnzbd', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_sonarr: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_sonarr
          friendly_name: Status - vmtbsh01 Docker sonarr
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_sonarr', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_sonarr', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_tautulli: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_tautulli
          friendly_name: Status - vmtbsh01 Docker tautulli
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_tautulli', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_tautulli', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_transmission: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_transmission
          friendly_name: Status - vmtbsh01 Docker transmission
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_transmission', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_transmission', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_tvheadend: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_tvheadend
          friendly_name: Status - vmtbsh01 Docker tvheadend
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_tvheadend', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_tvheadend', 'off') %} 0 {% endif %}")
        status_vmtbsh01_docker_varken: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh01_ha_dockermon_varken
          friendly_name: Status - vmtbsh01 Docker varken
          value_template: Template("{% if is_state('binary_sensor.vmtbsh01_ha_dockermon_varken', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh01_ha_dockermon_varken', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_chronograf: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_chronograf
          friendly_name: Status - vmtbsh02 Docker chronograf
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_chronograf', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_chronograf', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_duplicati: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_duplicati
          friendly_name: Status - vmtbsh02 Docker duplicati
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_duplicati', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_duplicati', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_glances: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_glances
          friendly_name: Status - vmtbsh02 Docker glances
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_glances', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_glances', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_ha_dockermon: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_ha_dockermon
          friendly_name: Status - vmtbsh02 Docker ha_dockermon
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_ha_dockermon', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_ha_dockermon', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_influxdb: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_influxdb
          friendly_name: Status - vmtbsh02 Docker influxdb
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_influxdb', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_influxdb', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_kapacitor: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_kapacitor
          friendly_name: Status - vmtbsh02 Docker kapacitor
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_kapacitor', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_kapacitor', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_netdata: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_netdata
          friendly_name: Status - vmtbsh02 Docker netdata
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_netdata', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_netdata', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_ouroboros: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_ouroboros
          friendly_name: Status - vmtbsh02 Docker ouroboros
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_ouroboros', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_ouroboros', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_portainer: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_portainer
          friendly_name: Status - vmtbsh02 Docker portainer
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_portainer', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_portainer', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_telegraf: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_telegraf
          friendly_name: Status - vmtbsh02 Docker telegraf
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_telegraf', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_telegraf', 'off') %} 0 {% endif %}")
        status_vmtbsh02_docker_unifipoller: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh02_ha_dockermon_unifipoller
          friendly_name: Status - vmtbsh02 Docker unifipoller
          value_template: Template("{% if is_state('binary_sensor.vmtbsh02_ha_dockermon_unifipoller', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh02_ha_dockermon_unifipoller', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_15ef4d2f_esphome: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_15ef4d2f_esphome
          friendly_name: Status - vmtbsh03 Docker addon_15ef4d2f_esphome
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_15ef4d2f_esphome', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_15ef4d2f_esphome', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_41cba666_xboxone: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_41cba666_xboxone
          friendly_name: Status - vmtbsh03 Docker addon_41cba666_xboxone
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_41cba666_xboxone', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_41cba666_xboxone', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_a0d7b954_adb: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_adb
          friendly_name: Status - vmtbsh03 Docker addon_a0d7b954_adb
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_adb', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_adb', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_a0d7b954_airsonos: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_airsonos
          friendly_name: Status - vmtbsh03 Docker addon_a0d7b954_airsonos
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_airsonos', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_airsonos', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_a0d7b954_appdaemon: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_appdaemon
          friendly_name: Status - vmtbsh03 Docker addon_a0d7b954_appdaemon
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_appdaemon', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_appdaemon', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_a0d7b954_glances: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_glances
          friendly_name: Status - vmtbsh03 Docker addon_a0d7b954_glances
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_glances', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_glances', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_a0d7b954_jupyterlablite: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_jupyterlablite
          friendly_name: Status - vmtbsh03 Docker addon_a0d7b954_jupyterlablite
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_jupyterlablite', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_jupyterlablite', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_a0d7b954_nodered: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_nodered
          friendly_name: Status - vmtbsh03 Docker addon_a0d7b954_nodered
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_nodered', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_nodered', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_a0d7b954_portainer: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_portainer
          friendly_name: Status - vmtbsh03 Docker addon_a0d7b954_portainer
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_portainer', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_portainer', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_a0d7b954_ssh: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_ssh
          friendly_name: Status - vmtbsh03 Docker addon_a0d7b954_ssh
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_ssh', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_ssh', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_a0d7b954_vscode: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_vscode
          friendly_name: Status - vmtbsh03 Docker addon_a0d7b954_vscode
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_vscode', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_a0d7b954_vscode', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_cebe7a76_hassio_google_drive_backup: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_cebe7a76_hassio_google_drive_backup
          friendly_name: Status - vmtbsh03 Docker addon_cebe7a76_hassio_google_drive_backup
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_cebe7a76_hassio_google_drive_backup', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_cebe7a76_hassio_google_drive_backup', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_core_mariadb: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_core_mariadb
          friendly_name: Status - vmtbsh03 Docker addon_core_mariadb
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_core_mariadb', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_core_mariadb', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_core_mosquitto: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_core_mosquitto
          friendly_name: Status - vmtbsh03 Docker addon_core_mosquitto
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_core_mosquitto', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_core_mosquitto', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_addon_core_samba: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_addon_core_samba
          friendly_name: Status - vmtbsh03 Docker addon_core_samba
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_core_samba', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_addon_core_samba', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_ha_dockermon: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_ha_dockermon
          friendly_name: Status - vmtbsh03 Docker ha_dockermon
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_ha_dockermon', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_ha_dockermon', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_hassio_audio: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_hassio_audio
          friendly_name: Status - vmtbsh03 Docker hassio_audio
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_hassio_audio', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_hassio_audio', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_hassio_cli: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_hassio_cli
          friendly_name: Status - vmtbsh03 Docker hassio_cli
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_hassio_cli', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_hassio_cli', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_hassio_dns: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_hassio_dns
          friendly_name: Status - vmtbsh03 Docker hassio_dns
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_hassio_dns', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_hassio_dns', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_hassio_multicast: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_hassio_multicast
          friendly_name: Status - vmtbsh03 Docker hassio_multicast
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_hassio_multicast', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_hassio_multicast', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_hassio_supervisor: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_hassio_supervisor
          friendly_name: Status - vmtbsh03 Docker hassio_supervisor
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_hassio_supervisor', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_hassio_supervisor', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_hassos_supervisor: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_hassos_supervisor
          friendly_name: Status - vmtbsh03 Docker hassos_supervisor
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_hassos_supervisor', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_hassos_supervisor', 'off') %} 0 {% endif %}")
        status_vmtbsh03_docker_homeassistant: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.vmtbsh03_ha_dockermon_homeassistant
          friendly_name: Status - vmtbsh03 Docker homeassistant
          value_template: Template("{% if is_state('binary_sensor.vmtbsh03_ha_dockermon_homeassistant', 'on') %} 100 {% elif is_state('binary_sensor.vmtbsh03_ha_dockermon_homeassistant', 'off') %} 0 {% endif %}")
    - platform: systemmonitor
      resources: ?
        - arg: /
          type: disk_free
        - arg: /
          type: disk_use
        - arg: /
          type: disk_use_percent
        - type: memory_use_percent
        - type: memory_use
        - type: memory_free
        - type: swap_use_percent
        - type: swap_use
        - arg: eth0
          type: network_in
        - arg: eth0
          type: network_out
        - type: last_boot
        - type: load_1m
        - type: load_5m
        - type: load_15m
        - type: processor_use
    - platform: template
      sensors: ?
        vmtbsh03_uptime: ?
          attribute_templates: ?
          friendly_name: vmTBSH03 Uptime
          value_template: Template("{%- set time = as_timestamp(now()) - as_timestamp(states.sensor.last_boot.state) | int %} {%- set minutes = ((time % 3600) // 60) | int %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) | int %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) | int %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
    - platform: unifigateway
      host: 192.168.1.20
      monitored_conditions: ?
        - vpn
        - lan
        - wan
        - www
        - wlan
        - alerts
        - firmware
      name: UniFi Gateway
      password: McLarenMP4-24
      port: 8443
      site_id: default
      username: admin
      verify_ssl: False
    - platform: my_unifi
      name: unifi
      password: McLarenMP4-24
      region: default
      url: https://192.168.1.20:8443
      username: admin
      verify_ssl: False
    - platform: template
      sensors: ?
        unifi_gateway_lan_num_user: ?
          attribute_templates: ?
          friendly_name: Users Lan
          value_template: Template("{{ states.sensor.unifi_gateway_lan.attributes.num_user }}")
        unifi_gateway_lan_sw: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.unifi_gateway_lan
          friendly_name: LAN Switch Count
          icon_template: Template("mdi:lan")
          unit_of_measurement: Switches
          value_template: Template("{{ states.sensor.unifi_gateway_lan.attributes['num_sw'] }}")
        unifi_gateway_wan_cpu: ?
          attribute_templates: ?
          friendly_name: CPU
          unit_of_measurement: %
          value_template: Template("{{ states.sensor.unifi_gateway_wan.attributes['gw_system-stats']['cpu'] }}")
        unifi_gateway_wan_download: ?
          attribute_templates: ?
          friendly_name: WAN Download
          unit_of_measurement: Kbps
          value_template: Template("{{ (states.sensor.unifi_gateway_wan.attributes['rx_bytes-r'] / 1024) | int }}")
        unifi_gateway_wan_ip: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.unifi_gateway_wan
          friendly_name: WAN IP
          value_template: Template("{{ states.sensor.unifi_gateway_wan.attributes.wan_ip }}")
        unifi_gateway_wan_mem: ?
          attribute_templates: ?
          friendly_name: Memory
          unit_of_measurement: %
          value_template: Template("{{ states.sensor.unifi_gateway_wan.attributes['gw_system-stats']['mem'] }}")
        unifi_gateway_wlan_ap: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.unifi_gateway_wlan
          friendly_name: WiFi AP Count
          icon_template: Template("mdi:wifi")
          unit_of_measurement: APs
          value_template: Template("{{ states.sensor.unifi_gateway_wlan.attributes['num_ap'] }}")
        unifi_gateway_wlan_num_user: ?
          attribute_templates: ?
          friendly_name: Users
          value_template: Template("{{ states.sensor.unifi_gateway_wlan.attributes.num_user }}")
        unifi_gateway_www_speedtest_ping: ?
          attribute_templates: ?
          friendly_name: USG Speedtest Ping
          icon_template: Template("mdi:progress-clock")
          unit_of_measurement: ms
          value_template: Template("{{ states.sensor.unifi_gateway_www.attributes.speedtest_ping }}")
        unifi_gateway_www_uptime: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.unifi_gateway_www
          friendly_name: Internet Uptime
          value_template: Template("{%- set time = states.sensor.unifi_gateway_www.attributes.uptime | int %} {%- set minutes = ((time % 3600) // 60) %} {%- set minutes = '{}min'.format(minutes) if minutes > 0 else '' %} {%- set hours = ((time % 86400) // 3600) %} {%- set hours = '{}hr '.format(hours) if hours > 0 else '' %} {%- set days = (time // 86400) %} {%- set days = '{}d '.format(days) if days > 0 else '' %} {{ 'Less than 1 min' if time < 60 else days + hours + minutes }}
")
        unifi_gateway_www_xput_down: ?
          attribute_templates: ?
          friendly_name: USG Speedtest Download
          icon_template: Template("mdi:progress-download")
          unit_of_measurement: Mbps
          value_template: Template("{{ states.sensor.unifi_gateway_www.attributes.xput_down }}")
        unifi_gateway_www_xput_up: ?
          attribute_templates: ?
          friendly_name: USG Speedtest Upload
          icon_template: Template("mdi:progress-upload")
          unit_of_measurement: Mbps
          value_template: Template("{{ states.sensor.unifi_gateway_www.attributes.xput_up }}")
    - platform: plex_recently_added
      download_images: True
      host: 192.168.1.100
      image_resolution: 200
      img_dir: /custom-lovelace/upcoming-media-card/images/plex/tv/
      max: 25
      name: Plex Recently Added
      port: 32400
      section_types: ?
        - show
      ssl: False
      ssl_cert: False
      token: bqcPvhfbktMUAiuw_sUT
    - platform: plex_recently_added
      download_images: True
      host: 192.168.1.100
      image_resolution: 200
      img_dir: /custom-lovelace/upcoming-media-card/images/plex/movies/
      max: 25
      name: plex_recently_added_movies
      port: 32400
      section_types: ?
        - movie
      ssl: False
      ssl_cert: False
      token: bqcPvhfbktMUAiuw_sUT
    - platform: tautulli
      api_key: f3ffedd38c234f66b917c324b8d72695
      host: 192.168.1.61
      monitored_conditions: ?
        - lan_bandwidth
        - wan_bandwidth
        - total_bandwidth
        - library_name
        - full_title
        - tagline
        - title
        - progress_percent
        - summary
        - container
        - indexes
        - libraries
        - media_type
      name: Tautulli
      path: 
      port: 8181
      ssl: False
      verify_ssl: True
    - platform: template
      sensors: ?
        plex_lanbandwidth: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.tautulli
          friendly_name: Plex LAN Bandwidth
          unit_of_measurement: Mbps
          value_template: Template("{{ (states.sensor.tautulli.attributes.lan_bandwidth / 1024) | round(2) }}")
        plex_topmovie: ?
          attribute_templates: ?
          friendly_name: Plex Top Movie
          icon_template: Template("mdi:plex")
          value_template: Template("{{state_attr('sensor.tautulli', 'Top Movie')}}")
        plex_toptvshow: ?
          attribute_templates: ?
          friendly_name: Plex Top TV Show
          icon_template: Template("mdi:plex")
          value_template: Template("{{state_attr('sensor.tautulli', 'Top TV Show')}}")
        plex_topuser: ?
          attribute_templates: ?
          friendly_name: Plex Top User
          icon_template: Template("mdi:plex")
          value_template: Template("{{state_attr('sensor.tautulli', 'Top User')}}")
        plex_totalbandwidth: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.tautulli
          friendly_name: Plex Total Bandwidth
          unit_of_measurement: Mbps
          value_template: Template("{{ (states.sensor.tautulli.attributes.total_bandwidth / 1024) | round(2) }}")
        plex_wanbandwidth: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.tautulli
          friendly_name: Plex WAN Bandwidth
          unit_of_measurement: Mbps
          value_template: Template("{{ (states.sensor.tautulli.attributes.wan_bandwidth / 1024) | round(2) }}")
    - platform: radarr
      api_key: a3e779b9ad8e47b7921ec97e22b6b3d5
      days: 720
      host: 192.168.1.61
      include_paths: ?
      monitored_conditions: ?
        - movies
        - upcoming
        - status
        - commands
      port: 7878
      ssl: False
      unit: GB
      urlbase: 
    - platform: radarr_upcoming_media
      api_key: a3e779b9ad8e47b7921ec97e22b6b3d5
      days: 720
      host: 192.168.1.61
      max: 100
      port: 7878
      ssl: False
      theaters: True
      urlbase: 
    - platform: sonarr
      api_key: 5d83d92e73c34cfb93e4cf14f21bec54
      days: 720
      host: 192.168.1.61
      include_paths: ?
      monitored_conditions: ?
        - upcoming
        - queue
        - series
        - wanted
        - status
        - commands
      port: 8989
      ssl: False
      unit: GB
      urlbase: 
    - platform: sonarr_upcoming_media
      api_key: 5d83d92e73c34cfb93e4cf14f21bec54
      days: 720
      host: 192.168.1.61
      max: 100
      port: 8989
      ssl: False
      urlbase: 
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/services/tvheadend.yaml:16]
        - name
        - api_version
      method: GET
      name: TVHeadend Version
      resource: http://bacco007:RedbullRB8@192.168.1.61:9981/api/serverinfo
      timeout: 10
      value_template: Template("{{ value_json["sw_version"] }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/services/tvheadend.yaml:24]
        - totalCount
      method: GET
      name: TVHeadend Subscriptions
      resource: http://bacco007:RedbullRB8@192.168.1.61:9981/api/status/subscriptions
      timeout: 10
      value_template: Template("{{ value_json["totalCount"] }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/services/tvheadend.yaml:31]
        - totalCount
        - entries
      method: GET
      name: TVHeadend Connections
      resource: http://bacco007:RedbullRB8@192.168.1.61:9981/api/status/connections
      timeout: 10
      value_template: Template("{{ value_json["totalCount"] }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/services/tvheadend.yaml:39]
        - total
      method: GET
      name: TVHeadend Upcoming Recordings
      resource: http://bacco007:RedbullRB8@192.168.1.61:9981/api/dvr/entry/grid_upcoming
      timeout: 10
      value_template: Template("{{ value_json["total"] }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/services/tvheadend.yaml:46]
        - total
      method: GET
      name: TVHeadend Finished Recordings
      resource: http://bacco007:RedbullRB8@192.168.1.61:9981/api/dvr/entry/grid_finished
      timeout: 10
      value_template: Template("{{ value_json["total"] }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/services/tvheadend.yaml:53]
        - total
      method: GET
      name: TVHeadend Failed Recordings
      resource: http://bacco007:RedbullRB8@192.168.1.61:9981/api/dvr/entry/grid_failed
      timeout: 10
      value_template: Template("{{ value_json["total"] }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/services/tvheadend.yaml:60]
        - totalCount
      method: GET
      name: TVHeadend Inputs
      resource: http://bacco007:RedbullRB8@192.168.1.61:9981/api/status/inputs
      timeout: 10
      value_template: Template("{{ value_json["totalCount"] }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/services/tvheadend.yaml:67]
        - total
      method: GET
      name: TVHeadend Services
      resource: http://bacco007:RedbullRB8@192.168.1.61:9981/api/channel/grid
      timeout: 10
      value_template: Template("{{ value_json["total"] }}")
      verify_ssl: True
    - platform: alpha_vantage
      api_key: 9B54IQNIWZ0CLWOT
      foreign_exchange: ?
        - from: AUD
          name: AUD_EUR
          to: EUR
        - from: AUD
          name: AUD_GBP
          to: GBP
        - from: AUD
          name: AUD_NZD
          to: NZD
        - from: AUD
          name: AUD_USD
          to: USD
      scan_interval: 0:40:00
    - platform: template
      sensors: ?
        aud_to_eur: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.aud_eur
          friendly_name: AUD to EUR
          unit_of_measurement: EUR
          value_template: Template("{{ states.sensor.aud_eur.state|round(3) }}")
        aud_to_gbp: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.aud_gbp
          friendly_name: AUD to GBP
          unit_of_measurement: GBP
          value_template: Template("{{ states.sensor.aud_gbp.state|round(3) }}")
        aud_to_nzd: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.aud_nzd
          friendly_name: AUD to NZD
          unit_of_measurement: NZD
          value_template: Template("{{ states.sensor.aud_nzd.state|round(3) }}")
        aud_to_usd: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.aud_usd
          friendly_name: AUD to USD
          unit_of_measurement: USD
          value_template: Template("{{ states.sensor.aud_usd.state|round(3) }}")
    - platform: covid19_nswhealth
      name: Tamworth
    - platform: covid19_nswhealth_tests
      name: Tamworth
    - platform: rest
      force_update: False
      headers: ?
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/news/covid19.yaml:19]
        - Confirmed
        - Deaths
        - Recovered
        - Active
        - Last_Update
      json_attributes_path: $.features[0].attributes
      method: GET
      name: Coronavirus NSW
      resource: https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/1/query?f=json&where=(Confirmed%20%3E%200)%20AND%20(Province_State%3D%27New South Wales%27)&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc%2CCountry_Region%20asc%2CProvince_State%20asc&outSR=102100&resultOffset=0&resultRecordCount=250&cacheHint=true
      scan_interval: 1:00:00
      timeout: 60
      unit_of_measurement: People
      value_template: Template("{{ value_json.features[0].attributes.Confirmed }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      headers: ?
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/news/covid19.yaml:38]
        - NAME
        - Cases
        - Deaths
        - Tests
        - Last_Updated
      json_attributes_path: $.features[0].attributes
      method: GET
      name: COVID-19 ESRIA NSW
      resource: https://services1.arcgis.com/vHnIGBHHqDR6y0CR/arcgis/rest/services/Current_Cases_by_State/FeatureServer/0/query?where=ISO_SUB+%3D+%27NSW%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=false&returnCentroid=false&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=
      scan_interval: 0:30:00
      timeout: 60
      unit_of_measurement: People
      value_template: Template("{{ value_json.features[0].attributes.Cases }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      headers: ?
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/news/covid19.yaml:57]
        - NAME
        - Cases
        - Deaths
        - Tests
        - Last_Updated
      json_attributes_path: $.features[0].attributes
      method: GET
      name: COVID-19 ESRIA VIC
      resource: https://services1.arcgis.com/vHnIGBHHqDR6y0CR/arcgis/rest/services/Current_Cases_by_State/FeatureServer/0/query?where=ISO_SUB+%3D+%27VIC%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=false&returnCentroid=false&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=
      scan_interval: 0:30:00
      timeout: 60
      unit_of_measurement: People
      value_template: Template("{{ value_json.features[0].attributes.Cases }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      headers: ?
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/news/covid19.yaml:76]
        - NAME
        - Cases
        - Deaths
        - Tests
        - Last_Updated
      json_attributes_path: $.features[0].attributes
      method: GET
      name: COVID-19 ESRIA QLD
      resource: https://services1.arcgis.com/vHnIGBHHqDR6y0CR/arcgis/rest/services/Current_Cases_by_State/FeatureServer/0/query?where=ISO_SUB+%3D+%27QLD%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=false&returnCentroid=false&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=
      scan_interval: 0:30:00
      timeout: 60
      unit_of_measurement: People
      value_template: Template("{{ value_json.features[0].attributes.Cases }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      headers: ?
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/news/covid19.yaml:95]
        - NAME
        - Cases
        - Deaths
        - Tests
        - Last_Updated
      json_attributes_path: $.features[0].attributes
      method: GET
      name: COVID-19 ESRIA WA
      resource: https://services1.arcgis.com/vHnIGBHHqDR6y0CR/arcgis/rest/services/Current_Cases_by_State/FeatureServer/0/query?where=ISO_SUB+%3D+%27WA%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=false&returnCentroid=false&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=
      scan_interval: 0:30:00
      timeout: 60
      unit_of_measurement: People
      value_template: Template("{{ value_json.features[0].attributes.Cases }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      headers: ?
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/news/covid19.yaml:114]
        - NAME
        - Cases
        - Deaths
        - Tests
        - Last_Updated
      json_attributes_path: $.features[0].attributes
      method: GET
      name: COVID-19 ESRIA SA
      resource: https://services1.arcgis.com/vHnIGBHHqDR6y0CR/arcgis/rest/services/Current_Cases_by_State/FeatureServer/0/query?where=ISO_SUB+%3D+%27SA%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=false&returnCentroid=false&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=
      scan_interval: 0:30:00
      timeout: 60
      unit_of_measurement: People
      value_template: Template("{{ value_json.features[0].attributes.Cases }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      headers: ?
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/news/covid19.yaml:133]
        - NAME
        - Cases
        - Deaths
        - Tests
        - Last_Updated
      json_attributes_path: $.features[0].attributes
      method: GET
      name: COVID-19 ESRIA ACT
      resource: https://services1.arcgis.com/vHnIGBHHqDR6y0CR/arcgis/rest/services/Current_Cases_by_State/FeatureServer/0/query?where=ISO_SUB+%3D+%27ACT%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=false&returnCentroid=false&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=
      scan_interval: 0:30:00
      timeout: 60
      unit_of_measurement: People
      value_template: Template("{{ value_json.features[0].attributes.Cases }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      headers: ?
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/news/covid19.yaml:152]
        - NAME
        - Cases
        - Deaths
        - Tests
        - Last_Updated
      json_attributes_path: $.features[0].attributes
      method: GET
      name: COVID-19 ESRIA TAS
      resource: https://services1.arcgis.com/vHnIGBHHqDR6y0CR/arcgis/rest/services/Current_Cases_by_State/FeatureServer/0/query?where=ISO_SUB+%3D+%27TAS%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=false&returnCentroid=false&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=
      scan_interval: 0:30:00
      timeout: 60
      unit_of_measurement: People
      value_template: Template("{{ value_json.features[0].attributes.Cases }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      headers: ?
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/news/covid19.yaml:171]
        - NAME
        - Cases
        - Deaths
        - Tests
        - Last_Updated
      json_attributes_path: $.features[0].attributes
      method: GET
      name: COVID-19 ESRIA NT
      resource: https://services1.arcgis.com/vHnIGBHHqDR6y0CR/arcgis/rest/services/Current_Cases_by_State/FeatureServer/0/query?where=ISO_SUB+%3D+%27NT%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=*&returnGeometry=false&returnCentroid=false&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=
      scan_interval: 0:30:00
      timeout: 60
      unit_of_measurement: People
      value_template: Template("{{ value_json.features[0].attributes.Cases }}")
      verify_ssl: True
    - platform: template
      sensors: ?
        covid_19_esria_aus_cases: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: COVID-19 ESRIA AUS Cases
          icon_template: Template("mdi:biohazard")
          unit_of_measurement: People
          value_template: Template("{{ states.sensor.covid_19_esria_act.attributes['Cases'] + states.sensor.covid_19_esria_nsw.attributes['Cases'] + states.sensor.covid_19_esria_vic.attributes['Cases'] + states.sensor.covid_19_esria_qld.attributes['Cases'] + states.sensor.covid_19_esria_tas.attributes['Cases'] + states.sensor.covid_19_esria_sa.attributes['Cases'] + states.sensor.covid_19_esria_nt.attributes['Cases'] + states.sensor.covid_19_esria_wa.attributes['Cases'] }}
")
        covid_19_esria_aus_deaths: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: COVID-19 ESRIA AUS Deaths
          icon_template: Template("mdi:biohazard")
          unit_of_measurement: People
          value_template: Template("{{ states.sensor.covid_19_esria_act.attributes['Deaths'] + states.sensor.covid_19_esria_nsw.attributes['Deaths'] + states.sensor.covid_19_esria_vic.attributes['Deaths'] + states.sensor.covid_19_esria_qld.attributes['Deaths'] + states.sensor.covid_19_esria_tas.attributes['Deaths'] + states.sensor.covid_19_esria_sa.attributes['Deaths'] + states.sensor.covid_19_esria_nt.attributes['Deaths'] + states.sensor.covid_19_esria_wa.attributes['Deaths'] }}
")
        covid_19_esria_aus_pct: ?
          attribute_templates: ?
            casespermillion: Template("{{ (((states.sensor.covid_19_esria_aus_cases.state|int) / 25.464))|round(0) }}
")
            casestodeaths_percent: Template("{{ (((states.sensor.covid_19_esria_aus_deaths.state|int) / (states.sensor.covid_19_esria_aus_cases.state|int))*100)|round(3) }}
")
            casestotests_percent: Template("{{ (((states.sensor.covid_19_esria_aus_cases.state|int) / (states.sensor.covid_19_esria_aus_tests.state|int))*100)|round(3) }}
")
            deathspermillion: Template("{{ (((states.sensor.covid_19_esria_aus_deaths.state|int) / 25.464))|round(0) }}
")
            testspermillion: Template("{{ (((states.sensor.covid_19_esria_aus_tests.state|int) / 25.464))|round(0) }}
")
          entity_id: ?
            - sensor.date_time
          friendly_name: COVID-19 ESRIA AUS Percents
          icon_template: Template("mdi:biohazard")
          unit_of_measurement: %
          value_template: Template("{{ (((states.sensor.covid_19_esria_aus_cases.state|int)/25464100)*100)|round(3) }}
")
        covid_19_esria_aus_tests: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: COVID-19 ESRIA AUS Tests
          icon_template: Template("mdi:biohazard")
          unit_of_measurement: People
          value_template: Template("{{ states.sensor.covid_19_esria_act.attributes['Tests'] + states.sensor.covid_19_esria_nsw.attributes['Tests'] + states.sensor.covid_19_esria_vic.attributes['Tests'] + states.sensor.covid_19_esria_qld.attributes['Tests'] + states.sensor.covid_19_esria_tas.attributes['Tests'] + states.sensor.covid_19_esria_sa.attributes['Tests'] + states.sensor.covid_19_esria_nt.attributes['Tests'] + states.sensor.covid_19_esria_wa.attributes['Tests'] }}
")
        covid_19_esria_nsw_pct: ?
          attribute_templates: ?
            casespermillion: Template("{{ (((states.sensor.covid_19_esria_nsw.attributes['Cases']|int) / 8.118))|round(0) }}
")
            casestodeaths_percent: Template("{{ (((states.sensor.covid_19_esria_nsw.attributes['Deaths']|int) / (states.sensor.covid_19_esria_nsw.attributes['Cases']|int))*100)|round(3) }}
")
            casestotests_percent: Template("{{ (((states.sensor.covid_19_esria_nsw.attributes['Cases']|int) / (states.sensor.covid_19_esria_nsw.attributes['Tests']|int))*100)|round(3) }}
")
            deathspermillion: Template("{{ (((states.sensor.covid_19_esria_nsw.attributes['Deaths']|int) / 8.118))|round(0) }}
")
            testspermillion: Template("{{ (((states.sensor.covid_19_esria_nsw.attributes['Tests']|int) / 8.118))|round(0) }}
")
            teststopopulation_percent: Template("{{ (((states.sensor.covid_19_esria_nsw.attributes['Tests']|int)/8118000)*100)|round(3) }}
")
          entity_id: ?
            - sensor.date_time
          friendly_name: COVID-19 ESRIA NSW Percents
          icon_template: Template("mdi:biohazard")
          unit_of_measurement: %
          value_template: Template("{{ (((states.sensor.covid_19_esria_nsw.attributes['Cases']|int)/8118000)*100)|round(3) }}
")
        covid_19_nswh_local_pct: ?
          attribute_templates: ?
            hneh_percent: Template("{{ ((states.sensor.covid_19_nswh_local.attributes['hneh']/912352)*100)|round(3) }}
")
            hneh_percent_cases: Template("{{ ((states.sensor.covid_19_nswh_local.attributes['hneh']/(states.sensor.covid_19_esria_nsw.attributes['Cases']|int))*100)|round(3) }}
")
            hneh_percent_casestotests: Template("{{ ((states.sensor.covid_19_nswh_local.attributes['hneh']/(states.sensor.covid_19_nswh_local_tests.attributes['hneh']|int))*100)|round(3) }}
")
            hneh_percent_tests: Template("{{ ((states.sensor.covid_19_nswh_local_tests.attributes['hneh']/912352)*100)|round(3) }}
")
            tamw_percent: Template("{{ ((states.sensor.covid_19_nswh_local.attributes['tamw']/49072)*100)|round(3) }}
")
            tamw_percent_cases: Template("{{ ((states.sensor.covid_19_nswh_local.attributes['tamw']/(states.sensor.covid_19_esria_nsw.attributes['Cases']|int))*100)|round(3) }}
")
            tamw_percent_casestotests: Template("{{ ((states.sensor.covid_19_nswh_local.attributes['tamw']/(states.sensor.covid_19_nswh_local_tests.attributes['tamw']|int))*100)|round(3) }}
")
            tamw_percent_tests: Template("{{ ((states.sensor.covid_19_nswh_local_tests.attributes['tamw']/49072)*100)|round(3) }}
")
            trc_percent: Template("{{ ((states.sensor.covid_19_nswh_local.attributes['trc']/62156)*100)|round(3) }}
")
            trc_percent_cases: Template("{{ ((states.sensor.covid_19_nswh_local.attributes['trc']/(states.sensor.covid_19_esria_nsw.attributes['Cases']|int))*100)|round(3) }}
")
            trc_percent_casestotests: Template("{{ ((states.sensor.covid_19_nswh_local.attributes['trc']/(states.sensor.covid_19_nswh_local_tests.attributes['trc']|int))*100)|round(3) }}
")
            trc_percent_tests: Template("{{ ((states.sensor.covid_19_nswh_local_tests.attributes['trc']/62156)*100)|round(3) }}
")
          entity_id: ?
            - sensor.date_time
          friendly_name: COVID-19 NSWH Local Percents
          icon_template: Template("mdi:biohazard")
          unit_of_measurement: %
          value_template: Template("{{ ((states.sensor.covid_19_nswh_local.attributes['hneh']/912352)*100)|round(3) }}
")
    - platform: doomsday_clock
      icon: mdi:nuke
      name: Doomsday Clock
      scan_interval: 1 day, 0:00:00
    - platform: template
      sensors: ?
        fires_near_me: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Fires Near Me
          icon_template: Template("mdi:fire")
          value_template: Template("{% for state in states
if ('nswrfs' in state.entity_id and state.domain in ['geo_location']) -%}
{% if loop.last -%}
{{ loop.index }}
{%- endif %}
{% else %}
0
{%- endfor %}
")
    - platform: command_line
      command: curl https://api.github.com/repos/bacco007/HomeAssistantConfig
      command_timeout: 15
      json_attributes: [source /config/./packages/news/github.yaml:15]
        - open_issues
        - subscribers_count
        - forks
        - stargazers_count
        - updated_at
        - pushed_at
      name: github
      scan_interval: 1:00:00
      value_template: Template(" {{ value_json.name }}")
    - platform: template
      sensors: ?
        github_forks: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.github
          friendly_name: Github - Forks
          icon_template: Template("mdi:github")
          value_template: Template("{{ state_attr('sensor.github', 'forks') }}")
        github_issues: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.github
          friendly_name: Github - Issues
          icon_template: Template("mdi:github")
          value_template: Template("{{ state_attr('sensor.github', 'open_issues') }}")
        github_pushedat: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.github
          friendly_name: Github - Last Push
          icon_template: Template("mdi:github")
          value_template: Template("{{ as_timestamp(state_attr('sensor.github', 'pushed_at')) |timestamp_custom ('%-d %b, %H:%M') }}")
        github_stars: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.github
          friendly_name: Github - Stars
          icon_template: Template("mdi:github")
          value_template: Template("{{ state_attr('sensor.github', 'stargazers_count') }}")
        github_subscribers: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.github
          friendly_name: Github - Subscribers
          icon_template: Template("mdi:github")
          value_template: Template("{{ state_attr('sensor.github', 'subscribers_count') }}")
        github_updatedat: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.github
          friendly_name: Github - Last Update
          icon_template: Template("mdi:github")
          value_template: Template("{{ as_timestamp(state_attr('sensor.github', 'updated_at')) |timestamp_custom ('%-d %b, %H:%M') }}")
    - platform: nsw_fuel_station
      entity_namespace: fuelcheck
      fuel_types: ?
        - P98
      station_id: 1145
    - platform: nsw_fuel_station
      entity_namespace: fuelcheck
      fuel_types: ?
        - P98
      station_id: 16921
    - platform: nsw_fuel_station
      entity_namespace: fuelcheck
      fuel_types: ?
        - P98
      station_id: 573
    - platform: nsw_fuel_station
      entity_namespace: fuelcheck
      fuel_types: ?
        - P98
      station_id: 2449
    - platform: nsw_fuel_station
      entity_namespace: fuelcheck
      fuel_types: ?
        - P98
      station_id: 916
    - platform: nsw_fuel_station
      entity_namespace: fuelcheck
      fuel_types: ?
        - P98
      station_id: 1141
    - platform: nsw_rural_fire_service_fire_danger
      district_name: Northern Slopes
    - platform: template
      sensors: ?
        fire_danger_level_today: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.fire_danger_in_northern_slopes
          friendly_name: Danger Level Today
          icon_template: Template("mdi:fire")
          value_template: Template("{{ state_attr('sensor.fire_danger_in_northern_slopes', 'danger_level_today') | title }}")
        fire_danger_level_tomorrow: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.fire_danger_in_northern_slopes
          friendly_name: Danger Level Tomorrow
          icon_template: Template("mdi:fire")
          value_template: Template("{{ state_attr('sensor.fire_danger_in_northern_slopes', 'danger_level_tomorrow') | title }}")
    - platform: opensky
      altitude: 0.0
      radius: 50.0
    - platform: launch_library
      name: Launch Library
    - platform: rest
      force_update: False
      json_attributes: ?
      method: GET
      name: launch window
      resource: https://launchlibrary.net/1.2.2/launch/next/10
      scan_interval: 0:30:00
      timeout: 10
      value_template: Template("{%- for launch in value_json.launches %}
  {% if launch.location.id == 16 or launch.location.id == 17 %}
    {% if strptime(launch.isostart, '%Y%m%dT%H%M%SZ').strftime('%Y-%m-%d') == now().strftime('%Y-%m-%d') %}
      {% set utc_offset_string = now().strftime('%z') %}
      {% set utc_offset_direction = utc_offset_string[:1] %}
      {% set utc_offset_hours = now().strftime('%z')[-4:] %}
      {% set utc_offset_seconds = (utc_offset_hours| int /100) * 60 * 60 %}
      {% if utc_offset_direction == '-' %}
       {{ launch.wsstamp - utc_offset_seconds}}
      {% else %}
        {{ launch.wsstamp + utc_offset_seconds}}
      {% endif %}
    {% endif %}
  {% endif %}
{% endfor %}")
      verify_ssl: True
    - platform: feedparser
      date_format: %a, %b %d %I:%M %p
      entity_namespace: rssfeed
      exclusions: ?
      feed_url: http://rss.cnn.com/rss/edition.rss
      inclusions: ?
        - title
        - link
      name: CNN
      show_topn: 10
    - platform: feedparser
      date_format: %a, %b %d %I:%M %p
      entity_namespace: rssfeed
      exclusions: ?
      feed_url: http://www.news.com.au/feed
      inclusions: ?
        - title
        - link
      name: news.com.au
      show_topn: 10
    - platform: feedparser
      date_format: %a, %b %d %I:%M %p
      entity_namespace: rssfeed
      exclusions: ?
      feed_url: http://feeds.skynews.com/feeds/rss/home.xml
      inclusions: ?
        - title
        - link
      name: Sky News UK
      show_topn: 10
    - platform: feedparser
      date_format: %a, %b %d %I:%M %p
      entity_namespace: rssfeed
      exclusions: ?
      feed_url: https://www.smh.com.au/rss/feed.xml
      inclusions: ?
        - title
        - link
      name: Sydney Morning Herald
      show_topn: 10
    - platform: feedparser
      date_format: %a, %b %d %I:%M %p
      entity_namespace: rssfeed
      exclusions: ?
      feed_url: https://www.foxsports.com.au/content-feeds/breaking-news/
      inclusions: ?
        - title
        - link
      name: Fox Sports
      show_topn: 10
    - platform: feedparser
      date_format: %a, %b %d %I:%M %p
      entity_namespace: rssfeed
      exclusions: ?
      feed_url: https://www.northerndailyleader.com.au/rss.xml
      inclusions: ?
        - title
        - link
      name: Northern Daily Leader
      show_topn: 10
    - platform: feedparser
      date_format: %a, %b %d %I:%M %p
      entity_namespace: rssfeed
      exclusions: ?
      feed_url: https://www.theguardian.com/au/rss
      inclusions: ?
        - title
        - link
      name: The Guardian (AU)
      show_topn: 10
    - platform: feedparser
      date_format: %a, %b %d %I:%M %p
      entity_namespace: rssfeed
      exclusions: ?
      feed_url: https://www.theguardian.com/uk/rss
      inclusions: ?
        - title
        - link
      name: The Guardian (UK)
      show_topn: 10
    - platform: feedparser
      date_format: %a, %b %d %I:%M %p
      entity_namespace: rssfeed
      exclusions: ?
      feed_url: https://www.skysports.com/rss/12040
      inclusions: ?
        - title
        - link
      name: Sky Sports (UK)
      show_topn: 10
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/news/spacex_launch.yaml:18]
        - flight_number
        - mission_name
        - launch_site
        - rocket
        - details
      method: GET
      name: SpaceX
      resource: https://api.spacexdata.com/v2/launches/next
      timeout: 10
      value_template: Template("{{ value_json["launch_date_unix"] }}")
      verify_ssl: True
    - platform: template
      sensors: ?
        spacex_next_launch_day: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.spacex
          friendly_name: Next Launch Day
          value_template: Template("{{ states.sensor.spacex.state | int | timestamp_custom("%d.%m.%Y")}}")
        spacex_next_launch_site: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.spacex
          friendly_name: Next Launch Site
          value_template: Template("{{ states.sensor.spacex.attributes["launch_site"]["site_name"] }}")
        spacex_next_launch_time: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.spacex
          friendly_name: Next Launch Time
          unit_of_measurement: h
          value_template: Template("{{ states.sensor.spacex.state | int | timestamp_custom("%H:%M")}}")
        spacex_next_mission_name: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.spacex
          friendly_name: Next Mission Name
          value_template: Template("{{ states.sensor.spacex.attributes["mission_name"] }}")
        spacex_next_rocket: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.spacex
          friendly_name: Next Rocket
          value_template: Template("{{ states.sensor.spacex.attributes["rocket"]["rocket_name"] }}")
    - platform: template
      sensors: ?
        sport_anaducks: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.anaheim_ducks
          entity_picture_template: Template("/local/sportlogos/Anaheim_Ducks.svg")
          friendly_name: Anaheim (Mighty) Ducks
          value_template: Template("{% set op = state_attr('calendar.anaheim_ducks', 'message') %} {% if is_state('calendar.anaheim_ducks', 'on') %}
  Playing Now - {{ op }}
{% else %}
  {% set st = state_attr('calendar.anaheim_ducks', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Game Scheduled
  {% endif %}
{% endif %}")
        sport_cricket: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.cricket_australia
          entity_picture_template: Template("/local/sportlogos/cricket.png")
          friendly_name: Cricket Australia (Aus/Syd6ers)
          value_template: Template("{% set op = state_attr('calendar.cricket_australia', 'message') %} {% if is_state('calendar.cricket_australia', 'on') %}
  Playing Now - {{ op }}
{% else %}
  {% set st = state_attr('calendar.cricket_australia', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Match Scheduled
  {% endif %}
{% endif %}")
        sport_f1: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.f1
          entity_picture_template: Template("/local/sportlogos/F1.svg")
          friendly_name: Formula One
          value_template: Template("{% set op = state_attr('calendar.f1', 'message') %} {% if is_state('calendar.f1', 'on') %}
  Today - {{ op }}
{% else %}
  {% set st = state_attr('calendar.f1', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Race Scheduled
  {% endif %}
{% endif %}")
        sport_indycar: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.indycar
          entity_picture_template: Template("/local/sportlogos/indycar.png")
          friendly_name: IndyCar
          value_template: Template("{% set op = state_attr('calendar.indycar', 'message') | replace('🏁 ', '') %} {% if is_state('calendar.indycar', 'on') %}
  Today - {{ op }}
{% else %}
  {% set st = state_attr('calendar.indycar', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Race Scheduled
  {% endif %}
{% endif %}")
        sport_manu: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.manchester_united_fixtures
          entity_picture_template: Template("/local/sportlogos/manu.png")
          friendly_name: Manchester United
          value_template: Template("{% set op = state_attr('calendar.manchester_united_fixtures', 'message') %} {% if is_state('calendar.manchester_united_fixtures', 'on') %}
  Playing Now - {{ op }}
{% else %}
  {% set st = state_attr('calendar.manchester_united_fixtures', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Game Scheduled
  {% endif %}
{% endif %}")
        sport_nascar: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.nascar
          entity_picture_template: Template("/local/sportlogos/nascar.svg")
          friendly_name: NASCAR
          value_template: Template("{% set op = state_attr('calendar.nascar', 'message') | replace('🏁 ', '') %} {% if is_state('calendar.nascar', 'on') %}
  Today - {{ op }}
{% else %}
  {% set st = state_attr('calendar.nascar', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Race Scheduled
  {% endif %}
{% endif %}")
        sport_newengpats: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.new_england_patriots
          entity_picture_template: Template("/local/sportlogos/newengpats.png")
          friendly_name: New England Patriots
          value_template: Template("{% set op = state_attr('calendar.new_england_patriots', 'message') %} {% if is_state('calendar.new_england_patriots', 'on') %}
  Playing Now - {{ op }}
{% else %}
  {% set st = state_attr('calendar.new_england_patriots', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Game Scheduled
  {% endif %}
{% endif %}")
        sport_newknights: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.newcastle_knights
          entity_picture_template: Template("/local/sportlogos/newknights.svg")
          friendly_name: Newcastle Knights
          value_template: Template("{% set op = state_attr('calendar.newcastle_knights', 'message') %} {% if is_state('calendar.newcastle_knights', 'on') %}
  Playing Now - {{ op }}
{% else %}
  {% set st = state_attr('calendar.newcastle_knights', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Game Scheduled
  {% endif %}
{% endif %}")
        sport_supercars: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.supercars
          entity_picture_template: Template("/local/sportlogos/supercars.png")
          friendly_name: Supercars
          value_template: Template("{% set op = state_attr('calendar.supercars', 'message') | replace('SUPERCARS: ','') %} {% if is_state('calendar.supercars', 'on') %}
  Today - {{ op }}
{% else %}
  {% set st = state_attr('calendar.supercars', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Race Scheduled
  {% endif %}
{% endif %}")
        sport_sydfc: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.sydney_fc
          entity_picture_template: Template("/local/sportlogos/sydfc.png")
          friendly_name: Sydney FC
          value_template: Template("{% set op = state_attr('calendar.sydney_fc', 'message') | replace ('⚽️ ', '') %} {% if is_state('calendar.sydney_fc', 'on') %}
  Playing Now - {{ op }}
{% else %}
  {% set st = state_attr('calendar.sydney_fc', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Game Scheduled
  {% endif %}
{% endif %}")
        sport_sydswans: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.sydney_swans
          entity_picture_template: Template("/local/sportlogos/sydswans.png")
          friendly_name: Sydney Swans
          value_template: Template("{% set op = state_attr('calendar.sydney_swans', 'message') %} {% if is_state('calendar.sydney_swans', 'on') %}
  Playing Now - {{ op }}
{% else %}
  {% set st = state_attr('calendar.sydney_swans', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Game Scheduled
  {% endif %}
{% endif %}")
        sport_wec: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.lm_wec_fia_world_endurance_championship
          entity_picture_template: Template("/local/sportlogos/wec.png")
          friendly_name: FIA WEC
          value_template: Template("{% set op = state_attr('calendar.lm_wec_fia_world_endurance_championship', 'message') | replace('FIA WEC ', '') %} {% if is_state('calendar.lm_wec_fia_world_endurance_championship', 'on') %}
  Today - {{ op }}
{% else %}
  {% set st = state_attr('calendar.lm_wec_fia_world_endurance_championship', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Race Scheduled
  {% endif %}
{% endif %}")
        sport_yankees: ?
          attribute_templates: ?
          entity_id: ?
            - calendar.new_york_yankees
          entity_picture_template: Template("/local/sportlogos/yankees.png")
          friendly_name: New York Yankees
          value_template: Template("{% set op = state_attr('calendar.new_york_yankees', 'message') | replace('⚾️ ','') %} {% if is_state('calendar.new_york_yankees', 'on') %}
  Playing Now - {{ op }}
{% else %}
  {% set st = state_attr('calendar.new_york_yankees', 'start_time') %}
  {% if st != None %}
    {% set diff = ((as_timestamp(st)-as_timestamp(now())) | int /60/1440) | round (0) %}
    {% if diff > 6 %}
      {{ diff }} Days - {{ op }}
    {% else %}
      {{ as_timestamp(st) | timestamp_custom("%a %H:%M") }} - {{ op }}
    {% endif %}
  {% else %}
    No Game Scheduled
  {% endif %}
{% endif %}")
    - platform: rest
      force_update: True
      json_attributes: ?
      method: GET
      name: Folding at Home Points
      resource: https://stats.foldingathome.org/api/donor/bacco007
      scan_interval: 0:10:00
      timeout: 60
      value_template: Template("{{ value_json.credit }}")
      verify_ssl: True
    - platform: rest
      force_update: True
      json_attributes: ?
      method: GET
      name: Folding at Home Work Units
      resource: https://stats.foldingathome.org/api/donor/bacco007
      scan_interval: 0:10:00
      timeout: 60
      value_template: Template("{{ value_json.wus }}")
      verify_ssl: True
    - platform: rest
      force_update: True
      json_attributes: ?
      method: GET
      name: Folding at Home Team Points
      resource: https://stats.foldingathome.org/api/team/247478
      scan_interval: 0:10:00
      timeout: 60
      value_template: Template("{{ value_json.credit }}")
      verify_ssl: True
    - platform: rest
      force_update: True
      json_attributes: ?
      method: GET
      name: Folding at Home Team Work Units
      resource: https://stats.foldingathome.org/api/team/247478
      scan_interval: 0:10:00
      timeout: 60
      value_template: Template("{{ value_json.wus }}")
      verify_ssl: True
    - platform: template
      sensors: ?
        iss_location: ?
          attribute_templates: ?
            latitude: Template("{{ states.binary_sensor.iss.attributes["lat"] }}")
            longitude: Template("{{ states.binary_sensor.iss.attributes["long"] }}")
          entity_id: ?
            - binary_sensor.iss
          friendly_name: ISS Location
          icon_template: Template("mdi:satellite-variant")
          value_template: Template("{{ states.binary_sensor.iss.state }}")
        iss_peopleinspace: ?
          attribute_templates: ?
          entity_id: ?
            - binary_sensor.iss
          friendly_name: People in Space
          value_template: Template("{{ states.binary_sensor.iss.attributes["number_of_people_in_space"] }}")
    - platform: opennem
      monitored_conditions: ?
        - battery_charging
        - battery_discharging
        - biomass
        - black_coal
        - brown_coal
        - exports
        - demand
        - distillate
        - fossilfuel
        - renewables
        - gas_ccgt
        - gas_ocgt
        - gas_recip
        - gas_steam
        - generation
        - hydro
        - imports
        - price
        - pumps
        - rooftop_solar
        - solar
        - temperature
        - wind
      name: 
      region: nsw1
    - platform: filter
      entity_id: sensor.speedtest_download
      filters: ?
        - filter: lowpass
          precision: 2
          time_constant: 20
          window_size: 1
      name: Speedtest Download - Filtered
    - platform: filter
      entity_id: sensor.speedtest_upload
      filters: ?
        - filter: lowpass
          precision: 2
          time_constant: 20
          window_size: 1
      name: Speedtest Upload - Filtered
    - platform: statistics
      entity_id: sensor.speedtest_download
      max_age: 1 day, 0:00:00
      name: today_speedtest_download
      precision: 2
      sampling_size: 150
    - platform: statistics
      entity_id: sensor.speedtest_upload
      max_age: 1 day, 0:00:00
      name: today_speedtest_upload
      precision: 2
      sampling_size: 150
    - platform: template
      sensors: ?
        speedtest_download_max: ?
          attribute_templates: ?
          friendly_name: Download Speed - Max
          icon_template: Template("mdi:arrow-down-bold")
          unit_of_measurement: Mbit/s
          value_template: Template("{{ states.sensor.today_speedtest_download.attributes['max_value']}}")
        speedtest_download_min: ?
          attribute_templates: ?
          friendly_name: Download Speed - Min
          icon_template: Template("mdi:arrow-down-bold")
          unit_of_measurement: Mbit/s
          value_template: Template("{{ states.sensor.today_speedtest_download.attributes['min_value']}}")
        speedtest_upload_max: ?
          attribute_templates: ?
          friendly_name: Upload Speed - Max
          icon_template: Template("mdi:arrow-up-bold")
          unit_of_measurement: Mbit/s
          value_template: Template("{{ states.sensor.today_speedtest_upload.attributes['max_value']}}")
        speedtest_upload_min: ?
          attribute_templates: ?
          friendly_name: Upload Speed - Min
          icon_template: Template("mdi:arrow-up-bold")
          unit_of_measurement: Mbit/s
          value_template: Template("{{ states.sensor.today_speedtest_upload.attributes['min_value']}}")
    - platform: bom
      monitored_conditions: ?
        - apparent_t
        - cloud
        - cloud_base_m
        - cloud_oktas
        - cloud_type_id
        - cloud_type
        - delta_t
        - gust_kmh
        - gust_kt
        - air_temp
        - dewpt
        - local_date_time
        - local_date_time_full
        - press
        - press_qnh
        - press_msl
        - press_tend
        - rain_trace
        - rel_hum
        - vis_km
        - weather
        - wind_dir
        - wind_spd_kmh
        - wind_spd_kt
      name: Tamworth
      station: IDN60801.95762
    - platform: statistics
      entity_id: sensor.bom_tamworth_air_temp_c
      max_age: 1 day, 0:00:00
      name: today_temp_bom
      precision: 2
      sampling_size: 150
    - platform: template
      sensors: ?
        bom_max_temp: ?
          attribute_templates: ?
          friendly_name: BOM Max Temp
          icon_template: Template("mdi:thermometer-chevron-up")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_bom.attributes['max_value']}}")
        bom_min_temp: ?
          attribute_templates: ?
          friendly_name: BOM Min Temp
          icon_template: Template("mdi:thermometer-chevron-down")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_bom.attributes['min_value']}}")
    - platform: season
      name: Season
      type: astronomical
    - platform: bom_forecast
      forecast_days: 6
      friendly: False
      friendly_state_format: {min} to {max}, {summary}
      monitored_conditions: ?
        - max
        - min
        - chance_of_rain
        - possible_rainfall
        - summary
        - detailed_summary
        - icon
        - uv_alert
        - fire_danger
      name: Tamworth
      product_id: IDN11113
      rest_of_today: True
    - platform: template
      sensors: ?
        bom_current_text: ?
          attribute_templates: ?
          value_template: Template("{% set val = states("sensor.bom_tamworth_detailed_summary_0") %} {{ val.split('.')[0] | title }}
")
        bom_fire_danger: ?
          attribute_templates: ?
          value_template: Template("{%- if states('sensor.bom_tamworth_fire_danger_0') != 'n/a' -%}
  Fire Danger Today: {{ states('sensor.bom_tamworth_fire_danger_0') }}
{%- elif states('sensor.bom_tamworth_fire_danger_1') != 'n/a' -%}
  Fire Danger Tomorrow: {{ states('sensor.bom_tamworth_fire_danger_1') }}
{%- else -%}
  Fire Danger: Unavailable
{%- endif -%}
")
        bom_fire_danger_summary: ?
          attribute_templates: ?
          value_template: Template("{%- if states('sensor.bom_tamworth_fire_danger_0') != 'n/a' -%}
  {{ states('sensor.bom_tamworth_fire_danger_0') }}
{%- elif states('sensor.bom_tamworth_fire_danger_1') != 'n/a' -%}
  {{ states('sensor.bom_tamworth_fire_danger_1') }}
{%- else -%}
  Unavailable
{%- endif -%}
")
        bom_forecast_0: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.bom_tamworth_today_max
            - sensor.bom_tamworth_today_min
            - sensor.bom_tamworth_chance_of_rain_0
            - sensor.bom_tamworth_icon_0
          entity_picture_template: Template("{%- if now().strftime('%H:%M') > '18:00' and (states('sensor.bom_tamworth_icon_0') == 'fog' or states('sensor.bom_tamworth_icon_0') == 'haze' or states('sensor.bom_tamworth_icon_0') == ' light-showers' or states('sensor.bom_tamworth_icon_0') == 'partly-cloudy' or states('sensor.bom_tamworth_icon_0') == 'showers') -%} {{ '/local/icons/bom_icons/' ~ states('sensor.bom_tamworth_icon_0') ~ '-night.png' }} {%- else -%} {{ '/local/icons/bom_icons/' ~ states('sensor.bom_tamworth_icon_0') ~ '.png' }} {%- endif -%}")
          friendly_name: Today
          value_template: Template("{{states('sensor.bom_tamworth_today_min')|round(0)}}° to {{states('sensor.bom_tamworth_today_max')|round(0)}}° ({{states('sensor.bom_tamworth_chance_of_rain_0')|round(0)}}%, {{states('sensor.bom_tamworth_possible_rainfall_0')|round(0)}}mm)
")
        bom_forecast_1: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.bom_tamworth_max_temp_c_1
            - sensor.bom_tamworth_min_temp_c_1
            - sensor.bom_tamworth_chance_of_rain_1
            - sensor.bom_tamworth_icon_1
          entity_picture_template: Template("{{ '/local/icons/bom_icons/' ~ states('sensor.bom_tamworth_icon_1') ~ '.png' }}")
          friendly_name_template: Template("{%- set date = as_timestamp(now()) + (1 * 86400 ) -%} {{ date | timestamp_custom("Tomorrow (%d/%m)") | replace("(0", "(") | replace("/0", "/") }}
")
          value_template: Template("{{states('sensor.bom_tamworth_min_temp_c_1')|round(0)}}° to {{states('sensor.bom_tamworth_max_temp_c_1')|round(0)}}° ({{states('sensor.bom_tamworth_chance_of_rain_1')|round(0)}}%, {{states('sensor.bom_tamworth_possible_rainfall_1')|round(0)}}mm)
")
        bom_forecast_2: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.bom_tamworth_max_temp_c_2
            - sensor.bom_tamworth_min_temp_c_2
            - sensor.bom_tamworth_chance_of_rain_2
            - sensor.bom_tamworth_icon_2
          entity_picture_template: Template("{{ '/local/icons/bom_icons/' ~ states('sensor.bom_tamworth_icon_2') ~ '.png' }}")
          friendly_name_template: Template("{%- set date = as_timestamp(now()) + (2 * 86400 ) -%} {{ date | timestamp_custom("%A (%d/%m)") | replace("(0", "(") | replace("/0", "/") }}
")
          value_template: Template("{{states('sensor.bom_tamworth_min_temp_c_2')|round(0)}}° to {{states('sensor.bom_tamworth_max_temp_c_2')|round(0)}}° ({{states('sensor.bom_tamworth_chance_of_rain_2')|round(0)}}%, {{states('sensor.bom_tamworth_possible_rainfall_2')|round(0)}}mm)
")
        bom_forecast_3: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.bom_tamworth_max_temp_c_3
            - sensor.bom_tamworth_min_temp_c_3
            - sensor.bom_tamworth_chance_of_rain_3
            - sensor.bom_tamworth_icon_3
          entity_picture_template: Template("{{ '/local/icons/bom_icons/' ~ states('sensor.bom_tamworth_icon_3') ~ '.png' }}")
          friendly_name_template: Template("{%- set date = as_timestamp(now()) + (3 * 86400 ) -%} {{ date | timestamp_custom("%A (%d/%m)") | replace("(0", "(") | replace("/0", "/") }}
")
          value_template: Template("{{states('sensor.bom_tamworth_min_temp_c_3')|round(0)}}° to {{states('sensor.bom_tamworth_max_temp_c_3')|round(0)}}° ({{states('sensor.bom_tamworth_chance_of_rain_3')|round(0)}}%, {{states('sensor.bom_tamworth_possible_rainfall_3')|round(0)}}mm)
")
        bom_forecast_4: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.bom_tamworth_max_temp_c_4
            - sensor.bom_tamworth_min_temp_c_4
            - sensor.bom_tamworth_chance_of_rain_4
            - sensor.bom_tamworth_icon_4
          entity_picture_template: Template("{{ '/local/icons/bom_icons/' ~ states('sensor.bom_tamworth_icon_4') ~ '.png' }}")
          friendly_name_template: Template("{%- set date = as_timestamp(now()) + (4 * 86400 ) -%} {{ date | timestamp_custom("%A (%d/%m)") | replace("(0", "(") | replace("/0", "/") }}
")
          value_template: Template("{{states('sensor.bom_tamworth_min_temp_c_4')|round(0)}}° to {{states('sensor.bom_tamworth_max_temp_c_4')|round(0)}}° ({{states('sensor.bom_tamworth_chance_of_rain_4')|round(0)}}%, {{states('sensor.bom_tamworth_possible_rainfall_4')|round(0)}}mm)
")
        bom_forecast_5: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.bom_tamworth_max_temp_c_5
            - sensor.bom_tamworth_min_temp_c_5
            - sensor.bom_tamworth_chance_of_rain_5
            - sensor.bom_tamworth_icon_5
          entity_picture_template: Template("{{ '/local/icons/bom_icons/' ~ states('sensor.bom_tamworth_icon_5') ~ '.png' }}")
          friendly_name_template: Template("{%- set date = as_timestamp(now()) + (5 * 86400 ) -%} {{ date | timestamp_custom("%A (%d/%m)") | replace("(0", "(") | replace("/0", "/") }}
")
          value_template: Template("{{states('sensor.bom_tamworth_min_temp_c_5')|round(0)}}° to {{states('sensor.bom_tamworth_max_temp_c_5')|round(0)}}° ({{states('sensor.bom_tamworth_chance_of_rain_5')|round(0)}}%, {{states('sensor.bom_tamworth_possible_rainfall_5')|round(0)}}mm)
")
        bom_forecast_6: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.bom_tamworth_max_temp_c_6
            - sensor.bom_tamworth_min_temp_c_6
            - sensor.bom_tamworth_chance_of_rain_6
            - sensor.bom_tamworth_possible_rainfall_6
            - sensor.bom_tamworth_icon_6
          entity_picture_template: Template("{{ '/local/icons/bom_icons/' ~ states('sensor.bom_tamworth_icon_6') ~ '.png' }}")
          friendly_name_template: Template("{%- set date = as_timestamp(now()) + (6 * 86400 ) -%} {{ date | timestamp_custom("%A (%d/%m)") | replace("(0", "(") | replace("/0", "/") }}
")
          value_template: Template("{{states('sensor.bom_tamworth_min_temp_c_6')|round(0)}}° to {{states('sensor.bom_tamworth_max_temp_c_6')|round(0)}}° ({{states('sensor.bom_tamworth_chance_of_rain_6')|round(0)}}%, {{states('sensor.bom_tamworth_possible_rainfall_6')|round(0)}}mm)
")
        bom_today_max: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.bom_tamworth_max_temp_c_0
            - sensor.today_temp_bom
          value_template: Template("{%- if states('sensor.bom_tamworth_max_temp_c_0') == 'n/a' -%}
  {{ state_attr('sensor.today_temp_bom', 'max_value') }}
{% else %}
  {{ states('sensor.bom_tamworth_max_temp_c_0') }}
{% endif %}
")
        bom_today_min: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.bom_tamworth_min_temp_c_0
            - sensor.today_temp_bom
          value_template: Template("{%- if states('sensor.bom_tamworth_min_temp_c_0') == 'n/a' -%}
  {{ state_attr('sensor.today_temp_bom', 'min_value') }}
{% else %}
  {{ states('sensor.bom_tamworth_min_temp_c_0') }}
{% endif %}
")
        bom_uv_alert: ?
          attribute_templates: ?
          value_template: Template("{%- if states('sensor.bom_tamworth_uv_alert_0') != 'n/a' -%}
  UV Today: {{ states('sensor.bom_tamworth_uv_alert_0') }}
{%- elif states('sensor.bom_tamworth_uv_alert_1') != 'n/a' -%}
  UV Tomorrow: {{ states('sensor.bom_tamworth_uv_alert_1') }}
{%- else -%}
  UV: Unavailable
{%- endif -%}
")
        bom_uv_alert_summary: ?
          attribute_templates: ?
          value_template: Template("{%- if states('sensor.bom_tamworth_uv_alert_0') != 'n/a' -%}
  {% set val = states('sensor.bom_tamworth_uv_alert_0').split('[')[1].split(']')[0] %}
{%- elif states('sensor.bom_tamworth_uv_alert_1') != 'n/a' -%}
  {% set val = states('sensor.bom_tamworth_uv_alert_1').split('[')[1].split(']')[0] %}
{%- else -%}
  {%- set val = 'Unavailable' -%}
{%- endif -%}
  {{ val | title }}
")
        weather_rest_of_today: ?
          attribute_templates: ?
          friendly_name: Todays Weather
          icon_template: Template("{{ state_attr('sensor.bom_forecast_tamworth_0', 'icon') }}")
          value_template: Template("{{ states('sensor.bom_tamworth_air_temp_c') }}, {{ state_attr('sensor.bom_forecast_tamworth_0', 'Summary') }}
Feels like: {{ states('sensor.bom_tamworth_feels_like_c') }}
Humidity: {{ states('sensor.bom_tamworth_relative_humidity') }}%
Wind: {% if is_state('sensor.bom_tamworth_wind_direction', 'CALM') %} CALM {% else %} {{ states('sensor.bom_tamworth_wind_direction') }} {{ states('sensor.bom_tamworth_wind_speed_kmh') }} km/h {% endif %}
")
    - platform: climacell
      api_key: h7D4ZlwSAoV7knu0B6uIbsz842XpAv5Q
      latitude: -31.081265
      longitude: 150.941741
      monitored_conditions: ?
        forecast: ?
          - weather_condition
          - temperature
          - feels_like
          - precipitation
          - precipitation_probability
        realtime: ?
          - weather_condition
          - temperature
          - feels_like
          - humidity
          - visibility
          - cloud_cover
          - precipitation
          - precipitation_type
          - pressure
          - wind_speed
          - wind_direction
          - wind_gust
          - moon_phase
          - sunset
          - sunrise
          - pm25
          - pm10
          - o3
          - no2
          - co
          - so2
          - epa_aqi
          - epa_primary_pollutant
          - epa_health_concern
          - pollen_tree
          - pollen_weed
          - pollen_grass
          - fire_index
      name: Climacell
      scan_interval: 1:00:00
      units: si
    - platform: moon
      name: Moon
    - platform: template
      sensors: ?
        moonphase: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.moon
          friendly_name: Moon Phase
          value_template: Template("{{ states('sensor.moon').title().replace('_',' ') }}
")
    - platform: statistics
      entity_id: sensor.netatmo_brisbane_street_indoor_temperature
      max_age: 1 day, 0:00:00
      name: today_temp_netatmoindoor
      precision: 2
      sampling_size: 150
    - platform: statistics
      entity_id: sensor.netatmo_brisbane_street_outdoor_temperature
      max_age: 1 day, 0:00:00
      name: today_temp_netatmooutdoor
      precision: 2
      sampling_size: 150
    - platform: template
      sensors: ?
        netatmoindoor_change_temp: ?
          attribute_templates: ?
          friendly_name: Indoor Temp Change (Last 24hrs)
          icon_template: Template("mdi:thermometer-lines")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_netatmoindoor.attributes['change']}}")
        netatmoindoor_max_temp: ?
          attribute_templates: ?
          friendly_name: Indoor Max Temp
          icon_template: Template("mdi:thermometer-chevron-up")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_netatmoindoor.attributes['max_value']}}")
        netatmoindoor_min_temp: ?
          attribute_templates: ?
          friendly_name: Indoor Min Temp
          icon_template: Template("mdi:thermometer-chevron-down")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_netatmoindoor.attributes['min_value']}}")
        netatmooutdoor_change_temp: ?
          attribute_templates: ?
          friendly_name: Outdoor Temp Change (Last 24hrs)
          icon_template: Template("mdi:thermometer-lines")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_netatmoindoor.attributes['change']}}")
        netatmooutdoor_max_temp: ?
          attribute_templates: ?
          friendly_name: Outdoor Max Temp
          icon_template: Template("mdi:thermometer-chevron-up")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_netatmooutdoor.attributes['max_value']}}")
        netatmooutdoor_min_temp: ?
          attribute_templates: ?
          friendly_name: Outdoor Min Temp
          icon_template: Template("mdi:thermometer-chevron-down")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_netatmooutdoor.attributes['min_value']}}")
    - platform: nsw_air_quality
      name: Tamworth
    - platform: statistics
      entity_id: sensor.nsw_air_quality_tamworth
      max_age: 1 day, 0:00:00
      name: nsw_air_quality_tamworth_stats
      precision: 2
      sampling_size: 150
    - platform: template
      sensors: ?
        nsw_air_quality_tamworth_airpollev: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.nsw_air_quality_tamworth
          friendly_name: Air Quality Level
          icon_template: Template("mdi:chemical-weapon")
          value_template: Template("{% set index = states('sensor.nsw_air_quality_tamworth') | float(-1) %} {% if index > 200 %}
  Hazardous
{% elif index > 150 %}
  Very Poor
{% elif index > 100 %}
  Poor
{% elif index > 67 %}
  Fair
{% elif index > 34 %}
  Good
{% elif index >= 0 %}
  Very Good
{% else %}
  Unavailable
{% endif %}
")
        nsw_air_quality_tamworth_change_aqi: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.nsw_air_quality_tamworth_stats
          friendly_name: AQI Change (Last 24hrs)
          icon_template: Template("mdi:chart-bubble")
          unit_of_measurement: AQI
          value_template: Template("{{ states.sensor.nsw_air_quality_tamworth_stats.attributes['change']}}")
        nsw_air_quality_tamworth_max_aqi: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.nsw_air_quality_tamworth_stats
          friendly_name: Max AQI (Last 24hrs)
          icon_template: Template("mdi:chart-bubble")
          unit_of_measurement: AQI
          value_template: Template("{{ states.sensor.nsw_air_quality_tamworth_stats.attributes['max_value']}}")
        nsw_air_quality_tamworth_min_aqi: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.nsw_air_quality_tamworth_stats
          friendly_name: Min AQI (Last 24hrs)
          icon_template: Template("mdi:chart-bubble")
          unit_of_measurement: AQI
          value_template: Template("{{ states.sensor.nsw_air_quality_tamworth_stats.attributes['min_value']}}")
        nsw_air_quality_tamworth_pm10: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.nsw_air_quality_tamworth
          friendly_name: AQI - PM10
          icon_template: Template("mdi:cloud")
          unit_of_measurement: AQI
          value_template: Template("{{ state_attr('sensor.nsw_air_quality_tamworth', 'pm10') }}")
        nsw_air_quality_tamworth_pm25: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.nsw_air_quality_tamworth
          friendly_name: AQI - PM2.5
          icon_template: Template("mdi:cloud")
          unit_of_measurement: AQI
          value_template: Template("{{ state_attr('sensor.nsw_air_quality_tamworth', 'pm25') }}")
    - platform: template
      sensors: ?
        uvindex_level_current: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.current_uv_index
          friendly_name: Current UV Index Level
          icon_template: Template("mdi:sun")
          value_template: Template("{% set index = states('sensor.current_uv_index') | float(-1) %} {% if index > 11 %}
  Extreme
{% elif index > 8 %}
  Very High
{% elif index > 6 %}
  High
{% elif index > 3 %}
  Moderate
{% elif index >= 0 %}
  Low
{% else %}
  Unavailable
{% endif %}
")
        uvindex_level_max: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.max_uv_index
          friendly_name: Max UV Index Level
          icon_template: Template("mdi:sun")
          value_template: Template("{% set index = states('sensor.max_uv_index') | float(-1) %} {% if index > 11 %}
  Extreme
{% elif index > 8 %}
  Very High
{% elif index > 6 %}
  High
{% elif index > 3 %}
  Moderate
{% elif index >= 0 %}
  Low
{% else %}
  Unavailable
{% endif %}
")
    - platform: season
      name: Season
      type: astronomical
    - platform: template
      sensors: ?
        seasonname: ?
          attribute_templates: ?
          friendly_name: Season
          value_template: Template("{{ states('sensor.season').title() }}
")
    - platform: template
      sensors: ?
        sun_nextdawn: ?
          attribute_templates: ?
          friendly_name: Next Dawn
          icon_template: Template("mdi:weather-sunset-up")
          value_template: Template("{{ as_timestamp(states.sun.sun.attributes.next_dawn) | timestamp_custom('%a %H:%M') }}")
        sun_nextdusk: ?
          attribute_templates: ?
          friendly_name: Next Dusk
          icon_template: Template("mdi:weather-sunset-down")
          value_template: Template("{{ as_timestamp(states.sun.sun.attributes.next_dusk) | timestamp_custom('%a %H:%M') }}")
        sun_nextmidnight: ?
          attribute_templates: ?
          friendly_name: Next Midnight
          icon_template: Template("mdi:weather-night")
          value_template: Template("{{ as_timestamp(states.sun.sun.attributes.next_midnight) | timestamp_custom('%a %H:%M') }}")
        sun_nextnoon: ?
          attribute_templates: ?
          friendly_name: Next Noon
          icon_template: Template("mdi:weather-sunny")
          value_template: Template("{{ as_timestamp(states.sun.sun.attributes.next_noon) | timestamp_custom('%a %H:%M') }}")
        sun_nextrising: ?
          attribute_templates: ?
          friendly_name: Next Rising
          icon_template: Template("mdi:weather-sunset-up")
          value_template: Template("{{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom('%a %H:%M') }}")
        sun_nextsetting: ?
          attribute_templates: ?
          friendly_name: Next Setting
          icon_template: Template("mdi:weather-sunset-down")
          value_template: Template("{{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom('%a %H:%M') }}")
        sun_solarangle: ?
          attribute_templates: ?
          friendly_name: Sun Angle
          icon_template: Template("mdi:weather-sunny")
          unit_of_measurement: °
          value_template: Template("{{ '%+.1f'|format(state_attr('sun.sun', 'elevation')) }}")
        sun_state: ?
          attribute_templates: ?
          friendly_name: Sun
          icon_template: Template("{% if is_state('sun.sun', 'above_horizon') %}
  mdi:weather-sunny
{% else %}
  mdi:weather-night
{% endif %}")
          value_template: Template("{% if is_state('sun.sun', 'above_horizon') %}
  sets at {% set timestamp = as_timestamp(state_attr('sun.sun', 'next_setting')) | timestamp_custom('%H:%M') %} {{ timestamp.lstrip('0') }}
{% else %}
  rises at {% set timestamp = as_timestamp(state_attr('sun.sun', 'next_rising')) | timestamp_custom('%H:%M') %} {{ timestamp.lstrip('0') }}
{% endif %}")
        sun_state_day: ?
          attribute_templates: ?
          friendly_name: Sun State
          icon_template: Template("{% if is_state('sun.sun', 'above_horizon') %}
  mdi:weather-sunny
{% else %}
  mdi:weather-night
{% endif %}")
          value_template: Template("{% if is_state('sun.sun', 'above_horizon') %}
  Day
{% else %}
  Night
{% endif %}")
        sun_state_friendly: ?
          attribute_templates: ?
          friendly_name: Sun
          icon_template: Template("{% if is_state('sun.sun', 'above_horizon') %}
  mdi:weather-sunny
{% else %}
  mdi:weather-night
{% endif %}")
          value_template: Template("{% set current = as_timestamp(strptime(states('sensor.date_time'), '%Y-%m-%d, %H:%M')) %} {% set dusk = as_timestamp(state_attr('sun.sun', 'next_dusk')) %} {% if current <= dusk %}
  {# output example "will set at around 8." #}
  {# output example "will set at around a quarter past 8." #}
  {# output example "will set at around 8 and a half." #}
  {# output example "will set at around a quarter to 9." #}
  {# output example "will set in a few minutes." #}
  {# output example "is setting." #}
  {% set setting = as_timestamp(state_attr('sun.sun', 'next_setting')) %}
  {% if current >= setting %}
    is setting
  {% elif (setting - current) <= 60*30 %}
    will set in a few minutes
  {% else %}
    {% set hour = setting|timestamp_custom('%H') | int %}
    {% set minute = setting|timestamp_custom('%M') | int %}
    {% set minute_friendly = '' %}
    {% set half = false %}
    {% if minute >= 10 and minute <= 20 %}
      {% set minute_friendly = 'a quarter past ' %}
    {% elif minute > 20 and minute < 40 %}
      {% set half = true %}
    {% elif minute >= 40 and minute <= 50 %}
      {% set minute_friendly = 'a quarter to ' %}
      {% set hour = hour + 1 %}
    {% elif minute > 50 %}
      {% set hour = hour + 1 %}
    {% endif %}
    {% if hour >= 24 %}
      {% set hour = hour - 24 %}
    {% endif %}
    {% if hour == 0 %}
      {% set hour_friendly = 'midnight' %}
    {% elif hour == 12 %}
      {% set hour_friendly = 'noon' %}
    {% elif hour > 12 %}
      {% set hour_friendly = hour - 12 %}
    {% else %}
      {% set hour_friendly = hour %}
    {% endif %}
    {% if half %}
      will set at around {{ hour_friendly }} and a half
    {% else %}
      will set at around {{ minute_friendly }}{{ hour_friendly }}
    {% endif %}
  {% endif %}
{% else %}
  {# output example "will rise in about 7 hours." #}
  {# output example "will rise in about 7 and a half hours." #}
  {# output example "will rise in a few minutes." #}
  {# output example "is rising." #}
  {% set dawn = as_timestamp(state_attr('sun.sun', 'next_dawn')) %}
  {% set rising = as_timestamp(state_attr('sun.sun', 'next_rising')) %}
  {% set diff = ((rising - current) / 60 / 60) %}
  {% set hour = diff | int %}
  {% set minute = (diff - hour) | round(2) %}
  {% if hour %}
    {% if minute > 0.66 %}
      {% set hour = hour + 1 %}
    {% elif minute > 0.33 %}
      {% set minute_friendly = ' and a half' %}
    {% endif %}
    will rise in about {{hour}}{{ minute_friendly }} hour{% if hour > 0 %}s{% endif %}
  {% elif (rising - dawn) < 0%}
    is rising
  {% else %}
    will rise in a few minutes
  {% endif %}
{% endif %}")
    - platform: sun2
      monitored_conditions: ?
        - solar_midnight
        - astronomical_dawn
        - nautical_dawn
        - dawn
        - sunrise
        - solar_noon
        - sunset
        - dusk
        - nautical_dusk
        - astronomical_dusk
        - daylight
        - civil_daylight
        - nautical_daylight
        - astronomical_daylight
        - night
        - civil_night
        - nautical_night
        - astronomical_night
        - elevation
        - max_elevation
    - platform: waqi
      locations: [source /config/./packages/weather/waqi.yaml:5]
        - tamworth
      token: 0905b07fce183c6a31b800ab7375cbaa970d08e9
    - platform: statistics
      entity_id: sensor.waqi_tamworth_north_west_slopes_australia
      max_age: 1 day, 0:00:00
      name: waqi_tamworth_stats
      precision: 2
      sampling_size: 150
    - platform: template
      sensors: ?
        waqi_tamworth_airpollev: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.waqi_tamworth_north_west_slopes_australia
          friendly_name: Air Quality Level
          icon_template: Template("mdi:chemical-weapon")
          value_template: Template("{% set index = states('sensor.waqi_tamworth_north_west_slopes_australia') | float(-1) %} {% if index > 300 %}
  Hazardous
{% elif index > 200 %}
  Very Unhealthy
{% elif index > 150 %}
  Unhealthy
{% elif index > 100 %}
  Unhealthy for Sensitive Groups
{% elif index > 50 %}
  Moderate
{% elif index >= 0 %}
  Good
{% else %}
  Unavailable
{% endif %}
")
        waqi_tamworth_change_aqi: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.waqi_tamworth_stats
          friendly_name: AQI Change (Last 24hrs)
          icon_template: Template("mdi:chart-bubble")
          unit_of_measurement: AQI
          value_template: Template("{{ states.sensor.waqi_tamworth_stats.attributes['change']}}")
        waqi_tamworth_max_aqi: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.waqi_tamworth_stats
          friendly_name: Max AQI (Last 24hrs)
          icon_template: Template("mdi:chart-bubble")
          unit_of_measurement: AQI
          value_template: Template("{{ states.sensor.waqi_tamworth_stats.attributes['max_value']}}")
        waqi_tamworth_min_aqi: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.waqi_tamworth_stats
          friendly_name: Min AQI (Last 24hrs)
          icon_template: Template("mdi:chart-bubble")
          unit_of_measurement: AQI
          value_template: Template("{{ states.sensor.waqi_tamworth_stats.attributes['min_value']}}")
        waqi_tamworth_pm10: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.waqi_tamworth_north_west_slopes_australia
          friendly_name: AQI - PM10
          icon_template: Template("mdi:cloud")
          unit_of_measurement: AQI
          value_template: Template("{{ state_attr('sensor.waqi_tamworth_north_west_slopes_australia', 'pm_10') }}")
        waqi_tamworth_pm25: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.waqi_tamworth_north_west_slopes_australia
          friendly_name: AQI - PM2.5
          icon_template: Template("mdi:cloud")
          unit_of_measurement: AQI
          value_template: Template("{{ state_attr('sensor.waqi_tamworth_north_west_slopes_australia', 'pm_2_5') }}")
    - platform: waternsw
      from_variable: 130.0
      icon: mdi:water
      name: Chaffey Dam Volume
      site_id: 419069
      to_variable: 136.0
      unit_of_measure: ML
    - platform: waternsw
      from_variable: 130.0
      icon: mdi:water
      name: Chaffey Dam Water Level
      site_id: 419069
      to_variable: 130.0
      unit_of_measure: m
    - platform: waternsw
      from_variable: 130.0
      icon: mdi:water
      name: Chaffey Dam Storage
      site_id: 419069
      to_variable: 448.0
      unit_of_measure: %
    - platform: waternsw
      from_variable: 10.0
      icon: mdi:water
      name: Chaffey Dam Rainfall
      site_id: 419069
      to_variable: 10.0
      unit_of_measure: mm
    - platform: waternsw
      from_variable: 422.0
      icon: mdi:water
      name: Chaffey Dam Net Inflow (24hrs)
      site_id: 419069
      to_variable: 422.0
      unit_of_measure: ML
    - platform: waternsw
      from_variable: 459.0
      icon: mdi:water
      name: Chaffey Dam Releases (24hrs)
      site_id: 419069
      to_variable: 459.0
      unit_of_measure: ML
    - platform: waternsw
      from_variable: 700.0
      icon: mdi:water
      name: Chaffey Dam Evaporation (24hrs)
      site_id: 419069
      to_variable: 700.0
      unit_of_measure: mm
    - platform: waternsw
      from_variable: 130.0
      icon: mdi:water
      name: Keepit Dam Volume
      site_id: 419041
      to_variable: 136.0
      unit_of_measure: ML
    - platform: waternsw
      from_variable: 130.0
      icon: mdi:water
      name: Keepit Dam Water Level
      site_id: 419041
      to_variable: 130.0
      unit_of_measure: m
    - platform: waternsw
      from_variable: 130.0
      icon: mdi:water
      name: Keepit Dam Storage
      site_id: 419041
      to_variable: 448.0
      unit_of_measure: %
    - platform: waternsw
      from_variable: 10.0
      icon: mdi:water
      name: Keepit Dam Rainfall
      site_id: 419041
      to_variable: 10.0
      unit_of_measure: mm
    - platform: waternsw
      from_variable: 422.0
      icon: mdi:water
      name: Keepit Dam Net Inflow (24hrs)
      site_id: 419041
      to_variable: 422.0
      unit_of_measure: ML
    - platform: waternsw
      from_variable: 459.0
      icon: mdi:water
      name: Keepit Dam Releases (24hrs)
      site_id: 419041
      to_variable: 459.0
      unit_of_measure: ML
    - platform: waternsw
      from_variable: 700.0
      icon: mdi:water
      name: Keepit Dam Evaporation (24hrs)
      site_id: 419041
      to_variable: 700.0
      unit_of_measure: mm
    - platform: waternsw
      from_variable: 130.0
      icon: mdi:water
      name: Split Rock Dam Volume
      site_id: 419080
      to_variable: 136.0
      unit_of_measure: ML
    - platform: waternsw
      from_variable: 130.0
      icon: mdi:water
      name: Split Rock Dam Water Level
      site_id: 419080
      to_variable: 130.0
      unit_of_measure: m
    - platform: waternsw
      from_variable: 130.0
      icon: mdi:water
      name: Split Rock Dam Storage
      site_id: 419080
      to_variable: 448.0
      unit_of_measure: %
    - platform: waternsw
      from_variable: 10.0
      icon: mdi:water
      name: Split Rock Dam Rainfall
      site_id: 419080
      to_variable: 10.0
      unit_of_measure: mm
    - platform: waternsw
      from_variable: 422.0
      icon: mdi:water
      name: Split Rock Dam Net Inflow (24hrs)
      site_id: 419080
      to_variable: 422.0
      unit_of_measure: ML
    - platform: waternsw
      from_variable: 459.0
      icon: mdi:water
      name: Split Rock Dam Releases (24hrs)
      site_id: 419080
      to_variable: 459.0
      unit_of_measure: ML
    - platform: waternsw
      from_variable: 700.0
      icon: mdi:water
      name: Split Rock Dam Evaporation (24hrs)
      site_id: 419080
      to_variable: 700.0
      unit_of_measure: mm
    - platform: template
      sensors: ?
        waternsw_chaffey_dam: ?
          attribute_templates: ?
            active_storage: Template("90360")
            capacity: Template("102000")
            catchment_area: Template("406 sq km")
            dead_storage: Template("2400")
            dead_water_level: Template("518.649")
            latitude: Template("-31.348147000")
            longitude: Template("151.13947000")
            spillway_level: Template("525.100")
            surface_area: Template("542 ha")
          friendly_name: Chaffey Dam
          icon_template: Template("mdi:water")
          value_template: Template("419069")
        waternsw_keepit_dam: ?
          attribute_templates: ?
            active_storage: Template("243451")
            capacity: Template("420000")
            catchment_area: Template("5700 sq km")
            dead_storage: Template("6600")
            dead_water_level: Template("304.570")
            latitude: Template("-30.879200000")
            longitude: Template("150.49280000")
            spillway_level: Template("318.590")
            surface_area: Template("4370 ha")
          friendly_name: Keepit Dam
          icon_template: Template("mdi:water")
          value_template: Template("419041")
        waternsw_split_rock_dam: ?
          attribute_templates: ?
            active_storage: Template("116461")
            capacity: Template("397000")
            catchment_area: Template("1660 sq km")
            dead_storage: Template("3200")
            dead_water_level: Template("408.000")
            latitude: Template("-30.533333333")
            longitude: Template("150.70000000")
            spillway_level: Template("449.000")
            surface_area: Template("2150 ha")
          friendly_name: Split Rock Dam
          icon_template: Template("mdi:water")
          value_template: Template("419080")
    - platform: waternsw
      from_variable: 10.0
      icon: mdi:water
      name: Peel @ Chaffey Dam Rainfall
      site_id: 419069
      to_variable: 10.0
      unit_of_measure: mm
    - platform: waternsw
      from_variable: 10.0
      icon: mdi:water
      name: Peel @ Taroona Rainfall
      site_id: 419081
      to_variable: 10.0
      unit_of_measure: mm
    - platform: waternsw
      from_variable: 10.0
      icon: mdi:water
      name: Goonoo Goonoo @ Timbumburi Rainfall
      site_id: 419035
      to_variable: 10.0
      unit_of_measure: mm
    - platform: waternsw
      from_variable: 10.0
      icon: mdi:water
      name: DPI Calala AWS Rainfall
      site_id: 419113
      to_variable: 10.0
      unit_of_measure: mm
    - platform: waternsw
      from_variable: 500.0
      icon: mdi:water
      name: DPI Calala AWS Wind Direction
      site_id: 419113
      to_variable: 500.0
      unit_of_measure: Deg
    - platform: waternsw
      from_variable: 514.0
      icon: mdi:water
      name: DPI Calala AWS Avg Wind Speed
      site_id: 419113
      to_variable: 514.0
      unit_of_measure: m/s
    - platform: waternsw
      from_variable: 550.0
      icon: mdi:water
      name: DPI Calala AWS Baro Pressure
      site_id: 419113
      to_variable: 550.0
      unit_of_measure: hPa
    - platform: waternsw
      from_variable: 2065.0
      icon: mdi:water
      name: DPI Calala Air Temperature
      site_id: 419113
      to_variable: 2065.0
      unit_of_measure: °C
    - platform: waternsw
      from_variable: 2075.0
      icon: mdi:water
      name: DPI Calala Rel Humidity
      site_id: 419113
      to_variable: 2075.0
      unit_of_measure: %
    - platform: waternsw
      from_variable: 760.01
      icon: mdi:water
      name: DPI Calala Soil Moist 0.1m
      site_id: 419113
      to_variable: 760.01
      unit_of_measure: %
    - platform: waternsw
      from_variable: 760.02
      icon: mdi:water
      name: DPI Calala Soil Moist 0.2m
      site_id: 419113
      to_variable: 760.02
      unit_of_measure: %
    - platform: waternsw
      from_variable: 760.05
      icon: mdi:water
      name: DPI Calala Soil Moist 0.5m
      site_id: 419113
      to_variable: 760.05
      unit_of_measure: %
    - platform: waternsw
      from_variable: 760.1
      icon: mdi:water
      name: DPI Calala Soil Moist 1.0m
      site_id: 419113
      to_variable: 760.1
      unit_of_measure: %
    - platform: waternsw
      from_variable: 775.01
      icon: mdi:water
      name: DPI Calala Soil Temp 0.1m
      site_id: 419113
      to_variable: 775.01
      unit_of_measure: °C
    - platform: waternsw
      from_variable: 775.02
      icon: mdi:water
      name: DPI Calala Soil Temp 0.2m
      site_id: 419113
      to_variable: 775.02
      unit_of_measure: °C
    - platform: waternsw
      from_variable: 775.05
      icon: mdi:water
      name: DPI Calala Soil Temp 0.5m
      site_id: 419113
      to_variable: 775.05
      unit_of_measure: °C
    - platform: waternsw
      from_variable: 775.1
      icon: mdi:water
      name: DPI Calala Soil Temp 1.0m
      site_id: 419113
      to_variable: 775.1
      unit_of_measure: °C
    - platform: xbox_live
      api_key: f014a0ed313e691e7ea3105d882e9197a401abb8
      xuid: ?
        - 2533274794653219
    - platform: amberelectric
      postcode: 2340
    - platform: template
      sensors: ?
        amber_general_usage_price_next_24hr: ?
          attribute_templates: ?
            max_in_period: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] | sort(attribute='price_forecast') %} {{((price_forecast | sort(attribute='price'))|last)['price']}}")
            max_in_period_time: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] | sort(attribute='price_forecast') %}           {{as_timestamp(((price_forecast | sort(attribute='price'))|last)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            min_in_period: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] | sort(attribute='price_forecast') %} {{((price_forecast | sort(attribute='price'))|first)['price']}}")
            min_in_period_time: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] | sort(attribute='price_forecast') %}           {{as_timestamp(((price_forecast | sort(attribute='price'))|first)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            period_end: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] %} {{as_timestamp((price_forecast | last)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            period_start: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] %} {{as_timestamp((price_forecast | first)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
          entity_id: ?
            - sensor.amber_general_usage_price
          friendly_name: Amber General Usage Price (Next 24hrs)
          icon_template: Template("mdi:transmission-tower")
          unit_of_measurement: c/kWh
          value_template: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] %} {{((price_forecast | sum(attribute='price')) / (price_forecast | length())) | round(2)}}
")
        amber_general_usage_price_previous_24hr: ?
          attribute_templates: ?
            max_in_period: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] | sort(attribute='price_forecast') %} {{((price_forecast | sort(attribute='price'))|last)['price']}}")
            max_in_period_time: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] | sort(attribute='price_forecast') %}           {{as_timestamp(((price_forecast | sort(attribute='price'))|last)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            min_in_period: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] | sort(attribute='price_forecast') %} {{((price_forecast | sort(attribute='price'))|first)['price']}}")
            min_in_period_time: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] | sort(attribute='price_forecast') %}           {{as_timestamp(((price_forecast | sort(attribute='price'))|first)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            period_end: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] %} {{as_timestamp((price_forecast | last)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            period_start: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] %} {{as_timestamp((price_forecast | first)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
          entity_id: ?
            - sensor.amber_general_usage_price
          friendly_name: Amber General Usage Price (Previous 24hrs)
          icon_template: Template("mdi:transmission-tower")
          unit_of_measurement: c/kWh
          value_template: Template("{% set price_forecast = (states.sensor.amber_general_usage_price.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] %} {{((price_forecast | sum(attribute='price')) / (price_forecast | length())) | round(2)}}
")
        amber_solar_feed_in_tariff_next_24hr: ?
          attribute_templates: ?
            max_in_period: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] | sort(attribute='price_forecast') %} {{((price_forecast | sort(attribute='price'))|last)['price']}}")
            max_in_period_time: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] | sort(attribute='price_forecast') %}           {{as_timestamp(((price_forecast | sort(attribute='price'))|last)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            min_in_period: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] | sort(attribute='price_forecast') %} {{((price_forecast | sort(attribute='price'))|first)['price']}}")
            min_in_period_time: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] | sort(attribute='price_forecast') %}           {{as_timestamp(((price_forecast | sort(attribute='price'))|first)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            period_end: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] %} {{as_timestamp((price_forecast | last)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            period_start: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] %} {{as_timestamp((price_forecast | first)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
          entity_id: ?
            - sensor.amber_solar_feed_in_tariff
          friendly_name: Amber Solar Feed-In Tariff (Next 24hrs)
          icon_template: Template("mdi:solar-power")
          unit_of_measurement: c/kWh
          value_template: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[48:96] %} {{((price_forecast | sum(attribute='price')) / (price_forecast | length())) | round(2)}}
")
        amber_solar_feed_in_tariff_previous_24hr: ?
          attribute_templates: ?
            max_in_period: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] | sort(attribute='price_forecast') %} {{((price_forecast | sort(attribute='price'))|last)['price']}}")
            max_in_period_time: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] | sort(attribute='price_forecast') %}           {{as_timestamp(((price_forecast | sort(attribute='price'))|last)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            min_in_period: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] | sort(attribute='price_forecast') %} {{((price_forecast | sort(attribute='price'))|first)['price']}}")
            min_in_period_time: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] | sort(attribute='price_forecast') %}           {{as_timestamp(((price_forecast | sort(attribute='price'))|first)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            period_end: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] %} {{as_timestamp((price_forecast | last)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
            period_start: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] %} {{as_timestamp((price_forecast | first)['pricing_period']) | timestamp_custom ("%A %-d %b, %H:%M")}}")
          entity_id: ?
            - sensor.amber_solar_feed_in_tariff
          friendly_name: Amber Amber Solar Feed-In Tariff (Previous 24hrs)
          icon_template: Template("mdi:solar-power")
          unit_of_measurement: c/kWh
          value_template: Template("{% set price_forecast = (states.sensor.amber_solar_feed_in_tariff.attributes["price_forcecast"] | sort(attribute='pricing_period'))[0:48] %} {{((price_forecast | sum(attribute='price')) / (price_forecast | length())) | round(2)}}
")
    - platform: template
      sensors: ?
        binday_date: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Next Collection Date
          icon_template: Template("mdi:truck-delivery")
          value_template: Template("{{ as_timestamp(states.sensor.binday_waste.attributes['next_date'])|timestamp_custom ('%a %-d %-b') }}")
        binday_greenbin: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Green Waste
          icon_template: Template("mdi:leaf")
          value_template: Template("{% set val = states.sensor.binday_greenwaste.attributes['days'] %} {% if val == 0 %}
  Today
{% elif val == 1 %}
  Tomorrow
{% elif val >= 7 %}
  Next Week
{% else %}
  In {{val}} Days
{% endif %}")
        binday_next: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Next Bin Day
          icon_template: Template("mdi:truck-delivery")
          value_template: Template("{% set val = states.sensor.binday_waste.attributes['days'] %} {% if val == 0 %} {% set day = "Today" %} {% elif val == 1 %} {% set day = "Tomorrow" %} {% else %} {% set day = "In " ~ val ~ " Days" %} {% endif %} {% set gwval = states.sensor.binday_greenwaste.attributes['days'] %} {% if gwval <= 7 %}
  {% set bins = "Red + Green" %}
{% else %}
  {% set bins = "Red + Yellow" %}
{% endif %} {{ day }} - {{bins}}")
        binday_redbin: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: General Waste
          icon_template: Template("mdi:delete-empty")
          value_template: Template("{% set val = states.sensor.binday_waste.attributes['days'] %} {% if val == 0 %}
  Today
{% elif val == 1 %}
  Tomorrow
{% elif val >= 7 %}
  Next Week
{% else %}
  In {{val}} Days
{% endif %}")
        binday_yellowbin: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Recycling
          icon_template: Template("mdi:recycle")
          value_template: Template("{% set val = states.sensor.binday_recycling.attributes['days'] %} {% if val == 0 %}
  Today
{% elif val == 1 %}
  Tomorrow
{% elif val >= 7 %}
  Next Week
{% else %}
  In {{val}} Days
{% endif %}")
    - platform: statistics
      entity_id: sensor.zha_bedroom_temperature
      max_age: 1 day, 0:00:00
      name: today_temp_xiaomibedroom
      precision: 2
      sampling_size: 150
    - platform: statistics
      entity_id: sensor.zha_office_temperature
      max_age: 1 day, 0:00:00
      name: today_temp_xiaomioffice
      precision: 2
      sampling_size: 150
    - platform: template
      sensors: ?
        xiaomibedroom_change_temp: ?
          attribute_templates: ?
          friendly_name: Bedroom Temp Change (Last 24hrs)
          icon_template: Template("mdi:thermometer-lines")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_xiaomibedroom.attributes['change']}}")
        xiaomibedroom_max_temp: ?
          attribute_templates: ?
          friendly_name: Bedroom Max Temp (Last 24hrs)
          icon_template: Template("mdi:thermometer-chevron-up")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_xiaomibedroom.attributes['max_value']}}")
        xiaomibedroom_min_temp: ?
          attribute_templates: ?
          friendly_name: Bedroom Min Temp (Last 24hrs)
          icon_template: Template("mdi:thermometer-chevron-down")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_xiaomibedroom.attributes['min_value']}}")
        xiaomioffice_change_temp: ?
          attribute_templates: ?
          friendly_name: Office Temp Change (Last 24hrs)
          icon_template: Template("mdi:thermometer-lines")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_xiaomioffice.attributes['change']}}")
        xiaomioffice_max_temp: ?
          attribute_templates: ?
          friendly_name: Office Max Temp (Last 24hrs)
          icon_template: Template("mdi:thermometer-chevron-up")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_xiaomioffice.attributes['max_value']}}")
        xiaomioffice_min_temp: ?
          attribute_templates: ?
          friendly_name: Office Min Temp (Last 24hrs)
          icon_template: Template("mdi:thermometer-chevron-down")
          unit_of_measurement: °C
          value_template: Template("{{ states.sensor.today_temp_xiaomioffice.attributes['min_value']}}")
    - platform: command_line
      command: curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq '{"newest_version":.data.version_latest,"current_version":.data.version,"addons":[.data.addons[] | select(.version != .installed)]}'
      command_timeout: 15
      json_attributes: [source /config/./packages/testing/supervisor.yaml:8]
        - newest_version
        - current_version
        - addons
      name: Supervisor Installed
      unit_of_measurement: pending update(s)
      value_template: Template("{{ value_json.addons | length }}")
    - platform: command_line
      command: curl http://supervisor/dns/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq '{"version":.data.version,"version_latest":.data.version_latest }'
      command_timeout: 15
      json_attributes: [source /config/./packages/testing/supervisor.yaml:17]
        - version
        - version_latest
      name: DNS Installed
      value_template: Template("{{ value_json.version }}")
    - platform: command_line
      command: curl http://supervisor/audio/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq '{"version":.data.version,"version_latest":.data.version_latest }'
      command_timeout: 15
      json_attributes: [source /config/./packages/testing/supervisor.yaml:25]
        - version
        - version_latest
      name: Audio Installed
      value_template: Template("{{ value_json.version }}")
    - platform: command_line
      command: curl http://supervisor/cli/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq '{"version":.data.version,"version_latest":.data.version_latest }'
      command_timeout: 15
      json_attributes: [source /config/./packages/testing/supervisor.yaml:33]
        - version
        - version_latest
      name: Cli Installed
      value_template: Template("{{ value_json.version }}")
    - platform: command_line
      command: curl http://supervisor/multicast/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq '{"version":.data.version,"version_latest":.data.version_latest }'
      command_timeout: 15
      json_attributes: [source /config/./packages/testing/supervisor.yaml:41]
        - version
        - version_latest
      name: Multicast Installed
      value_template: Template("{{ value_json.version }}")
    - platform: template
      sensors: ?
        current_audio_installed: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.audio_installed.attributes["version"] }}")
        current_cli_installed: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.cli_installed.attributes["version"] }}")
        current_dns_installed: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.dns_installed.attributes["version"] }}")
        current_multicast_installed: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.multicast_installed.attributes["version"] }}")
        current_multicast_latest: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.multicast_installed.attributes["version_latest"] }}")
        current_supervisor_installed: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.supervisor_installed.attributes["current_version"] }}")
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/testing/supervisor.yaml:64]
        - supervisor
        - homeassistant
        - hassos
        - hassos-cli
        - cli
        - dns
        - audio
      method: GET
      name: Home Assistant Beta Supervised Versions
      resource: https://s3.amazonaws.com/hassio-version/beta.json
      scan_interval: 2:00:00
      timeout: 10
      value_template: Template("OK")
      verify_ssl: True
    - platform: template
      sensors: ?
        current_audio_beta: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_beta_supervised_versions.attributes["audio"] }}")
        current_cli_beta: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_beta_supervised_versions.attributes["cli"] }}")
        current_dns_beta: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_beta_supervised_versions.attributes["dns"] }}")
        current_ha_beta: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_beta_supervised_versions.attributes["homeassistant"]["intel-nuc"] }}")
        current_hassos_beta: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_beta_supervised_versions.attributes["hassos"]["intel-nuc"] }}")
        current_hassos_cli_beta: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_beta_supervised_versions.attributes["hassos-cli"] }}")
        current_supervisor_beta: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_beta_supervised_versions.attributes["supervisor"] }}")
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/testing/supervisor.yaml:93]
        - supervisor
        - homeassistant
        - hassos
        - hassos-cli
        - cli
        - dns
        - audio
      method: GET
      name: Home Assistant Supervised Stable Versions
      resource: https://s3.amazonaws.com/hassio-version/stable.json
      scan_interval: 2:00:00
      timeout: 10
      value_template: Template("OK")
      verify_ssl: True
    - platform: template
      sensors: ?
        current_audio_stable: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_stable_versions.attributes["audio"] }}")
        current_cli_stable: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_stable_versions.attributes["cli"] }}")
        current_dns_stable: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_stable_versions.attributes["dns"] }}")
        current_ha_stable: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_stable_versions.attributes["homeassistant"]["intel-nuc"] }}")
        current_hassos_cli_stable: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_stable_versions.attributes["hassos-cli"] }}")
        current_hassos_stable: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_stable_versions.attributes["hassos"]["intel-nuc"] }}")
        current_supervisor_stable: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_stable_versions.attributes["supervisor"] }}")
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/testing/supervisor.yaml:122]
        - supervisor
        - homeassistant
        - hassos
        - hassos-cli
        - cli
        - dns
        - audio
      method: GET
      name: Home Assistant Supervised Dev Versions
      resource: https://s3.amazonaws.com/hassio-version/dev.json
      scan_interval: 2:00:00
      timeout: 10
      value_template: Template("OK")
      verify_ssl: True
    - platform: template
      sensors: ?
        current_audio_dev: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_dev_versions.attributes["audio"] }}")
        current_cli_dev: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_dev_versions.attributes["cli"] }}")
        current_dns_dev: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_dev_versions.attributes["dns"] }}")
        current_ha_dev: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_dev_versions.attributes["homeassistant"]["intel-nuc"] }}")
        current_hassos_cli_dev: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_dev_versions.attributes["hassos-cli"] }}")
        current_hassos_dev: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_dev_versions.attributes["hassos"]["intel-nuc"] }}")
        current_supervisor_dev: ?
          attribute_templates: ?
          value_template: Template("{{ states.sensor.home_assistant_supervised_dev_versions.attributes["supervisor"] }}")
    - platform: websocket_api
    - platform: scrape
      index: 0
      name: Dwains Theme Version
      resource: https://dwains-theme.dwainscheeren.nl/version?v=1.4.0a4
      scan_interval: 1:00:00
      select: .current-version h1
      value_template: Template("{{ value.split(":")[1] }}")
      verify_ssl: True
    - platform: google_fit
      client_id: 327072154861-oklrprisg00vj1rbnpnl5u87hfgbdq67.apps.googleusercontent.com
      client_secret: YhYWI8MK1TmiaGZ8QQusqab0
      name: Google Fit
    - platform: here_travel_time
      api_key: tUnI6W3SE7jVWG8d4rnLl_xM5cUvJ9wMBP5XIqAYGqI
      destination_entity_id: zone.trc
      entity_namespace: here_travel
      mode: car
      name: Home to Work (Car)
      origin_entity_id: zone.home
      route_mode: fastest
      traffic_mode: False
    - platform: here_travel_time
      api_key: tUnI6W3SE7jVWG8d4rnLl_xM5cUvJ9wMBP5XIqAYGqI
      destination_entity_id: zone.trc
      entity_namespace: here_travel
      mode: pedestrian
      name: Home to Work (Walk)
      origin_entity_id: zone.home
      route_mode: fastest
      traffic_mode: False
    - platform: here_travel_time
      api_key: tUnI6W3SE7jVWG8d4rnLl_xM5cUvJ9wMBP5XIqAYGqI
      destination_entity_id: zone.home
      entity_namespace: here_travel
      mode: car
      name: Tom to Home
      origin_entity_id: device_tracker.tbiphone11_3
      route_mode: fastest
      traffic_mode: False
    - platform: here_travel_time
      api_key: tUnI6W3SE7jVWG8d4rnLl_xM5cUvJ9wMBP5XIqAYGqI
      destination_entity_id: zone.trc
      entity_namespace: here_travel
      mode: car
      name: Tom to Work
      origin_entity_id: device_tracker.tbiphone11_3
      route_mode: fastest
      traffic_mode: False
    - platform: template
      sensors: ?
        here_travel_tom_to_home_arrivetime: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.time
          friendly_name: Tom arrival time (Home)
          value_template: Template("{% set minutes = states('sensor.here_travel_tom_to_home') | int %} {{ (as_timestamp(now()) + (minutes * 60)) | timestamp_custom('%H:%M') }}
")
        here_travel_tom_to_work_arrivetime: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.time
          friendly_name: Tom arrival time (Work)
          value_template: Template("{% set minutes = states('sensor.here_travel_tom_to_work') | int %} {{ (as_timestamp(now()) + (minutes * 60)) | timestamp_custom('%H:%M') }}
")
    - platform: template
      sensors: ?
        thomas_status: ?
          attribute_templates: ?
          entity_id: ?
            - device_tracker.tbiphone11
          entity_picture_template: Template("/local/avatar_thomas.jpg")
          friendly_name: Thomas
          icon_template: Template("{% if is_state('device_tracker.tbiphone11', 'home') %}
  mdi:house
{% elif is_state('device_tracker.tbiphone11', 'trc') %}
  mdi:work
{% else %}
  mdi:car
{% endif %}")
          value_template: Template("{% if is_state('device_tracker.tbiphone11', 'home') %}
  Home
{% elif is_state('device_tracker.tbiphone11', 'trc') %}
  Work
{% else %}
  Away
{% endif %}")
    - platform: waze_travel_time
      avoid_ferries: False
      avoid_subscription_roads: False
      avoid_toll_roads: False
      destination: zone.trc
      entity_namespace: waze_travel
      name: Home to Work
      origin: zone.home
      realtime: True
      region: AU
      units: metric
      vehicle_type: car
    - platform: waze_travel_time
      avoid_ferries: False
      avoid_subscription_roads: False
      avoid_toll_roads: False
      destination: zone.trc
      entity_namespace: waze_travel
      name: Tom to Work
      origin: device_tracker.tbiphone11_3
      realtime: True
      region: AU
      units: metric
      vehicle_type: car
    - platform: waze_travel_time
      avoid_ferries: False
      avoid_subscription_roads: False
      avoid_toll_roads: False
      destination: zone.home
      entity_namespace: waze_travel
      name: Tom to Home
      origin: device_tracker.tbiphone11_3
      realtime: True
      region: AU
      units: metric
      vehicle_type: car
    - platform: template
      sensors: ?
        waze_travel_tom_to_home_arrivetime: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.time
          friendly_name: Tom arrival time (Home)
          value_template: Template("{% set minutes = states('sensor.waze_travel_tom_to_home') | int %} {{ (as_timestamp(now()) + (minutes * 60)) | timestamp_custom('%H:%M') }}
")
        waze_travel_tom_to_work_arrivetime: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.time
          friendly_name: Tom arrival time (Work)
          value_template: Template("{% set minutes = states('sensor.waze_travel_tom_to_work') | int %} {{ (as_timestamp(now()) + (minutes * 60)) | timestamp_custom('%H:%M') }}
")
    - platform: template
      sensors: ?
        harmonyhub_status: ?
          attribute_templates: ?
          friendly_name: Harmony Hub Status
          value_template: Template("{{ states.remote.harmony_hub.attributes.current_activity }}")
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/media/hdhomerun.yaml:6]
        - FriendlyName
        - ModelNumber
        - FirmwareName
        - FirmwareVersion
        - DeviceID
        - DeviceAuth
        - UpgradeAvailable
        - BaseURL
        - LineupURL
        - TunerCount
        - ConditionalAccess
      method: GET
      name: HDHomeRun Info
      resource: http://192.168.1.120/discover.json
      timeout: 10
      value_template: Template("OK")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/media/hdhomerun.yaml:23]
        - Resource
        - VctNumber
        - VctName
        - Frequency
        - SignalStrengthPercent
        - SymbolQualityPercent
        - TargetIP
      json_attributes_path: $..[?(@.Resource=='tuner0')]
      method: GET
      name: HDHomeRun - Tuner 0
      resource: http://192.168.1.120/status.json
      timeout: 10
      value_template: Template("{% if value_json[0].VctName is defined %}
  In Use
{% else %}
  Not In Use
{% endif %}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/media/hdhomerun.yaml:41]
        - Resource
        - VctNumber
        - VctName
        - Frequency
        - SignalStrengthPercent
        - SymbolQualityPercent
        - TargetIP
      json_attributes_path: $..[?(@.Resource=='tuner1')]
      method: GET
      name: HDHomeRun - Tuner 1
      resource: http://192.168.1.120/status.json
      timeout: 10
      value_template: Template("{% if value_json[0].VctName is defined %}
  In Use
{% else %}
  Not In Use
{% endif %}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/media/hdhomerun.yaml:59]
        - Resource
        - VctNumber
        - VctName
        - Frequency
        - SignalStrengthPercent
        - SymbolQualityPercent
        - TargetIP
      json_attributes_path: $..[?(@.Resource=='tuner2')]
      method: GET
      name: HDHomeRun - Tuner 2
      resource: http://192.168.1.120/status.json
      timeout: 10
      value_template: Template("{% if value_json[0].VctName is defined %}
  In Use
{% else %}
  Not In Use
{% endif %}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: [source /config/./packages/media/hdhomerun.yaml:77]
        - Resource
        - VctNumber
        - VctName
        - Frequency
        - SignalStrengthPercent
        - SymbolQualityPercent
        - TargetIP
      json_attributes_path: $..[?(@.Resource=='tuner3')]
      method: GET
      name: HDHomeRun - Tuner 3
      resource: http://192.168.1.120/status.json
      timeout: 10
      value_template: Template("{% if value_json[0].VctName is defined %}
  In Use
{% else %}
  Not In Use
{% endif %}")
      verify_ssl: True
    - platform: template
      sensors: ?
        lovelace_plex_recent_movies_01: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[1]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[1]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[1]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[1]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[1]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[1]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[1]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[1]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 01
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[1]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[1]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_02: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[2]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[2]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[2]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[2]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[2]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[2]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[2]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[2]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 02
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[2]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[2]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_03: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[3]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[3]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[3]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[3]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[3]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[3]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[3]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[3]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 03
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[3]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[3]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_04: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[4]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[4]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[4]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[4]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[4]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[4]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[4]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[4]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 04
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[4]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[4]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_05: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[5]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[5]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[5]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[5]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[5]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[5]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[5]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[5]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 05
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[5]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[5]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_06: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[6]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[6]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[6]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[6]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[6]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[6]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[6]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[6]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 06
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[6]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[6]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_07: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[7]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[7]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[7]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[7]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[7]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[7]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[7]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[7]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 07
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[7]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[7]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_08: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[8]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[8]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[8]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[8]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[8]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[8]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[8]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[8]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 08
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[8]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[8]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_09: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[9]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[9]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[9]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[9]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[9]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[9]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[9]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[9]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 09
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[9]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[9]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_10: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[10]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[10]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[10]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[10]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[10]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[10]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[10]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[10]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 10
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[10]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[10]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_11: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[11]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[11]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[11]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[11]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[11]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[11]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[11]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[11]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 11
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[11]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[11]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_movies_12: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[12]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added_movies', 'data')[12]['airdate']) is defined else "None"}}
")
            name: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[12]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[12]['title'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[12]['poster'] if state_attr('sensor.plex_recently_added_movies', 'data')[12]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[12]['flag'] if state_attr('sensor.plex_recently_added_movies', 'data')[12]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added_movies
          friendly_name: Lovelace - Plex Recent Movies 12
          value_template: Template("{{state_attr('sensor.plex_recently_added_movies', 'data')[12]['title'] if state_attr('sensor.plex_recently_added_movies', 'data')[12]['title'] is defined else 'None'}}
")
    - platform: template
      sensors: ?
        lovelace_plex_recent_tv_01: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[1]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[1]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[1]['episode'] if state_attr('sensor.plex_recently_added', 'data')[1]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[1]['title'] if state_attr('sensor.plex_recently_added', 'data')[1]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[1]['number'] if state_attr('sensor.plex_recently_added', 'data')[1]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[1]['poster'] if state_attr('sensor.plex_recently_added', 'data')[1]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[1]['flag'] if state_attr('sensor.plex_recently_added', 'data')[1]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 01
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[1]['title'] if state_attr('sensor.plex_recently_added', 'data')[1]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_02: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[2]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[2]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[2]['episode'] if state_attr('sensor.plex_recently_added', 'data')[2]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[2]['title'] if state_attr('sensor.plex_recently_added', 'data')[2]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[2]['number'] if state_attr('sensor.plex_recently_added', 'data')[2]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[2]['poster'] if state_attr('sensor.plex_recently_added', 'data')[2]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[2]['flag'] if state_attr('sensor.plex_recently_added', 'data')[2]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 02
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[2]['title'] if state_attr('sensor.plex_recently_added', 'data')[2]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_03: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[3]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[3]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[3]['episode'] if state_attr('sensor.plex_recently_added', 'data')[3]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[3]['title'] if state_attr('sensor.plex_recently_added', 'data')[3]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[3]['number'] if state_attr('sensor.plex_recently_added', 'data')[3]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[3]['poster'] if state_attr('sensor.plex_recently_added', 'data')[3]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[3]['flag'] if state_attr('sensor.plex_recently_added', 'data')[3]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 03
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[3]['title'] if state_attr('sensor.plex_recently_added', 'data')[3]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_04: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[4]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[4]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[4]['episode'] if state_attr('sensor.plex_recently_added', 'data')[4]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[4]['title'] if state_attr('sensor.plex_recently_added', 'data')[4]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[4]['number'] if state_attr('sensor.plex_recently_added', 'data')[4]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[4]['poster'] if state_attr('sensor.plex_recently_added', 'data')[4]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[4]['flag'] if state_attr('sensor.plex_recently_added', 'data')[4]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 04
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[4]['title'] if state_attr('sensor.plex_recently_added', 'data')[4]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_05: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[5]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[5]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[5]['episode'] if state_attr('sensor.plex_recently_added', 'data')[5]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[5]['title'] if state_attr('sensor.plex_recently_added', 'data')[5]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[5]['number'] if state_attr('sensor.plex_recently_added', 'data')[5]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[5]['poster'] if state_attr('sensor.plex_recently_added', 'data')[5]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[5]['flag'] if state_attr('sensor.plex_recently_added', 'data')[5]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 05
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[5]['title'] if state_attr('sensor.plex_recently_added', 'data')[5]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_06: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[6]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[6]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[6]['episode'] if state_attr('sensor.plex_recently_added', 'data')[6]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[6]['title'] if state_attr('sensor.plex_recently_added', 'data')[6]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[6]['number'] if state_attr('sensor.plex_recently_added', 'data')[6]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[6]['poster'] if state_attr('sensor.plex_recently_added', 'data')[6]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[6]['flag'] if state_attr('sensor.plex_recently_added', 'data')[6]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 06
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[6]['title'] if state_attr('sensor.plex_recently_added', 'data')[6]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_07: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[7]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[7]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[7]['episode'] if state_attr('sensor.plex_recently_added', 'data')[7]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[7]['title'] if state_attr('sensor.plex_recently_added', 'data')[7]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[7]['number'] if state_attr('sensor.plex_recently_added', 'data')[7]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[7]['poster'] if state_attr('sensor.plex_recently_added', 'data')[7]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[7]['flag'] if state_attr('sensor.plex_recently_added', 'data')[7]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 07
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[7]['title'] if state_attr('sensor.plex_recently_added', 'data')[7]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_08: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[8]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[8]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[8]['episode'] if state_attr('sensor.plex_recently_added', 'data')[8]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[8]['title'] if state_attr('sensor.plex_recently_added', 'data')[8]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[8]['number'] if state_attr('sensor.plex_recently_added', 'data')[8]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[8]['poster'] if state_attr('sensor.plex_recently_added', 'data')[8]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[8]['flag'] if state_attr('sensor.plex_recently_added', 'data')[8]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 08
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[8]['title'] if state_attr('sensor.plex_recently_added', 'data')[8]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_09: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[9]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[9]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[9]['episode'] if state_attr('sensor.plex_recently_added', 'data')[9]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[9]['title'] if state_attr('sensor.plex_recently_added', 'data')[9]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[9]['number'] if state_attr('sensor.plex_recently_added', 'data')[9]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[9]['poster'] if state_attr('sensor.plex_recently_added', 'data')[9]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[9]['flag'] if state_attr('sensor.plex_recently_added', 'data')[9]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 09
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[9]['title'] if state_attr('sensor.plex_recently_added', 'data')[9]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_10: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[10]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[10]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[10]['episode'] if state_attr('sensor.plex_recently_added', 'data')[10]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[10]['title'] if state_attr('sensor.plex_recently_added', 'data')[10]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[10]['number'] if state_attr('sensor.plex_recently_added', 'data')[10]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[10]['poster'] if state_attr('sensor.plex_recently_added', 'data')[10]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[10]['flag'] if state_attr('sensor.plex_recently_added', 'data')[10]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 10
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[10]['title'] if state_attr('sensor.plex_recently_added', 'data')[10]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_11: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[11]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[11]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[11]['episode'] if state_attr('sensor.plex_recently_added', 'data')[11]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[11]['title'] if state_attr('sensor.plex_recently_added', 'data')[11]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[11]['number'] if state_attr('sensor.plex_recently_added', 'data')[11]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[11]['poster'] if state_attr('sensor.plex_recently_added', 'data')[11]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[11]['flag'] if state_attr('sensor.plex_recently_added', 'data')[11]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 11
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[11]['title'] if state_attr('sensor.plex_recently_added', 'data')[11]['title'] is defined else 'None'}}
")
        lovelace_plex_recent_tv_12: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.plex_recently_added', 'data')[12]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.plex_recently_added', 'data')[12]['airdate']) is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.plex_recently_added', 'data')[12]['episode'] if state_attr('sensor.plex_recently_added', 'data')[12]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.plex_recently_added', 'data')[12]['title'] if state_attr('sensor.plex_recently_added', 'data')[12]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.plex_recently_added', 'data')[12]['number'] if state_attr('sensor.plex_recently_added', 'data')[12]['number'] is defined else 'None'}}
")
            poster: Template("{{state_attr('sensor.plex_recently_added', 'data')[12]['poster'] if state_attr('sensor.plex_recently_added', 'data')[12]['poster'] is defined else "None"}}
")
            watched: Template("{{state_attr('sensor.plex_recently_added', 'data')[12]['flag'] if state_attr('sensor.plex_recently_added', 'data')[12]['flag'] is defined else "None"}}
")
          entity_id: ?
            - sensor.plex_recently_added
          friendly_name: Lovelace - Plex Recent TV 12
          value_template: Template("{{state_attr('sensor.plex_recently_added', 'data')[12]['title'] if state_attr('sensor.plex_recently_added', 'data')[12]['title'] is defined else 'None'}}
")
    - platform: template
      sensors: ?
        lovelace_radarr_upcoming_01: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[1]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 1 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[1]['flag'] if 1 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[1]['title'] if 1 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[1]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 1 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[1]['poster'] if 1 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 01
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[1]['title'] if 1 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_02: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[2]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 2 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[2]['flag'] if 2 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[2]['title'] if 2 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[2]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 2 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[2]['poster'] if 2 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 02
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[2]['title'] if 2 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_03: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[3]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 3 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[3]['flag'] if 3 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[3]['title'] if 3 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[3]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 3 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[3]['poster'] if 3 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 03
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[3]['title'] if 3 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_04: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[4]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 4 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[4]['flag'] if 4 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[4]['title'] if 4 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[4]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 4 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[4]['poster'] if 4 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 04
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[4]['title'] if 4 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_05: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[5]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 5 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[5]['flag'] if 5 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[5]['title'] if 5 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[5]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 5 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[5]['poster'] if 5 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 05
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[5]['title'] if 5 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_06: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[6]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 6 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[6]['flag'] if 6 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[6]['title'] if 6 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[6]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 6 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[6]['poster'] if 6 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 06
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[6]['title'] if 6 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_07: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[7]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 7 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[7]['flag'] if 7 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[7]['title'] if 7 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[7]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 7 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[7]['poster'] if 7 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 07
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[7]['title'] if 7 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_08: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[8]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 8 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[8]['flag'] if 8 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[8]['title'] if 8 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[8]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 8 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[8]['poster'] if 8 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 08
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[8]['title'] if 8 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_09: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[9]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 9 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[9]['flag'] if 9 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[9]['title'] if 9 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[9]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 9 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[9]['poster'] if 9 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 09
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[9]['title'] if 9 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_10: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[10]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 10 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[10]['flag'] if 10 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[10]['title'] if 10 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[10]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 10 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[10]['poster'] if 10 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 10
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[10]['title'] if 10 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_11: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[11]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 11 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[11]['flag'] if 11 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[11]['title'] if 11 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[11]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 11 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[11]['poster'] if 11 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 11
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[11]['title'] if 11 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
        lovelace_radarr_upcoming_12: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[12]['airdate'])  | timestamp_custom ('%A %-d %b, %H:%M') if 12 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            downloaded: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[12]['flag'] if 12 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            name: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[12]['title'] if 12 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.radarr_upcoming_media', 'data')[12]['airdate'])  | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if 12 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
            poster: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[12]['poster'] if 12 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else "None"}}
")
          entity_id: ?
            - sensor.radarr_upcoming_media
          friendly_name: Lovelace - Radarr Upcoming 12
          value_template: Template("{{state_attr('sensor.radarr_upcoming_media', 'data')[12]['title'] if 12 <= state_attr('sensor.radarr_upcoming_media', 'data')| count -1 else 'None'}}
")
    - platform: template
      sensors: ?
        lovelace_sonarr_upcoming_01: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[1]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[1]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[1]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[1]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[1]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[1]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[1]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[1]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[1]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[1]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[1]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[1]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[1]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[1]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 01
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[1]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[1]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_02: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[2]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[2]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[2]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[2]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[2]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[2]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[2]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[2]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[2]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[2]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[2]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[2]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[2]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[2]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 02
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[2]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[2]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_03: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[3]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[3]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[3]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[3]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[3]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[3]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[3]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[3]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[3]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[3]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[3]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[3]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[3]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[3]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 03
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[3]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[3]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_04: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[4]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[4]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[4]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[4]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[4]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[4]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[4]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[4]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[4]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[4]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[4]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[4]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[4]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[4]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 04
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[4]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[4]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_05: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[5]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[5]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[5]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[5]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[5]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[5]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[5]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[5]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[5]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[5]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[5]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[5]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[5]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[5]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 05
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[5]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[5]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_06: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[6]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[6]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[6]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[6]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[6]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[6]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[6]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[6]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[6]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[6]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[6]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[6]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[6]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[6]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 06
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[6]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[6]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_07: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[7]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[7]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[7]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[7]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[7]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[7]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[7]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[7]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[7]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[7]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[7]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[7]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[7]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[7]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 07
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[7]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[7]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_08: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[8]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[8]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[8]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[8]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[8]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[8]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[8]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[8]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[8]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[8]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[8]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[8]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[8]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[8]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 08
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[8]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[8]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_09: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[9]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[9]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[9]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[9]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[9]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[9]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[9]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[9]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[9]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[9]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[9]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[9]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[9]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[9]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 09
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[9]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[9]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_10: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[10]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[10]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[10]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[10]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[10]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[10]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[10]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[10]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[10]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[10]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[10]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[10]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[10]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[10]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 10
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[10]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[10]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_11: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[11]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[11]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[11]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[11]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[11]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[11]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[11]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[11]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[11]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[11]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[11]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[11]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[11]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[11]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 11
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[11]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[11]['title'] is defined else 'None'}}
")
        lovelace_sonarr_upcoming_12: ?
          attribute_templates: ?
            date: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[12]['airdate']) | timestamp_custom ('%A %-d %b, %H:%M') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[12]['airdate']) is defined else "None"}}
")
            downloaded: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[12]['flag'] if state_attr('sensor.sonarr_upcoming_media', 'data')[12]['flag'] is defined else "None"}}
")
            episode: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[12]['episode'] if state_attr('sensor.sonarr_upcoming_media', 'data')[12]['episode'] is defined else 'None'}}
")
            name: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[12]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[12]['title'] is defined else 'None'}}
")
            number: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[12]['number'] if state_attr('sensor.sonarr_upcoming_media', 'data')[12]['number'] is defined else 'None'}}
")
            onairtoday: Template("{{as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[12]['airdate']) | timestamp_custom ('%Y/%m/%d') == as_timestamp(now()) | timestamp_custom ('%Y/%m/%d') if as_timestamp(state_attr('sensor.sonarr_upcoming_media', 'data')[12]['airdate'])  is defined else "None"}}
")
            poster: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[12]['poster'] if state_attr('sensor.sonarr_upcoming_media', 'data')[12]['poster'] is defined else "None"}}
")
          entity_id: ?
            - sensor.sonarr_upcoming_media
          friendly_name: Lovelace - Sonarr Upcoming 12
          value_template: Template("{{state_attr('sensor.sonarr_upcoming_media', 'data')[12]['title'] if state_attr('sensor.sonarr_upcoming_media', 'data')[12]['title'] is defined else 'None'}}
")
    - platform: time_date
      display_options: ?
        - time
        - date
        - date_time
        - time_utc
        - beat
    - platform: worldclock
      name: Time - London
      time_zone: Europe/London
    - platform: worldclock
      name: Time - New York
      time_zone: America/New_York
    - platform: template
      sensors: ?
        after_tomorrow: ?
          attribute_templates: ?
          friendly_name: After Tomorrow
          value_template: Template("{% set date = states('sensor.date') %} {% set datetime = strptime(date, '%Y-%m-%d') %} {% set timestamp = as_timestamp(datetime) + 2*24*60*60 %} {{ timestamp | timestamp_custom('%A') }}")
        date_friendly: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date
          friendly_name: Date
          friendly_name_template: Template("{% set date = states('sensor.date') %} {% set datetime = strptime(date, '%Y-%m-%d') %} {{ datetime.strftime('%A') }}")
          icon_template: Template("mdi:calendar-today")
          value_template: Template("{% set date = states('sensor.date') %} {% set datetime = strptime(date, '%Y-%m-%d') %} {% set month = datetime.strftime('%B') %} {% set day = datetime.strftime('%d') | int %} {{ month }} {{ day }}")
        date_long: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date
          friendly_name: Date
          icon_template: Template("mdi:calendar-today")
          value_template: Template("{% set date = states('sensor.date') %} {% set datetime = strptime(date, '%Y-%m-%d') %} {% set weekday = datetime.strftime('%A') %} {% set month = datetime.strftime('%B') %} {% set day = datetime.strftime('%d') | int %} {%
  set suffix = 'st' if (day % 10 == 1 and day != 11)
  else 'nd' if (day % 10 == 2 and day != 12)
  else 'rd' if (day % 10 == 3 and day != 13)
  else 'th'
%} {{ weekday }}, {{ month }} {{ day }}{{ suffix }}")
        date_long_format: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date
          friendly_name: Date Long Format
          value_template: Template("{% set months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] %} {% set month = months[now().strftime('%m') | int -1] %} {% set days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]  %} {% set day = days[now().strftime('%w') | int] %} {% set daynum = now().strftime('%d') | int %} {%
  set suffix = 'st' if (daynum % 10 == 1 and daynum != 11)
  else 'nd' if (daynum % 10 == 2 and daynum != 12)
  else 'rd' if (daynum % 10 == 3 and daynum != 13)
  else 'th'
%} {{day}}, {{month}} {{daynum}}{{suffix}} {{now().strftime('%Y')}}
")
        time_friendly: ?
          attribute_templates: ?
          friendly_name: Time
          icon_template: Template("mdi:clock")
          value_template: Template("{% set hour = states('sensor.time').split(':')[0] | int %} {% set minutes = states('sensor.time').split(':')[1] %} {{ hour }}:{{ minutes }}")
        time_long: ?
          attribute_templates: ?
          friendly_name: Time
          icon_template: Template("mdi:clock")
          value_template: Template("{% set hour = states('sensor.time').split(':')[0] | int %} {% set minute = states('sensor.time').split(':')[1] | int %} {% set minute_str = '' %} {% if minute == 15 or minute == 45 %}
  {% set minute_str = 'a quarter' %}
{% elif minute == 30 %}
  {% set minute_str = 'half' %}
{% else %}
  {% if minute > 30 %}
    {% set minute_str = (60 - minute) | string %}
  {% elif minute != 0 %}
    {% set minute_str = minute | string %}
  {% endif %}
  {% if minute_str %}
    {% if minute > 1 %}
      {% set minute_str = minute_str + ' minutes' %}
    {% else %}
      {% set minute_str = minute_str + ' minute' %}
    {% endif %}
  {% endif %}
{% endif %} {% if minute > 30 %}
  {% set minute_str = minute_str + ' to' %}
  {% set hour = hour + 1 %}
  {% if hour >= 24 %}
    {% set hour = hour - 24 %}
  {% endif %}
{% elif minute > 0 %}
  {% set minute_str = minute_str + ' past' %}
{% endif %} {% if hour == 0 %}
  {% set hour_str = 'midnight' %}
{% elif hour == 12 %}
  {% set hour_str = 'noon' %}
{% elif hour > 12 %}
  {% set hour_str = hour - 12 %}
{% else %}
  {% set hour_str = hour %}
{% endif %} {% if minute_str %}
  {{ minute_str }} {{ hour_str }}
{% elif hour != 0 and hour != 12 %}
  {{ hour_str }} O'Clock
{% else %}
  {{ hour_str }}
{% endif %}")
        time_quarterly: ?
          attribute_templates: ?
          friendly_name: Time
          icon_template: Template("mdi:clock")
          value_template: Template("{% set hour = states('sensor.time').split(':')[0] | int %} {% set minutes = states('sensor.time').split(':')[1] | int %} {% if minutes >= 45 %}
  {% set minute = '45' %}
{% elif minutes >= 30 %}
  {% set minute = '30' %}
{% elif minutes >= 15 %}
  {% set minute = '15' %}
{% else %}
  {% set minute = '00' %}
{% endif %} {{ hour }}:{{ minute }}")
    - platform: template
      sensors: ?
        count_all_entities: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: All Entities
          icon_template: Template("mdi:code-tags")
          value_template: Template("{{ states | count }}")
        count_automations: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Automations
          icon_template: Template("mdi:robot")
          value_template: Template("{{ states.automation | list | length }}")
        count_binary_sensors: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Binary Sensors
          icon_template: Template("mdi:checkbox-multiple-marked-circle")
          value_template: Template("{{ states.binary_sensor | list | length }}")
        count_calendars: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Calendars
          icon_template: Template("mdi:calendar")
          value_template: Template("{{ states.calendar | list | length }}")
        count_cameras: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Cameras
          icon_template: Template("mdi:cctv")
          value_template: Template("{{ states.camera | list | length }}")
        count_device_trackers: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Devices
          icon_template: Template("mdi:cellphone-link")
          value_template: Template("{{ states.device_tracker | list | length }}")
        count_geolocation: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Geo Locations
          icon_template: Template("mdi:map-plus")
          value_template: Template("{{ states.geo_location | list | length }}")
        count_groups: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Groups
          icon_template: Template("mdi:group")
          value_template: Template("{{ states.group | list | length }}")
        count_input_booleans: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Input Booleans
          icon_template: Template("mdi:toggle-switch")
          value_template: Template("{{ states.input_boolean | list | length }}")
        count_input_datetimes: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Input Date Times
          icon_template: Template("mdi:calendar")
          value_template: Template("{{ states.input_datetime | list | length }}")
        count_input_numbers: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Input Numbers
          icon_template: Template("mdi:numeric")
          value_template: Template("{{ states.input_number | list | length }}")
        count_input_selects: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Input Selects
          icon_template: Template("mdi:format-align-justify")
          value_template: Template("{{ states.input_select | list | length }}")
        count_input_texts: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Input Texts
          icon_template: Template("mdi:alphabetical")
          value_template: Template("{{ states.input_text | list | length }}")
        count_lights: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Lights
          icon_template: Template("mdi:lightbulb-on")
          value_template: Template("{{ states.light | list | length }}")
        count_mediaplayers: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Media Players
          icon_template: Template("mdi:cast-connected")
          value_template: Template("{{ states.media_player | list | length }}")
        count_remotes: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Remotes
          icon_template: Template("mdi:remote")
          value_template: Template("{{ states.remote | list | length }}")
        count_scripts: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Scripts
          icon_template: Template("mdi:script-text-outline")
          value_template: Template("{{ states.script | list | length }}")
        count_sensors: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Sensors
          icon_template: Template("mdi:pulse")
          value_template: Template("{{ states.sensor | list | length }}")
        count_switches: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Switches
          icon_template: Template("mdi:power-socket-us")
          value_template: Template("{{ states.switch | list | length }}")
        count_zones: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Zones
          icon_template: Template("mdi:map-marker-radius")
          value_template: Template("{{ states.zone | list | length }}")
    - platform: mqtt
      force_update: False
      name: HA Restart Time
      payload_available: online
      payload_not_available: offline
      qos: 0
      state_topic: harestart
    - platform: sql
      db_url: mysql://hass:hass@core-mariadb/homeassistant?charset=utf8
      queries: ?
        - column: value
          name: HA DB Size
          query: SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;
          unit_of_measurement: Mb
        - column: number_events
          name: HA DB Events
          query: SELECT count(*) number_events, max(created) max_time, min(created) min_time FROM events;
          unit_of_measurement: rows
        - column: number_states
          name: HA DB States
          query: SELECT count(*) number_states, max(created) max_time, min(created) min_time FROM states;
          unit_of_measurement: rows
      scan_interval: 0:02:00
    - platform: template
      sensors: ?
        empty: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Empty
          value_template: Template(" ")
        zero: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.date_time
          friendly_name: Zero
          value_template: Template("0")
    - platform: template
      sensors: ?
        day_phase: ?
          attribute_templates: ?
          friendly_name: Day Phase
          value_template: Template("{% if now() > now().replace(hour=5).replace(minute=0).replace(second=0) and
    now() < now().replace(hour=9).replace(minute=0).replace(second=0) %}
    Morning
{% elif states.sun.sun.state == "above_horizon" %}
    Day
{% elif now() < now().replace(hour=22).replace(minute=0).replace(second=0) and
    now() > now().replace(hour=9).replace(minute=0).replace(second=0) %}
    Evening
{% else %}
    Night
{% endif %}
")
    - platform: version
      beta: False
      image: qemux86-64
      name: HA Latest Version
      source: hassio
    - platform: version
      beta: False
      image: default
      name: HA Current Version
      source: local
    - platform: uptime
      name: HA Uptime Hours
      unit_of_measurement: hours
    - platform: rest
      force_update: False
      json_attributes: ?
      method: GET
      name: Hass Current Beta Version
      resource: https://s3.amazonaws.com/hassio-version/beta.json
      scan_interval: 2:00:00
      timeout: 10
      value_template: Template("{{ value_json.homeassistant['qemux86-64'] }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: ?
      method: GET
      name: Hass Current Dev Version
      resource: https://s3.amazonaws.com/hassio-version/dev.json
      scan_interval: 2:00:00
      timeout: 10
      value_template: Template("{{ value_json.homeassistant['qemux86-64'] }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: ?
      method: GET
      name: Hass Current Supervisor Version
      resource: https://s3.amazonaws.com/hassio-version/stable.json
      scan_interval: 2:00:00
      timeout: 10
      value_template: Template("{{ value_json.supervisor }}")
      verify_ssl: True
    - platform: rest
      force_update: False
      json_attributes: ?
      method: GET
      name: Hass Beta Supervisor Version
      resource: https://s3.amazonaws.com/hassio-version/beta.json
      scan_interval: 2:00:00
      timeout: 10
      value_template: Template("{{ value_json.supervisor }}")
      verify_ssl: True
    - platform: rest
      authentication: basic
      force_update: False
      headers: ?
        Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiIyZDI3NjE1MmZiYmE0M2QyOWM1YWYyZTU1ODdmZjg2NSIsImlhdCI6MTU3NzUyNDA4NiwiZXhwIjoxODkyODg0MDg2fQ.7xBRxefCmH8oEovR_F2yUKBgBduLsE1ESch1mDfpNeM
        Content-Type: application/json
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/homeassistant/versions.yaml:83]
        - components
        - unit_system
        - config_dir
        - version
      method: GET
      name: Hass Main config
      resource: http://192.168.1.63:8123/api/config
      timeout: 10
      value_template: Template("{{ value_json.version }}
")
      verify_ssl: True
    - platform: rest
      authentication: basic
      force_update: False
      headers: ?
        Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiIyZDI3NjE1MmZiYmE0M2QyOWM1YWYyZTU1ODdmZjg2NSIsImlhdCI6MTU3NzUyNDA4NiwiZXhwIjoxODkyODg0MDg2fQ.7xBRxefCmH8oEovR_F2yUKBgBduLsE1ESch1mDfpNeM
        Content-Type: application/json
        User-Agent: Home Assistant REST sensor
      json_attributes: [source /config/./packages/homeassistant/versions.yaml:99]
        - data
      method: GET
      name: Hass.io Info
      resource: http://192.168.1.63:8123/api/hassio/info
      timeout: 10
      value_template: Template("{{ value_json.result }}
")
      verify_ssl: True
    - platform: rest
      authentication: basic
      force_update: False
      headers: ?
        Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiIyZDI3NjE1MmZiYmE0M2QyOWM1YWYyZTU1ODdmZjg2NSIsImlhdCI6MTU3NzUyNDA4NiwiZXhwIjoxODkyODg0MDg2fQ.7xBRxefCmH8oEovR_F2yUKBgBduLsE1ESch1mDfpNeM
        Content-Type: application/json
        User-Agent: Home Assistant REST sensor
      json_attributes: ?
      method: GET
      name: hassos_installed_version
      resource: http://192.168.1.63:8123/api/hassio/info
      timeout: 10
      value_template: Template("{{ value_json.data.hassos }}
")
      verify_ssl: True
    - platform: template
      sensors: ?
        count_all_components: ?
          attribute_templates: ?
          entity_id: ?
            - sensor.hass_main_config
          friendly_name: All Components
          icon_template: Template("mdi:code-tags")
          value_template: Template("{{ states.sensor.hass_main_config.attributes.components | count }}")
  counter:
    logs_critical_counter: ?
      icon: mdi:alert
      initial: 0
      maximum: None
      minimum: None
      name: Critical
      restore: True
      step: 1
    logs_error_counter: ?
      icon: mdi:alert
      initial: 0
      maximum: None
      minimum: None
      name: Error
      restore: True
      step: 1
    logs_warning_counter: ?
      icon: mdi:alert
      initial: 0
      maximum: None
      minimum: None
      name: Warnings
      restore: True
      step: 1
  recorder:
    auto_purge: True
    commit_interval: 1
    db_max_retries: 10
    db_retry_wait: 3
    db_url: mysql://hass:hass@core-mariadb/homeassistant?charset=utf8
    exclude: ?
      domains: ?
        - anniversaries
        - automation
        - calendar
        - camera
        - device_tracker
        - group
        - geo_location
        - light
        - media_player
        - persistent_notification
        - switch
        - weblink
        - zone
      entities: ?
        - binary_sensor.iss
        - binary_sensor.tbsh01_ha_dockermon_db
        - binary_sensor.tbsh01_ha_dockermon_duplicati
        - binary_sensor.tbsh01_ha_dockermon_glances
        - binary_sensor.tbsh01_ha_dockermon_guacamole
        - binary_sensor.tbsh01_ha_dockermon_ha_dockermon
        - binary_sensor.tbsh01_ha_dockermon_netdata
        - binary_sensor.tbsh01_ha_dockermon_nginxproxymanager
        - binary_sensor.tbsh01_ha_dockermon_ouroboros
        - binary_sensor.tbsh01_ha_dockermon_portainer
        - binary_sensor.tbsh01_ha_dockermon_unifi
        - binary_sensor.vmtbsh01_ha_dockermon_duplicati
        - binary_sensor.vmtbsh01_ha_dockermon_glances
        - binary_sensor.vmtbsh01_ha_dockermon_grafana
        - binary_sensor.vmtbsh01_ha_dockermon_ha_dockermon
        - binary_sensor.vmtbsh01_ha_dockermon_jackett
        - binary_sensor.vmtbsh01_ha_dockermon_netdata
        - binary_sensor.vmtbsh01_ha_dockermon_nzbhydra2
        - binary_sensor.vmtbsh01_ha_dockermon_ouroboros
        - binary_sensor.vmtbsh01_ha_dockermon_portainer
        - binary_sensor.vmtbsh01_ha_dockermon_radarr
        - binary_sensor.vmtbsh01_ha_dockermon_sabnzbd
        - binary_sensor.vmtbsh01_ha_dockermon_sonarr
        - binary_sensor.vmtbsh01_ha_dockermon_tautulli
        - binary_sensor.vmtbsh01_ha_dockermon_transmission
        - binary_sensor.vmtbsh01_ha_dockermon_tvheadend
        - binary_sensor.vmtbsh02_ha_dockermon_chronograf
        - binary_sensor.vmtbsh02_ha_dockermon_duplicati
        - binary_sensor.vmtbsh02_ha_dockermon_glances
        - binary_sensor.vmtbsh02_ha_dockermon_ha_dockermon
        - binary_sensor.vmtbsh02_ha_dockermon_hassio_dns
        - binary_sensor.vmtbsh02_ha_dockermon_hassio_supervisor
        - binary_sensor.vmtbsh02_ha_dockermon_homeassistant
        - binary_sensor.vmtbsh02_ha_dockermon_influxdb
        - binary_sensor.vmtbsh02_ha_dockermon_kapacitor
        - binary_sensor.vmtbsh02_ha_dockermon_netdata
        - binary_sensor.vmtbsh02_ha_dockermon_ouroboros
        - binary_sensor.vmtbsh02_ha_dockermon_portainer
        - binary_sensor.vmtbsh02_ha_dockermon_telegraf
        - sensor.date
        - sensor.date_long_format
        - sensor.date_time
        - sensor.ha_uptime_hours
        - sensor.systemuptime
        - sensor.hateful8_uptime
        - sensor.rssfeed_cnn
        - sensor.rssfeed_fox_sports
        - sensor.rssfeed_news_com_au
        - sensor.rssfeed_northern_daily_leader
        - sensor.rssfeed_sky_news_uk
        - sensor.rssfeed_sky_sports_uk
        - sensor.rssfeed_sydney_morning_herald
        - sensor.rssfeed_the_guardian_au
        - sensor.rssfeed_the_guardian_uk
        - sensor.thecube2_uptime
        - sensor.time
        - sensor.time_london
        - sensor.time_new_york
        - sensor.time_utc
        - sensor.ufo_uptime
        - sensor.unifi_gateway_3_bytes_received
        - sensor.unifi_gateway_3_bytes_sent
        - sensor.unifi_gateway_3_kbyte_sec_received
        - sensor.unifi_gateway_3_kbyte_sec_sent
        - sensor.unifi_gateway_3_packets_received
        - sensor.unifi_gateway_3_packets_sec_received
        - sensor.unifi_gateway_3_packets_sec_sent
        - sensor.unifi_gateway_3_packets_sent
        - sensor.unifi_gateway_www_uptime
        - sensor.usg_lan_in
        - sensor.usg_lan_in_stats
        - sensor.usg_lan_in_mbps
        - sensor.usg_lan_out
        - sensor.usg_lan_out_stats
        - sensor.usg_lan_out_mbps
        - sensor.usg_uptime
        - sensor.usg_wan_in
        - sensor.usg_wan_in_stats
        - sensor.usg_wan_in_mbps
        - sensor.usg_wan_out
        - sensor.usg_wan_out_stats
        - sensor.usg_wan_out_mbps
        - sun.sun
        - sensor.iss_location
        - sensor.piserv_containers_active
        - sensor.piserv_containers_cpu_used
        - sensor.piserv_containers_ram_used
        - sensor.piserv_cpu_load
        - sensor.piserv_cpu_temp
        - sensor.piserv_cpu_used
        - sensor.piserv_disk_free
        - sensor.piserv_disk_used
        - sensor.piserv_disk_used_percent
        - sensor.piserv_ram_free
        - sensor.piserv_ram_used
        - sensor.piserv_ram_used_percent
        - sensor.piserv_running
        - sensor.piserv_sleeping
        - sensor.piserv_swap_free
        - sensor.piserv_swap_used
        - sensor.piserv_swap_used_percent
        - sensor.piserv_thread
        - sensor.piserv_total
        - sensor.piserv_uptime
        - sensor.pvetbsh_containers_active
        - sensor.pvetbsh_containers_cpu_used
        - sensor.pvetbsh_containers_ram_used
        - sensor.pvetbsh_cpu_load
        - sensor.pvetbsh_cpu_temp
        - sensor.pvetbsh_disk_free
        - sensor.pvetbsh_disk_used
        - sensor.pvetbsh_disk_used_percent
        - sensor.pvetbsh_ram_free
        - sensor.pvetbsh_ram_used
        - sensor.pvetbsh_ram_used_percent
        - sensor.pvetbsh_running
        - sensor.pvetbsh_sleeping
        - sensor.pvetbsh_swap_free
        - sensor.pvetbsh_swap_used
        - sensor.pvetbsh_swap_used_percent
        - sensor.pvetbsh_thread
        - sensor.pvetbsh_total
        - sensor.pvetbsh_uptime
        - sensor.tbsh01_containers_active
        - sensor.tbsh01_containers_cpu_used
        - sensor.tbsh01_containers_paused
        - sensor.tbsh01_containers_ram_used
        - sensor.tbsh01_containers_running
        - sensor.tbsh01_containers_stopped
        - sensor.tbsh01_containers_total
        - sensor.tbsh01_cpu_load
        - sensor.tbsh01_cpu_temp
        - sensor.tbsh01_cpu_used
        - sensor.tbsh01_disk_free
        - sensor.tbsh01_disk_used
        - sensor.tbsh01_disk_used_percent
        - sensor.tbsh01_duplicati_cpu_use
        - sensor.tbsh01_duplicati_image
        - sensor.tbsh01_duplicati_memory_use
        - sensor.tbsh01_duplicati_memory_use_percent
        - sensor.tbsh01_duplicati_network_total_down
        - sensor.tbsh01_duplicati_network_total_up
        - sensor.tbsh01_duplicati_status
        - sensor.tbsh01_duplicati_up_time
        - sensor.tbsh01_images_total
        - sensor.tbsh01_ram_free
        - sensor.tbsh01_ram_used
        - sensor.tbsh01_ram_used_percent
        - sensor.tbsh01_running
        - sensor.tbsh01_sleeping
        - sensor.tbsh01_swap_free
        - sensor.tbsh01_swap_used
        - sensor.tbsh01_swap_used_percent
        - sensor.tbsh01_thread
        - sensor.tbsh01_total
        - sensor.tbsh01_uptime
        - sensor.tbsh01_version
        - sensor.unifi_gateway_3_bytes_received
        - sensor.unifi_gateway_3_bytes_sent
        - sensor.unifi_gateway_3_kbyte_sec_received
        - sensor.unifi_gateway_3_kbyte_sec_sent
        - sensor.unifi_gateway_3_packets_received
        - sensor.unifi_gateway_3_packets_sec_received
        - sensor.unifi_gateway_3_packets_sec_sent
        - sensor.unifi_gateway_3_packets_sent
        - sensor.unifi_gateway_alerts
        - sensor.unifi_gateway_firmware_upgradable
        - sensor.unifi_gateway_lan
        - sensor.unifi_gateway_lan_sw
        - sensor.unifi_gateway_lan_user
        - sensor.unifi_gateway_vpn
        - sensor.unifi_gateway_wan
        - sensor.unifi_gateway_wan_cpu
        - sensor.unifi_gateway_wan_ip
        - sensor.unifi_gateway_wan_mem
        - sensor.unifi_gateway_wlan
        - sensor.unifi_gateway_wlan_ap
        - sensor.unifi_gateway_wlan_user
        - sensor.unifi_gateway_www
        - sensor.unifi_gateway_www_uptime
        - sensor.vmtbsh01_containers_active
        - sensor.vmtbsh01_containers_cpu_used
        - sensor.vmtbsh01_containers_paused
        - sensor.vmtbsh01_containers_ram_used
        - sensor.vmtbsh01_containers_running
        - sensor.vmtbsh01_containers_stopped
        - sensor.vmtbsh01_containers_total
        - sensor.vmtbsh01_cpu_load
        - sensor.vmtbsh01_cpu_temp
        - sensor.vmtbsh01_cpu_used
        - sensor.vmtbsh01_disk_free
        - sensor.vmtbsh01_disk_used
        - sensor.vmtbsh01_disk_used_percent
        - sensor.vmtbsh01_duplicati_cpu_use
        - sensor.vmtbsh01_duplicati_image
        - sensor.vmtbsh01_duplicati_memory_use
        - sensor.vmtbsh01_duplicati_memory_use_percent
        - sensor.vmtbsh01_duplicati_network_total_down
        - sensor.vmtbsh01_duplicati_network_total_up
        - sensor.vmtbsh01_duplicati_status
        - sensor.vmtbsh01_duplicati_up_time
        - sensor.vmtbsh01_images_total
        - sensor.vmtbsh01_radarr_cpu_use
        - sensor.vmtbsh01_radarr_image
        - sensor.vmtbsh01_radarr_memory_use
        - sensor.vmtbsh01_radarr_memory_use_percent
        - sensor.vmtbsh01_radarr_network_total_down
        - sensor.vmtbsh01_radarr_network_total_up
        - sensor.vmtbsh01_radarr_status
        - sensor.vmtbsh01_radarr_up_time
        - sensor.vmtbsh01_ram_free
        - sensor.vmtbsh01_ram_used
        - sensor.vmtbsh01_ram_used_percent
        - sensor.vmtbsh01_running
        - sensor.vmtbsh01_sleeping
        - sensor.vmtbsh01_sonarr_cpu_use
        - sensor.vmtbsh01_sonarr_image
        - sensor.vmtbsh01_sonarr_memory_use
        - sensor.vmtbsh01_sonarr_memory_use_percent
        - sensor.vmtbsh01_sonarr_network_total_down
        - sensor.vmtbsh01_sonarr_network_total_up
        - sensor.vmtbsh01_sonarr_status
        - sensor.vmtbsh01_sonarr_up_time
        - sensor.vmtbsh01_swap_free
        - sensor.vmtbsh01_swap_used
        - sensor.vmtbsh01_swap_used_percent
        - sensor.vmtbsh01_thread
        - sensor.vmtbsh01_total
        - sensor.vmtbsh01_uptime
        - sensor.vmtbsh01_version
        - sensor.vmtbsh02_containers_active
        - sensor.vmtbsh02_containers_cpu_used
        - sensor.vmtbsh02_containers_paused
        - sensor.vmtbsh02_containers_ram_used
        - sensor.vmtbsh02_containers_running
        - sensor.vmtbsh02_containers_stopped
        - sensor.vmtbsh02_containers_total
        - sensor.vmtbsh02_cpu_load
        - sensor.vmtbsh02_cpu_temp
        - sensor.vmtbsh02_cpu_used
        - sensor.vmtbsh02_disk_free
        - sensor.vmtbsh02_disk_used
        - sensor.vmtbsh02_disk_used_percent
        - sensor.vmtbsh02_duplicati_cpu_use
        - sensor.vmtbsh02_duplicati_image
        - sensor.vmtbsh02_duplicati_memory_use
        - sensor.vmtbsh02_duplicati_memory_use_percent
        - sensor.vmtbsh02_duplicati_network_total_down
        - sensor.vmtbsh02_duplicati_network_total_up
        - sensor.vmtbsh02_duplicati_status
        - sensor.vmtbsh02_duplicati_up_time
        - sensor.vmtbsh02_homeassistant_cpu_use
        - sensor.vmtbsh02_homeassistant_image
        - sensor.vmtbsh02_homeassistant_memory_use
        - sensor.vmtbsh02_homeassistant_memory_use_percent
        - sensor.vmtbsh02_homeassistant_network_total_down
        - sensor.vmtbsh02_homeassistant_network_total_up
        - sensor.vmtbsh02_homeassistant_status
        - sensor.vmtbsh02_homeassistant_up_time
        - sensor.vmtbsh02_images_total
        - sensor.vmtbsh02_ram_free
        - sensor.vmtbsh02_ram_used
        - sensor.vmtbsh02_ram_used_percent
        - sensor.vmtbsh02_running
        - sensor.vmtbsh02_sleeping
        - sensor.vmtbsh02_swap_free
        - sensor.vmtbsh02_swap_used
        - sensor.vmtbsh02_swap_used_percent
        - sensor.vmtbsh02_thread
        - sensor.vmtbsh02_total
        - sensor.vmtbsh02_uptime
        - sensor.vmtbsh02_version
        - sensor.hassio_appdaemon_rest
        - sensor.hassio_deconz_rest
        - sensor.hassio_influxdb_rest
        - sensor.hassio_mariadb_rest
        - sensor.hassio_mqtt_rest
        - sensor.hassio_nodered_rest
        - sensor.hassio_sshweb_rest
        - sensor.hassio_vscode_rest
        - sensor.plex_recently_added
        - sensor.plex_recently_added_movies
        - sensor.plex_recently_added_tv
        - sensor.sonarr_upcoming_media
        - sensor.radarr_upcoming_media
        - sensor.time_friendly
        - sensor.time_long
        - sensor.here_travel_tom_to_work_arrivetime
        - sensor.here_travel_tom_to_home_arrivetime
        - sensor.waze_travel_tom_to_work_arrivetime
        - sensor.waze_travel_tom_to_home_arrivetime
        - sensor.192_168_1_50_cpu_3
      event_types: ?
        - service_removed
        - service_executed
        - platform_discovered
        - homeassistant_start
        - homeassistant_stop
        - feedreader
        - service_registered
        - call_service
        - component_loaded
        - logbook_entry
        - automation_triggered
        - script_started
        - timer_out_of_sync
    include: ?
    purge_interval: 1
    purge_keep_days: 7
  garbage_collection:
    sensors: ?
      - collection_days: ?
          - thu
        date_format: %d-%b-%Y
        expire_after: 12:00
        first_month: jan
        first_week: 1
        frequency: weekly
        hidden: False
        holiday_in_week_move: False
        icon_normal: mdi:trash-can
        icon_today: mdi:delete-restore
        icon_tomorrow: mdi:delete-circle
        last_month: dec
        name: binday_waste
        observed: True
        period: 1
        verbose_format: on {date}, in {days} days
        verbose_state: False
      - collection_days: ?
          - thu
        date_format: %d-%b-%Y
        expire_after: 12:00
        first_month: jan
        first_week: 1
        frequency: even-weeks
        hidden: False
        holiday_in_week_move: False
        icon_normal: mdi:trash-can
        icon_today: mdi:delete-restore
        icon_tomorrow: mdi:delete-circle
        last_month: dec
        name: binday_greenwaste
        observed: True
        period: 1
        verbose_format: on {date}, in {days} days
        verbose_state: False
      - collection_days: ?
          - thu
        date_format: %d-%b-%Y
        expire_after: 12:00
        first_month: jan
        first_week: 1
        frequency: odd-weeks
        hidden: False
        holiday_in_week_move: False
        icon_normal: mdi:trash-can
        icon_today: mdi:delete-restore
        icon_tomorrow: mdi:delete-circle
        last_month: dec
        name: binday_recycling
        observed: True
        period: 1
        verbose_format: on {date}, in {days} days
        verbose_state: False
  glances:
    - host: 192.168.1.20
      name: TBSH01
      port: 61208
      ssl: False
      verify_ssl: True
      version: 3
    - host: 192.168.1.61
      name: vmTBSH01
      port: 61208
      ssl: False
      verify_ssl: True
      version: 3
    - host: 192.168.1.62
      name: vmTBSH02
      port: 61208
      ssl: False
      verify_ssl: True
      version: 3
    - host: 192.168.1.40
      name: piServ
      port: 61208
      ssl: False
      verify_ssl: True
      version: 3
    - host: 192.168.1.60
      name: pveTBSH
      port: 61208
      ssl: False
      verify_ssl: True
      version: 3
    - host: 127.0.0.1
      name: vmTBSH03
      port: 61209
      ssl: False
      verify_ssl: True
      version: 3
  ifttt:
    key: csUdSuHOI-fxR2NQ36ES8
  logger:
    default: ERROR
  lovelace:
    dashboards: ?
      dwains-theme: ?
        filename: dwains-theme-lovelace.yaml
        icon: mdi:alpha-d-box
        mode: yaml
        require_admin: False
        show_in_sidebar: True
        title: Dwains Theme
    mode: yaml
    resources: ?
      - type: module
        url: /hacsfiles/bar-card/bar-card.js
      - type: module
        url: /hacsfiles/bom-weather-card/bom-weather-card.js
      - type: module
        url: /hacsfiles/config-template-card/config-template-card.js
      - type: module
        url: /hacsfiles/flex-horseshoe-card/flex-horseshoe-card.js
      - type: module
        url: /hacsfiles/flex-table-card/flex-table-card.js
      - type: module
        url: /hacsfiles/lovelace-card-tools/card-tools.js
      - type: module
        url: /hacsfiles/lovelace-fold-entity-row/fold-entity-row.js
      - type: js
        url: /hacsfiles/lovelace-multiple-entity-row/multiple-entity-row.js
      - type: js
        url: /hacsfiles/list-card/list-card.js
      - type: module
        url: /hacsfiles/mini-media-player/mini-media-player-bundle.js
      - type: module
        url: /hacsfiles/lovelace-slider-entity-row/slider-entity-row.js
      - type: module
        url: /hacsfiles/secondaryinfo-entity-row/secondaryinfo-entity-row.js
      - type: module
        url: /hacsfiles/stack-in-card/stack-in-card.js
      - type: module
        url: /hacsfiles/sun-card/sun-card.js
      - type: module
        url: /hacsfiles/mini-graph-card/mini-graph-card-bundle.js
      - type: css
        url: https://fonts.googleapis.com/css?family=Open+Sans&display=swap
      - type: module
        url: /local/dwains-theme/plugins/dwains-flexbox-card/dwains-flexbox-card.js?v=1.0.2
      - type: module
        url: /local/dwains-theme/plugins/dwains-weather-card/dwains-weather-card.js?v=0.0.2
      - type: module
        url: /local/dwains-theme/plugins/dwains-notification-card/dwains-notification-card.js?v=0.0.2
      - type: module
        url: /local/dwains-theme/plugins/dwains-cover-card/dwains-cover-card.js?v=0.0.2
      - type: module
        url: /local/dwains-theme/plugins/dwains-collapse-card/dwains-collapse-card.js?v=0.0.3
      - type: module
        url: /hacsfiles/custom-header/custom-header.js
      - type: module
        url: /hacsfiles/lovelace-card-mod/card-mod.js
      - type: module
        url: /hacsfiles/button-card/button-card.js
      - type: module
        url: /hacsfiles/light-entity-card/light-entity-card.js
      - type: module
        url: /hacsfiles/lovelace-auto-entities/auto-entities.js
      - type: module
        url: /hacsfiles/lovelace-more-info-card/more-info-card.js
      - type: module
        url: /hacsfiles/lovelace-state-switch/state-switch.js
      - type: module
        url: /hacsfiles/atomic_calendar/atomic_calendar.js
  digital_ocean:
    access_token: 69f0d8d3d6181d2380ee35d09fff749e6d594a4efd4a4d948cf5a7da14b6e5d3
  openuv:
    api_key: 077ddb27bfe8f7d0ec9ce494e551b00c
  dyson:
    devices: ?
    language: AU
    password: RedbullRB8
    retry: 10
    timeout: 5
    username: bacco007@me.com
  weather:
    - platform: bom
      name: Tamworth
      station: IDN60801.95762
    - platform: darksky
      api_key: 7a7d58cc1a87ad943243ec46bbf5e381
      mode: hourly
      name: Dark Sky
  transmission:
    - host: 192.168.1.61
      name: Transmission
      password: RedbullRB8
      port: 9091
      scan_interval: 0:02:00
      username: bacco007
  python_script:
  zeroconf:
    default_interface: False
  panel_iframe:
    jupyterlab: ?
      icon: mdi:language-python
      require_admin: False
      title: JupyterLab
      url: http://192.168.1.62:7777
  http:
    cors_allowed_origins: ?
      - https://cast.home-assistant.io
    ip_ban_enabled: True
    login_attempts_threshold: -1
    server_host: 0.0.0.0
    server_port: 8123
    ssl_profile: modern
  system_log:
    fire_event: True
    max_entries: 50
  sabnzbd:
    api_key: 2e90c4ecdbf55989f8369b2983ad7db8
    host: 192.168.1.61
    name: SABnzbd
    port: 8082
    sensors: ?
      - current_status
      - speed
      - queue_size
      - queue_remaining
      - queue_count
      - day_size
      - week_size
      - month_size
      - total_size
    ssl: False
  input_select:
    log_level: ?
      initial: warning
      name: Log Level
      options: ?
        - critical
        - fatal
        - error
        - warning
        - warn
        - info
        - debug
        - notset
    theme_selector: ?
      name: Theme Selector
      options: ?
        - Auto Mode (Dark/Light)
        - Dark Mode
        - Light Mode
        - Auto Mode (Black/White)
        - Black Mode
        - White Mode
  device_tracker:
    - platform: tile
      consider_home: 0:03:00
      monitored_variables: ?
        - PHONE
        - TILE
      new_device_defaults: ?
        track_new_devices: True
      password: RedbullRB8
      show_inactive: True
      username: thomas@thomasbaxter.info
  spotify:
    client_id: 53ce099fd8614df98a27e5ba6c73944b
    client_secret: 4cb3d9283b1c454c887eee7e584c97a0
  zone:
    - icon: mdi:domain
      latitude: -31.0927407
      longitude: 150.9305582
      name: TRC
      passive: False
      radius: 100.0
  updater:
    include_used_components: True
    reporting: True
  breaking_changes:
    name: Potential breaking changes
  automation:
    - action: ?
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template("Home Assistant Snapshot Failure
Snapshot Name: {{ trigger.event.data.name }}
Error: {{ trigger.event.data.error }}
")
                  title: Template("Home Assistant - Snapshot Failed
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: Auto Backup - Snapshot Failure
      trigger: ?
        - platform: event
          event_type: auto_backup.snapshot_failed
    - action: ?
        - entity_id: ?
            - sensor.bom_forecast_0
            - sensor.bom_forecast_1
            - sensor.bom_forecast_2
            - sensor.bom_forecast_3
            - sensor.bom_forecast_4
            - sensor.bom_forecast_5
            - sensor.bom_forecast_6
          service: homeassistant.update_entity
      alias: Weather - Update BOM Icons
      trigger: ?
        - platform: homeassistant
          event: start
        - platform: time
          at: 18:01:00
    - action: ?
        - data_template: ?
            addons: ?
              - Template("core_mariadb")
            folders: ?
              - Template("homeassistant")
              - Template("share")
              - Template("ssl")
              - Template("addons/local")
            keep_days: 2
            name: Template("AutoBackup: {{ now().strftime('%a, %-I:%M %p (%d/%m/%Y)') }}")
          service: auto_backup.snapshot_partial
      alias: Generational Backup - 3 Hourly
      trigger: ?
        - platform: time_pattern
          hours: /3
    - action: ?
        - data_template: ?
            keep_days: 7
            name: Template("DailyBackup: {{ now().strftime('%A, %B %-d, %Y') }}")
          service: auto_backup.snapshot_full
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template("New Home Assistant Daily Backup has been created
"DailyBackup: {{ now().strftime('%A, %B %-d, %Y') }}"
")
                  title: Template("Home Assistant - Daily Backup
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: Generational Backup - Daily
      condition: ?
        - condition: time
          weekday: ?
            - tue
            - wed
            - thu
            - fri
            - sat
            - sun
      trigger: ?
        - platform: time
          at: 02:30:00
    - action: ?
        - data_template: ?
            keep_days: 28
            name: Template("WeeklyBackup: {{ now().strftime('%A, %B %-d, %Y') }}")
          service: auto_backup.snapshot_full
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template("New Home Assistant Weekly Backup has been created
"WeeklyBackup: {{ now().strftime('%A, %B %-d, %Y') }}"
")
                  title: Template("Home Assistant - Weekly Backup
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: Generational Backup - Weekly
      condition: ?
        - condition: time
          weekday: ?
            - mon
      trigger: ?
        - platform: time
          at: 02:30:00
    - action: ?
        - data_template: ?
            message: Template("{% for repo in states.sensor.supervisor_installed.attributes.addons %}
  **{{ repo.name }}** _{{ repo["installed"] }}_ -> _{{ repo["version"] }}_
{% endfor %}")
            title: Template("HA Add-ons - Updates Available")
          service: persistent_notification.create
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template("Updates to HA Add-ons are available
")
                  title: Template("HA Add-ons - Updates Available
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: Admin - HA Supervisor Addon Available
      condition: ?
        - condition: template
          value_template: Template("{{ states.sensor.supervisor_installed.state != 'unknown'}}")
        - condition: template
          value_template: Template("{{ (states.sensor.supervisor_installed.state | float) != 0}}")
      trigger: ?
        - platform: state
          entity_id: ?
            - sensor.supervisor_installed
    - action: ?
        - data_template: ?
            message: Template("{% set repo = trigger.event.data.repository %} {% set id = trigger.event.data.repository_id %} [{{ repo }}](/hacs/repository/{{ id }}) was just added to HACS.")
            title: Template("HACS - New Repository Added")
          service: persistent_notification.create
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template("New repository added to HACS - See Persistant Notification for more details
")
                  title: Template("HACS - New Repository Added
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: HACS - New Repository Added
      condition: ?
        - condition: template
          value_template: Template("{{ trigger.event.data.repository is defined }}")
      trigger: ?
        - platform: event
          event_data: [source /config/./automations/hacs_newrepo.yaml:6]
            action: registration
          event_type: hacs/repository
    - action: ?
        - data_template: ?
            message: Template("{% for repo in state_attr(trigger.entity_id, 'repositories') %}
  **{{ repo.display_name }}** _{{ repo["installed_version"] }}_ -> _{{ repo["available_version"] }}_
{% endfor %}")
            title: Template("HACS - Updates Available")
          service: persistent_notification.create
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template("Updates to Custom Components are available
")
                  title: Template("HACS - Updates Available
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: HACS - Updates Available
      condition: ?
        - condition: template
          value_template: Template("{{ states(trigger.entity_id) != 'unknown'}}")
        - condition: template
          value_template: Template("{{ (states(trigger.entity_id) | float) != 0}}")
      trigger: ?
        - platform: state
          entity_id: ?
            - sensor.hacs
    - action: ?
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template("" {{ trigger.to_state.attributes.friendly_name }} says a future version has potential breaking changes "
")
                  title: Template("Home Assistant Potential Breaking Changes
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: Admin - Potential Breaking Changes
      initial_state: True
      trigger: ?
        - platform: numeric_state
          above: 0.0
          entity_id: ?
            - sensor.potential_breaking_changes
    - action: ?
        - service: readme.generate
      alias: Admin - Generate README.md
      condition: ?
      initial_state: True
      trigger: ?
        - platform: time
          at: 05:00:00
    - action: ?
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template("New Home Assistant Version
Current - {{ states.sensor.ha_current_version.state }}
New - {{ states.sensor.ha_latest_version.state }}
")
                  title: Template("New HA Version
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
        - data_template: ?
            message: Template("New Home Assistant Version Current - {{ states.sensor.ha_current_version.state }} New - {{ states.sensor.ha_latest_version.state }}")
            notification_id: Template("hassio_upgrade")
            title: Template("New HA Version")
          service: persistent_notification.create
      alias: Admin - New Home Assistant Version
      trigger: ?
        - platform: state
          entity_id: ?
            - sensor.ha_latest_version
    - action: ?
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template("Home Assistant Started
")
                  title: Template("Home Assistant Started
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: Admin - Home Assistant Started
      trigger: ?
        - platform: homeassistant
          event: start
    - action: ?
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template("Home Assistant Stopped
")
                  title: Template("Home Assistant Stopped
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: Admin - Home Assistant Stopped
      trigger: ?
        - platform: homeassistant
          event: shutdown
    - action: ?
        - service: openuv.update_data
      alias: OpenUV - Update During Day (30min Interval)
      condition: ?
        - condition: and
          conditions: ?
            - after: sunrise
              condition: sun
            - before: sunset
              condition: sun
      trigger: ?
        - platform: time_pattern
          minutes: /30
    - action: ?
        - service: python_script.ha_overview
      alias: Python Script - Update ha_overview
      trigger: ?
        - platform: homeassistant
          event: start
        - platform: time_pattern
          minutes: /10
    - action: ?
        - entity_id: ?
            - light.zha_office_light
          service: light.toggle
      alias: Switch - Turn off Lamp
      description: 
      initial_state: True
      trigger: ?
        - platform: device
          device_id: b08ad3d565af4d56b400814a5ec32438
          domain: deconz
          subtype: turn_on
          type: remote_button_short_release
    - action: ?
        - data: [source /config/./automations/switch_sonos.yaml:14]
          entity_id: ?
            - media_player.bedroom_sonos
          service: media_player.media_stop
      alias: Switch - Turn off Sonos
      condition: ?
        - condition: state
          entity_id: media_player.bedroom_sonos
          state: playing
      description: 
      trigger: ?
        - platform: device
          device_id: b08ad3d565af4d56b400814a5ec32438
          domain: deconz
          subtype: turn_on
          type: remote_button_short_release
    - action: ?
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template(""{{trigger.event.data.name}}"
")
                  title: Template("Transmission - Torrent Completed
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: Transmission (Torrents) - Torrent Completed
      trigger: ?
        - platform: event
          event_type: transmission_downloaded_torrent
    - action: ?
        - data_template: ?
            data: ?
              attachments: ?
                - color: Template("#800400
")
                  text: Template(""{{trigger.event.data.name}}"
")
                  title: Template("Transmission - Torrent Started
")
            message: Template("")
            target: Template("#tbsmarthome")
          service: notify.slack
      alias: Transmission (Torrents) - Torrent Started
      trigger: ?
        - platform: event
          event_type: transmission_started_torrent
    - action: ?
        - data_template: ?
            name: Template("{% if (is_state('sun.sun', 'above_horizon')) and (is_state('input_select.theme_selector', 'Auto Mode (Dark/Light)'))  %}
  dwains-theme-light
{% elif (is_state('sun.sun', 'below_horizon')) and (is_state('input_select.theme_selector', 'Auto Mode (Dark/Light)'))  %}
  dwains-theme-dark
{% elif is_state('input_select.theme_selector', 'Dark Mode') %}
  dwains-theme-dark
{% elif is_state('input_select.theme_selector', 'Light Mode') %}
  dwains-theme-light
{% elif (is_state('sun.sun', 'above_horizon')) and (is_state('input_select.theme_selector', 'Auto Mode (Black/White)'))  %}
  dwains-theme-white
{% elif (is_state('sun.sun', 'below_horizon')) and (is_state('input_select.theme_selector', 'Auto Mode (Black/White)'))  %}
  dwains-theme-black
{% elif is_state('input_select.theme_selector', 'Black Mode') %}
  dwains-theme-black
{% elif is_state('input_select.theme_selector', 'White Mode') %}
  dwains-theme-white
{% else %}
  dwains-theme-light
{% endif %}")
          service: frontend.set_theme
      alias: themes
      initial_state: True
      trigger: ?
        - platform: state
          entity_id: ?
            - input_select.theme_selector
        - platform: homeassistant
          event: start
        - platform: state
          entity_id: ?
            - sun.sun
    - action: ?
        - entity_id: ?
            - counter.logs_warning_counter
          service: counter.increment
      alias: Logs - Warning Counter
      id: logs_warning_counter
      trigger: ?
        - platform: event
          event_data: [source /config/./packages/homeassistant/logger_counters.yaml:13]
            level: WARNING
          event_type: system_log_event
    - action: ?
        - entity_id: ?
            - counter.logs_error_counter
          service: counter.increment
      alias: Logs - Error Counter
      id: logs_error_counter
      trigger: ?
        - platform: event
          event_data: [source /config/./packages/homeassistant/logger_counters.yaml:23]
            level: ERROR
          event_type: system_log_event
    - action: ?
        - entity_id: ?
            - counter.logs_critical_counter
          service: counter.increment
      alias: Logs - Critical Counter
      id: logs_critical_counter
      trigger: ?
        - platform: event
          event_data: [source /config/./packages/homeassistant/logger_counters.yaml:33]
            level: CRITICAL
          event_type: system_log_event
    - action: ?
        - entity_id: ?
            - counter.logs_warning_counter
          service: counter.reset
        - entity_id: ?
            - counter.logs_critical_counter
          service: counter.reset
        - entity_id: ?
            - counter.logs_error_counter
          service: counter.reset
      alias: Logs - Counters reset on start
      id: logs_counter_reset
      trigger: ?
        - platform: homeassistant
          event: start
    - action: ?
        - data_template: ?
            level: Template("{{ states('input_select.log_level') }}")
          service: logger.set_default_level
      alias: Logger - Set Default Level
      id: logger_setdefaultlevel
      trigger: ?
        - platform: state
          entity_id: ?
            - input_select.log_level
  group:
    bedroom_media: ?
      entities: ?
        - media_player.apple_tv_bedroom
        - media_player.bedroom_display
        - media_player.foxtel_now_box
        - media_player.thomas_s_echo_plus
        - media_player.ua40es6200_ua40es6200
        - media_player.xbox_one
      name: Bedroom - Media
    bedroom_switch: ?
      entities: ?
        - binary_sensor.switchmonusb_01_status
        - binary_sensor.switchmonusb_02_status
      name: Bedroom - Power Switch
    lounge_media: ?
      entities: ?
        - media_player.sony_bravia_tv
      name: Lounge - Media
    office_media: ?
      entities: ?
        - media_player.bedroom_sonos
        - media_player.googlehome3140
      name: Office - Media
    opennem: ?
      entities: ?
        - sensor.opennem_nsw1_battery_charging
        - sensor.opennem_nsw1_battery_discharging
        - sensor.opennem_nsw1_biomass
        - sensor.opennem_nsw1_black_coal
        - sensor.opennem_nsw1_brown_coal
        - sensor.opennem_nsw1_distillate
        - sensor.opennem_nsw1_gas_ccgt
        - sensor.opennem_nsw1_gas_ocgt
        - sensor.opennem_nsw1_gas_recip
        - sensor.opennem_nsw1_gas_steam
        - sensor.opennem_nsw1_hydro
        - sensor.opennem_nsw1_pumps
        - sensor.opennem_nsw1_solar_rooftop
        - sensor.opennem_nsw1_solar_utility
        - sensor.opennem_nsw1_wind
      name: OpenNEM
    serverrack_device: ?
      entities: ?
        - sensor.pi_hole_status
      name: Server Rack - Devices
    sport_upcoming: ?
      entities: ?
        - sensor.sport_manu
        - sensor.sport_newengpats
        - sensor.sport_anaducks
        - sensor.sport_cricket
        - sensor.sport_yankees
        - sensor.sport_supercars
        - sensor.sport_f1
        - sensor.sport_wec
        - sensor.sport_nascar
        - sensor.sport_indycar
        - sensor.sport_newknights
        - sensor.sport_sydfc
        - sensor.sport_sydswans
      name: Upcoming Sport
  auto_backup:
    auto_purge: True
    backup_timeout: 1200
  mqtt:
    broker: 192.168.1.63
    discovery: False
    discovery_prefix: homeassistant
    keepalive: 60
    password: mqtt
    port: 1883
    protocol: 3.1.1
    tls_version: auto
    username: mqtt
  cloud:
    mode: production
  influxdb:
    component_config: ?
    component_config_domain: ?
    component_config_glob: ?
    database: homeassistant
    default_measurement: state
    exclude: ?
      domains: ?
      entities: ?
    host: 192.168.1.62
    include: ?
      domains: ?
      entities: ?
    max_retries: 5
    password: homeassistant
    port: 8086
    tags: ?
    tags_attributes: ?
    username: homeassistant
    verify_ssl: True
  conversation:
